
module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.IO.IFile;

    namespace Elastos {
    namespace Providers {
    namespace DownloadProvider {
    namespace Downloads {

    interface IDownloadDrmHelper
    {
        /**
         * Checks if the Media Type needs to be DRM converted
         *
         * @param mimetype Media type of the content
         * @return True if convert is needed else false
         */
        IsDrmConvertNeeded(
            [in] String mimetype,
            [out] Boolean* result);

        /**
         * Modifies the file extension for a DRM Forward Lock file NOTE: This
         * function shouldn't be called if the file shouldn't be DRM converted
         */
        ModifyDrmFwLockFileExtension(
            [in] String filename,
            [out] String* result);

        /**
         * Return the original MIME type of the given file, using the DRM framework
         * if the file is protected content.
         */
        GetOriginalMimeType(
            [in] IContext* context,
            [in] IFile* file,
            [in] String currentMime,
            [out] String* result);
    }

    } // namespace Downloads
    } // namespace DownloadProvider
    } // namespace Providers
    } // namespace Elastos
}
