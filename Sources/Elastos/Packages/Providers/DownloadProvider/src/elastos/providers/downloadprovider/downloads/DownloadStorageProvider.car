
module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Content.Res.IAssetFileDescriptor;
    using interface Elastos.Droid.Database.ICursor;
    using interface Elastos.Droid.Graphics.IPoint;
    using interface Elastos.Droid.Os.ICancellationSignal;
    using interface Elastos.Droid.Os.IParcelFileDescriptor;

    namespace Elastos {
    namespace Providers {
    namespace DownloadProvider {
    namespace Downloads {

    /**
     * Presents a {@link DocumentsContract} view of {@link DownloadManager}
     * contents.
     */
    [deprecated]
    interface IDownloadStorageProvider
    {
        OnCreate(
            [out] Boolean* result);

        QueryRoots(
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        CreateDocument(
            [in] String docId,
            [in] String mimeType,
            [in] String displayName,
            [out] String* result);

        DeleteDocument(
            [in] String docId);

        QueryDocument(
            [in] String docId,
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        QueryChildDocuments(
            [in] String docId,
            [in] ArrayOf<String>* projection,
            [in] String sortOrder,
            [out] ICursor** result);

        QueryChildDocumentsForManage(
            [in] String parentDocumentId,
            [in] ArrayOf<String>* projection,
            [in] String sortOrder,
            [out] ICursor** result);

        QueryRecentDocuments(
            [in] String rootId,
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        OpenDocument(
            [in] String docId,
            [in] String mode,
            [in] ICancellationSignal* signal,
            [out] IParcelFileDescriptor** result);

        OpenDocumentThumbnail(
            [in] String docId,
            [in] IPoint* sizeHint,
            [in] ICancellationSignal* signal,
            [out] IAssetFileDescriptor** result);
    }

    interface IDownloadStorageProviderHelper
    {
        OnDownloadProviderDelete(
            [in] IContext* context,
            [in] Int64 id);
    }

    } // namespace Downloads
    } // namespace DownloadProvider
    } // namespace Providers
    } // namespace Elastos
}
