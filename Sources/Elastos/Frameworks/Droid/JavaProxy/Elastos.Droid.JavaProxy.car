module
{
    importlib("Elastos.Core.eco");
    importlib("Elastos.Droid.Core.eco");

    using interface Elastos.Droid.Accounts.IAccountManagerResponse;
    using interface Elastos.Droid.App.IActivityController;
    using interface Elastos.Droid.App.IApplicationThread;
    using interface Elastos.Droid.App.IPendingIntent;
    using interface Elastos.Droid.App.IProcessObserver;
    using interface Elastos.Droid.App.IStopUserCallback;
    using interface Elastos.Droid.App.IIBackupAgent;
    using interface Elastos.Droid.App.IIServiceConnection;
    using interface Elastos.Droid.App.IInstrumentationWatcher;
    using interface Elastos.Droid.App.ITransientNotification;
    using interface Elastos.Droid.App.IUserSwitchObserver;
    using interface Elastos.Droid.App.IIWallpaperManagerCallback;
    using interface Elastos.Droid.App.Backup.IIFullBackupRestoreObserver;
    using interface Elastos.Droid.App.Backup.IIRestoreObserver;
    using interface Elastos.Droid.Internal.App.IMediaContainerService;
    using interface Elastos.Droid.AppWidget.IIAppWidgetHost;
    using interface Elastos.Droid.Content.IOnPrimaryClipChangedListener;
    using interface Elastos.Droid.Content.IContentResolver;
    using interface Elastos.Droid.Content.IIContentProvider;
    using interface Elastos.Droid.Content.IIntentFilter;
    using interface Elastos.Droid.Content.IIntentReceiver;
    using interface Elastos.Droid.Content.IIIntentSender;
    using interface Elastos.Droid.Content.IISyncStatusObserver;
    using interface Elastos.Droid.Content.Pm.IPackageDataObserver;
    using interface Elastos.Droid.Content.Pm.IPackageDeleteObserver;
    using interface Elastos.Droid.Content.Pm.IPackageInstallObserver;
    using interface Elastos.Droid.Content.Pm.IPackageMoveObserver;
    using interface Elastos.Droid.Content.Pm.IPackageStatsObserver;
    using interface Elastos.Droid.Database.ICursor;
    using interface Elastos.Droid.Database.IContentObserver;
    using interface Elastos.Droid.Database.IDataSetObserver;
    using interface Elastos.Droid.Database.IIContentObserver;
    using interface Elastos.Droid.Os.IBinder;
    using interface Elastos.Droid.Os.IICancellationSignal;
    using interface Elastos.Droid.Os.IIMessenger;
    using interface Elastos.Droid.Os.IRemoteCallback;
    using interface Elastos.Droid.Os.Storage.IMountServiceListener;
    using interface Elastos.Droid.Os.Storage.IMountShutdownObserver;
    using interface Elastos.Droid.Os.Storage.IObbActionListener;
    using interface Elastos.Droid.Hardware.Display.IDisplayManagerCallback;
    using interface Elastos.Droid.Hardware.Input.IInputDevicesChangedListener;
    using interface Elastos.Droid.Internal.View.IInputMethodClient;
    using interface Elastos.Droid.Internal.View.IInputContext;
    using interface Elastos.Droid.Internal.View.IInputContextCallback;
    using interface Elastos.Droid.Internal.View.IIInputMethod;
    using interface Elastos.Droid.Internal.View.IIInputMethodSession;
    using interface Elastos.Droid.Location.IICountryListener;
    using interface Elastos.Droid.Location.IIGpsStatusListener;
    using interface Elastos.Droid.Location.IILocationListener;
    using interface Elastos.Droid.Location.IILocationProvider;
    using interface Elastos.Droid.Media.IIAudioFocusDispatcher;
    using interface Elastos.Droid.Media.IIRemoteControlClient;
    using interface Elastos.Droid.Media.IIRemoteControlDisplay;
    using interface Elastos.Droid.Media.IIRemoteVolumeObserver;
    using interface Elastos.Droid.Media.IIRingtonePlayer;
    using interface Elastos.Droid.Media.IIAudioRoutesObserver;
    using interface Elastos.Droid.Service.Wallpaper.IIWallpaperService;
    using interface Elastos.Droid.Service.Wallpaper.IWallpaperEngine;
    using interface Elastos.Droid.Service.Wallpaper.IWallpaperConnection;
    using interface Elastos.Droid.View.IApplicationToken;
    using interface Elastos.Droid.View.IDisplayContentChangeListener;
    using interface Elastos.Droid.View.IIWindow;
    using interface Elastos.Droid.View.IIInputFilter;
    using interface Elastos.Droid.View.IInputMethodCallback;
    using interface Elastos.Droid.View.IOnKeyguardExitResult;
    using interface Elastos.Droid.View.IRotationWatcher;
    using interface Elastos.Droid.View.InputMethod.IInputMethodSession;
    using interface Elastos.Droid.View.TextService.ITextServicesSessionListener;
    using interface Elastos.Droid.View.TextService.ISpellCheckerSessionListener;
    using interface Elastos.Droid.Widget.Internal.IRemoteViewsAdapterConnection;
    using interface Elastos.Droid.Widget.Internal.IIRemoteViewsFactory;
    using interface Elastos.IO.ISerializable;

    namespace Elastos {
    namespace Droid {
    namespace JavaProxy {

    interface IJavaNativeProxy {
        GetJavaInstance(
            [out] Handle32* obj);
    }

    interface IInputMethodSessionNative extends Elastos.Droid.View.InputMethod.IInputMethodSession {
        SetEnabled(
            [in] Boolean enabled);
    }

    class CApplicationThreadNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IApplicationThread;
        interface IBinder;
    }

    class CBinderNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IBinder;
    }

    class CDisplayManagerCallbackNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IDisplayManagerCallback;
    }

    class CInputMethodClientNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IInputMethodClient;
        interface IBinder;
    }

    class CInputContextNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IInputContext;
        interface IBinder;
    }

    class CWindowNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIWindow;
        interface IBinder;
    }

    class CInputDevicesChangedListenerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IInputDevicesChangedListener;
    }

    class CIntentReceiverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIntentReceiver;
        interface IBinder;
    }

    class CPackageStatusObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IPackageStatsObserver;
        interface IBinder;
    }

    class CCursorNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface ICursor;
    }

    class CContentProviderNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIContentProvider;
        interface IBinder;
    }

    class CInputMethodCallbackNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IInputMethodCallback;
    }

    class CIContentObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIContentObserver;
        interface IBinder;
    }

    class CLocalActivityRecordNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IBinder;
    }

    class CMessengerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIMessenger;
    }

    class CIIntentSenderNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIIntentSender;
        interface IBinder;
    }

    class CGpsStatusListener {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIGpsStatusListener;
    }

    class CLocationListener {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IILocationListener;
    }

    class CMountServiceListener {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IMountServiceListener;
    }

    class CIServiceConnectionNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIServiceConnection;
        interface IBinder;

    }

    class CServiceNative {
        constructor();

        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IBinder;
        interface IParcelable;
    }

    class CAccountManagerResponseNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IAccountManagerResponse;
    }

    class CAppWidgetHostCallbacksNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIAppWidgetHost;
    }

    class CInputMethodServiceNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IIInputMethod;
        interface IBinder;
    }

    class CIInputMethodSessionNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IIInputMethodSession;
        interface IBinder;
    }

    class CInputMethodSessionNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IInputMethodSessionNative;
    }

    class CIInputContextCallbackNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IInputContextCallback;
    }

    class CRemoteViewsAdapterConnectionNative{

        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IRemoteViewsAdapterConnection;
        interface IBinder;
    }

    class CPackageInstallObserverNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IPackageInstallObserver;
        interface IBinder;
    }

    class CMediaContainerServiceNative {
        constructor(
           [in] Handle32 jVM,
           [in] Handle32 jInstance);

        interface IMediaContainerService;
        interface IBinder;
    }

    class CContentObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IContentObserver;
    }

    class CIOnPrimaryClipChangedListenerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IOnPrimaryClipChangedListener;
    }

    class CITransientNotificationNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface ITransientNotification;
        interface IBinder;
    }

    class CIPackageDeleteObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IPackageDeleteObserver;
        interface IBinder;
    }

    class CIWallpaperManagerCallbackNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIWallpaperManagerCallback;
    }

    class CIIWallpaperServiceNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIWallpaperService;
        interface IBinder;
    }

    class CIWallpaperEngineNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IWallpaperEngine;
    }

    class CRemoteViewsFactoryNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRemoteViewsFactory;
        interface IBinder;
    }

    class CIILocationProviderNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IILocationProvider;
        interface IBinder;
    }

    [deprecated]
    class CIParcelableNative{
        constructor();

        constructor(
            [in] String pkgPath,
            [in] ArrayOf<Byte>* obj);

        interface IParcelable;
        interface IBinder;
    }

    [deprecated]
    class CISerializableNative{
        constructor();

        constructor(
            [in] String pkgPath,
            [in] ArrayOf<Byte>* obj);

        interface ISerializable;
        interface IParcelable;
        interface IBinder;
    }

    class CIPackageDataObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IPackageDataObserver;
        interface IBinder;
    }

    class CDataSetObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IDataSetObserver;
    }

    class CContentResolverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IContentResolver;
    }

    class CIInstrumentationWatcherNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IInstrumentationWatcher;
        interface IBinder;
    }

    class CIWallpaperConnectionNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IWallpaperConnection;
        interface IBinder;
    }

    class CIActivityControllerNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IActivityController;
        interface IBinder;
    }

    class CIStopUserCallbackNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IStopUserCallback;
        interface IBinder;
    }

    class CIProcessObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IProcessObserver;
        interface IBinder;
    }

    class CIUserSwitchObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IUserSwitchObserver;
        interface IBinder;
    }

    class CIPackageMoveObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IPackageMoveObserver;
        interface IBinder;
    }

    class CIApplicationTokenNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IApplicationToken;
        interface IBinder;
    }

    class CIOnKeyguardExitResultNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IOnKeyguardExitResult;
        interface IBinder;
    }

    class CIRemoteCallbackNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IRemoteCallback;
        interface IBinder;
    }

    class CIRotationWatcherNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IRotationWatcher;
        interface IBinder;
    }

    class CIDisplayContentChangeListenerNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IDisplayContentChangeListener;
        interface IBinder;
    }

    class CIInputFilterNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIInputFilter;
        interface IBinder;
    }

    class CISyncStatusObserver{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IISyncStatusObserver;
    }

    class CIMountShutdownObserverNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IMountShutdownObserver;
        interface IBinder;
    }

    class CIObbActionListenerNative{
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IObbActionListener;
        interface IBinder;
    }

    class CIAudioFocusDispatcher {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIAudioFocusDispatcher;
        interface IBinder;
    }

    class CIRemoteControlClient {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRemoteControlClient;
        interface IBinder;
    }

    class CIRemoteControlDisplay {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRemoteControlDisplay;
        interface IJavaNativeProxy;
        interface IBinder;
    }

    class CIRemoteVolumeObserver {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRemoteVolumeObserver;
        interface IBinder;
    }

    class CIRingtonePlayer {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRingtonePlayer;
        interface IBinder;
    }

    class CIAudioRoutesObserver {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIAudioRoutesObserver;
        interface IBinder;
    }

    class CICancellationSignalNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IICancellationSignal;
        interface IBinder;
    }

    class CTextServicesSessionListenerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface ITextServicesSessionListener;
        interface IBinder;
    }

    class CSpellCheckerSessionListenerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface ISpellCheckerSessionListener;
        interface IBinder;
    }

    class CIBackupAgentNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIBackupAgent;
        interface IBinder;
    }

    class CIFullBackupRestoreObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIFullBackupRestoreObserver;
        interface IBinder;
    }

    class CIRestoreObserverNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IIRestoreObserver;
        interface IBinder;
    }

    class CICountryListenerNative {
        constructor(
            [in] Handle32 jVM,
            [in] Handle32 jInstance);

        interface IICountryListener;
        interface IBinder;
    }

    } // namespace JavaProxy
    } // namespace Droid
    } // namespace Elastos
}
