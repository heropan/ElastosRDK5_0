
module
{
    interface Elastos.Droid.Net.Wifi.P2p.IWifiP2pDevice;

    namespace Elastos {
    namespace Droid {
    namespace Wifi {
    namespace P2p {
    namespace Nsd {

    /**
     * A class for a response of upnp service discovery.
     *
     * @hide
     */
    /**
     * @Involve
     * interface IWifiP2pServiceResponse
     */
    interface IWifiP2pUpnpServiceResponse {
        /**
         * Return UPnP version number.
         *
         * @return version number.
         * @see WifiP2pUpnpServiceInfo#VERSION_1_0
         */
        GetVersion(
            [out] Int32* versionNumber);

        /**
         * Return Unique Service Name strings.
         *
         * @return Unique Service Name.<br>
         * e.g ) <br>
         * <ul>
         * <li>"uuid:6859dede-8574-59ab-9332-123456789012"
         * <li>"uuid:6859dede-8574-59ab-9332-123456789012::upnp:rootdevice"
         * <li>"uuid:6859dede-8574-59ab-9332-123456789012::urn:schemas-upnp-org:device:
         * MediaServer:2"
         * <li>"uuid:6859dede-8574-59ab-9332-123456789012::urn:schemas-upnp-org:service:
         * ContentDirectory:2"
         * </ul>
         */
        GetUniqueServiceNames(
            [out, callee] ArrayOf<String>* uniqueServiceNames);
    }

    [deprecated]
    interface IWifiP2pUpnpServiceResponseHelper {
        /**
         * Create upnp service response.
         *
         * <pre>This is only used in{@link WifiP2pServiceResponse}
         *
         * @param status status code.
         * @param transId transaction id.
         * @param device source device.
         * @param data UPnP response data.
         * @return UPnP service response data.
         * @hide
         */
        NewInstance(
            [in] Int32 status,
            [in] Int32 transId,
            [in] IWifiP2pDevice* dev,
            [in] ArrayOf<Byte>* data,
            [out] IWifiP2pUpnpServiceResponse** instance);
    }

    } // namespace nsd
    } // namespace p2p
    } // namespace wifi
    } // namespace Droid
    } // namespace Elastos
}
