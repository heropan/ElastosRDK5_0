module
{
    interface Elastos.Core.ICharSequence;

    namespace Elastos {
    namespace Droid {
    namespace Preference {

    /**
     * A {@link Preference} that displays a list of entries as
     * a dialog.
     * <p>
     * This preference will store a string into the SharedPreferences. This string will be the value
     * from the {@link #setEntryValues(CharSequence[])} array.
     *
     * @attr ref android.R.styleable#ListPreference_entries
     * @attr ref android.R.styleable#ListPreference_entryValues
     */
    /**
     * @Involve
     * interface IDialogPreference
     * interface IPreference
     * interface IComparable
     * interface IPreferenceManagerOnActivityDestroyListener
     * interface IDialogInterfaceOnDismissListener
     * interface IDialogInterfaceOnClickListener
     */
    [deprecated]
    interface IListPreference {
        /**
             * Sets the human-readable entries to be shown in the list. This will be
             * shown in subsequent dialogs.
             * <p>
             * Each entry must have a corresponding index in
             * {@link #setEntryValues(CharSequence[])}.
             *
             * @param entries The entries.
             * @see #setEntryValues(CharSequence[])
             */
        SetEntries(
            [in] ArrayOf<ICharSequence*>* entries);

        /**
             * @see #setEntries(CharSequence[])
             * @param entriesResId The entries array as a resource.
             */
        SetEntries(
            [in] Int32 entriesResId);

        /**
             * The list of entries to be shown in the list in subsequent dialogs.
             *
             * @return The list as an array.
             */
        GetEntries(
            [out, callee] ArrayOf<ICharSequence*>* result);

        /**
         * The array to find the value to save for a preference when an entry from
         * entries is selected. If a user clicks on the second item in entries, the
         * second item in this array will be saved to the preference.
         *
         * @param entryValues The array to be used as values to save for the preference.
         */
        SetEntryValues(
            [in] ArrayOf<ICharSequence*>* entryValues);

        /**
         * @see #setEntryValues(CharSequence[])
         * @param entryValuesResId The entry values array as a resource.
         */
        SetEntryValues(
            [in] Int32 entryValuesResId);

        /**
             * Returns the array of values to be saved for the preference.
             *
             * @return The array of values.
             */
        GetEntryValues(
            [out, callee] ArrayOf<ICharSequence*>* result);

        /**
             * Sets the value of the key. This should be one of the entries in
             * {@link #getEntryValues()}.
             *
             * @param value The value to set for the key.
             */
        SetValue(
            [in] String value);

        /**
             * Sets the value to the given index from the entry values.
             *
             * @param index The index of the value to set.
             */
        SetValueIndex(
            [in] Int32 index);

        /**
             * Returns the value of the key. This should be one of the entries in
             * {@link #getEntryValues()}.
             *
             * @return The value of the key.
             */
        GetValue(
            [out] String* result);

        /**
             * Returns the entry corresponding to the current value.
             *
             * @return The entry corresponding to the current value, or null.
             */
        GetEntry(
            [out] ICharSequence** result);

        /**
             * Returns the index of the given value (in the entry values array).
             *
             * @param value The value whose index should be returned.
             * @return The index of the value, or -1 if not found.
             */
        FindIndexOfValue(
            [in] String value,
            [out] Int32* result);
    }
    /**
     * @Involve
     * interface IPreferenceBaseSavedState
     * interface IAbsSavedState
     * interface IParcelable
     */
    [deprecated]
    interface IListPreferenceSavedState {
        SetValue(
            [in] String* vs);

        GetValue(
            [out] String* v);
    }

    } // namespace Preference
    } // namespace Droid
    } // namespace Elastos
}

