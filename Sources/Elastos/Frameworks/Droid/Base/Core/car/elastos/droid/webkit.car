module
{
    merge("webkit/DownloadListener.car");
    merge("webkit/BrowserDownloadListener.car");
    merge("webkit/ClientCertRequest.car");
    merge("webkit/CacheManager.car");
    merge("webkit/ConsoleMessage.car");
    merge("webkit/CookieManager.car");
    merge("webkit/CookieSyncManager.car");
    merge("webkit/DateSorter.car");
    merge("webkit/ValueCallback.car");
    merge("webkit/GeolocationPermissions.car");
    merge("webkit/HttpAuthHandler.car");
    merge("webkit/JsResult.car");
    merge("webkit/JsPromptResult.car");
//    merge("webkit/L10nUtilsHelper.car");
    merge("webkit/MimeTypeMap.car");
//    merge("webkit/MockGeolocation.car");
    merge("webkit/OverScrollGlow.car");
    merge("webkit/PermissionRequest.car");
    merge("webkit/Plugin.car");
    merge("webkit/PluginData.car");
    merge("webkit/PluginList.car");
//    merge("webkit/PluginManager.car");
    merge("webkit/PluginStub.car");
    merge("webkit/SslErrorHandler.car");
    merge("webkit/UrlInterceptHandler.car");
    merge("webkit/UrlInterceptRegistry.car");
    merge("webkit/URLUtil.car");
    merge("webkit/WebBackForwardListClient.car");
    merge("webkit/WebChromeClient.car");
    merge("webkit/WebHistoryItem.car");
    merge("webkit/WebIconDatabase.car");
    merge("webkit/WebResourceRequest.car");
    merge("webkit/WebResourceResponse.car");
    merge("webkit/WebSettings.car");
//    merge("webkit/WebSettingsClassic.car");
    merge("webkit/WebStorage.car");
    merge("webkit/WebStorageClassic.car");
    merge("webkit/WebBackForwardList.car");
    merge("webkit/WebView.car");
    merge("webkit/WebViewProvider.car");
//    merge("webkit/WebViewClassic.car");
    merge("webkit/WebViewClient.car");
//    merge("webkit/WebViewClientClassicExt.car");
//    merge("webkit/WebViewCore.car");
    merge("webkit/WebViewDatabase.car");
    merge("webkit/WebViewFragment.car");

    using interface Elastos.IO.IInputStream;
    using interface Elastos.Utility.IMap;

    interface Elastos.Droid.App.IFragment;
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IComponentCallbacks;
    interface Elastos.Droid.Content.IComponentCallbacks2;
    interface Elastos.Droid.Graphics.Drawable.IDrawableCallback;
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Utility.IAttributeSet;
    interface Elastos.Droid.View.IKeyEventCallback;
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IViewGroup;
    interface Elastos.Droid.View.IViewParent;
    interface Elastos.Droid.View.IViewManager;
    interface Elastos.Droid.View.IOnGlobalFocusChangeListener;
    interface Elastos.Droid.View.IViewOnCreateContextMenuListener;
    interface Elastos.Droid.View.IViewGroupOnHierarchyChangeListener;
    interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource;

    namespace Elastos {
    namespace Droid {
    namespace Webkit {

        singleton class CCacheManager {
            interface ICacheManager;
        }

        class CConsoleMessage {
            constructor(
                [in] String message,
                [in] String sourceId,
                [in] Int32 lineNumber,
                [in] MessageLevel msgLevel);

            interface IConsoleMessage;
        }

        singleton class CCookieManagerHelper {
            interface ICookieManagerHelper;
        }

        singleton class CCookieSyncManagerHelper {
            interface ICookieSyncManagerHelper;
        }

        class CCookieSyncManager {
            constructor();

            interface ICookieSyncManager;
        }

        [local]
        class CDateSorter {
            constructor(
                [in] IContext* ctx);

            interface IDateSorter;
        }

        singleton class CGeolocationPermissionsHelper {
            interface IGeolocationPermissionsHelper;
        }

        class CGeolocationPermissions {
            constructor();

            interface IGeolocationPermissions;
        }

//        class CHTML5VideoFullScreen {
//
//            interface IHTML5VideoFullScreen;
//        }

//        singleton class CHTML5VideoInlineHelper {
//            interface IHTML5VideoInlineHelper;
//        }

//        class CHTML5VideoInline {
//
//            interface IHTML5VideoInline;
//        }

        class CHttpAuthHandler {
            constructor();

            interface IHttpAuthHandler;
            interface IHandler;
        }

        class CJsPromptResult {
            constructor(
                [in] IJsResultReceiver* receiver);

            interface IJsResult;
            interface IJsPromptResult;
        }

        class CJsResult {
            constructor(
                [in] IJsResultReceiver* receiver);

            interface IJsResult;
        }

//        singleton class CL10nUtilsHelper {
//            interface IL10nUtilsHelper;
//        }

        singleton class CMimeTypeMapHelper {
            interface IMimeTypeMapHelper;
        }

//        class CMimeTypeMap {
//            interface IMimeTypeMap;
//        }

//        class CMockGeolocation {
//            constructor(
//                [in] IWebViewCore* webViewCore);
//
//            interface IMockGeolocation;
//        }

//        class COverScrollGlow {
//            constructor(
//                [in] IWebViewClassic* host);
//
//            interface IOverScrollGlow;
//        }

        class CPlugin {
            constructor(
                [in] String name,
                [in] String path,
                [in] String fileName,
                [in] String description);

            interface IPlugin;
        }

        class CPluginData {
            constructor(
                [in] IInputStream* stream,
                [in] Int64 length,
                [in] IMap* headers,
                [in] Int32 code);

            interface IPluginData;
        }

        class CPluginList {
            constructor();

            interface IPluginList;
        }

//        singleton class CPluginManagerHelper {
//            interface IPluginManagerHelper;
//        }

//        [local]
//        class CPluginManager {
//            constructor();
//
//            constructor(
//                [in] IContext* ctx);
//
//            interface IPluginManager;
//        }

//        class CSslErrorHandler {
//            constructor();
//
//            interface ISslErrorHandler;
//        }

        singleton class CURLUtil {
            interface IURLUtil;
        }

        singleton class CUrlInterceptRegistry {
            interface IUrlInterceptRegistry;
        }

//        class CWebBackForwardList {
//            constructor();
//
//            interface IWebBackForwardList;
//        }

        class CWebChromeClient {
            constructor();

            interface IWebChromeClient;
        }

//        class CWebHistoryItem {
//            constructor();
//
//            interface IWebHistoryItem;
//        }

        singleton class CWebIconDatabaseHelper {
            interface IWebIconDatabaseHelper;
        }

//        class CWebIconDatabase {
//            interface IWebIconDatabase;
//        }

        class CWebResourceResponse {
            constructor(
                [in] String mimeType,
                [in] String encoding,
                [in] IInputStream* data);

            constructor(
                [in] String mimeType,
                [in] String encoding,
                [in] Int32 statusCode,
                [in] String reasonPhrase,
                [in] IMap* responseHeaders,
                [in] IInputStream* data);

            interface IWebResourceResponse;
        }

        singleton class CWebSettingsHelper {
            interface IWebSettingsHelper;
        }

//        class CWebSettings {
//            interface IWebSettings;
//        }

//        singleton class CWebSettingsClassicHelper {
//            interface IWebSettingsClassicHelper;
//        }

//        class CWebSettingsClassic {
//            interface IWebSettingsClassic;
//        }

//        class CAutoFillProfile {
//            constructor(
//                [in] Int32 uniqueId,
//                [in] String fullName,
//                [in] String email,
//                [in] String companyName,
//                [in] String addressLine1,
//                [in] String addressLine2,
//                [in] String city,
//                [in] String state,
//                [in] String zipCode,
//                [in] String country,
//                [in] String phoneNumber);
//
//            interface IAutoFillProfile;
//        }

//        class CWebStorageOrigin {
//            interface IWebStorageOrigin;
//        }

        singleton class CWebStorageHelper {
            interface IWebStorageHelper;
        }

        class CWebStorage {
            constructor();

            interface IWebStorage;
        }

        class CWebViewTransport {
            constructor();

            interface IWebViewTransport;
        }

        class CWebViewHitTestResult {
            constructor();

            interface IWebViewHitTestResult;
        }

        singleton class CWebViewHelper {
            interface IWebViewHelper;
        }

        [local]
        class CWebView {
            constructor(
                [in] IContext* ctx);

            constructor(
                [in] IContext* ctx,
                [in] IAttributeSet* attrs);

            constructor(
                [in] IContext* ctx,
                [in] IAttributeSet* attrs,
                [in] Int32 defStyle);

            constructor(
                [in] IContext* ctx,
                [in] IAttributeSet* attrs,
                [in] Int32 defStyle,
                [in] Boolean privateBrowsing);

            interface IWebView;
            interface IView;
            interface IViewGroup;
            interface IViewParent;
            interface IViewManager;
            interface IDrawableCallback;
            interface IKeyEventCallback;
            interface IAccessibilityEventSource;
            interface IOnGlobalFocusChangeListener;
            interface IViewGroupOnHierarchyChangeListener;
        }

//        singleton class CWebViewClassicHelper {
//            interface IWebViewClassicHelper;
//        }

//        [local]
//        class CWebViewClassic {
//            constructor(
//                [in] IWebView* webView,
//                [in] IWebViewPrivateAccess* privateAccess);
//
//            interface IWebViewClassic;
//            interface IWebViewProvider;
//            interface IWebViewProviderScrollDelegate;
//            interface IWebViewProviderViewDelegate;
//        }

        class CWebViewClient {
            interface IWebViewClient;
        }

//        class CWebViewClientClassicExt {
//            interface IWebViewClientClassicExt;
//            interface IWebViewClient;
//        }

//        singleton class CWebViewCoreHelper {
//            interface IWebViewCoreHelper;
//        }

//        [local]
//        class CWebViewCore {
//            constructor(
//                [in] IContext* ctx,
//                [in] IWebViewClassic* w,
//                [in] IHandler* proxy,
//                [in] IMap* javascriptInterfaces);
//
//            interface IWebViewCore;
//        }

        singleton class CWebViewDatabaseHelper {
            interface IWebViewDatabaseHelper;
        }

//        class CWebViewDatabase {
//            interface IWebViewDatabase;
//        }

        class CWebViewFragment {
            constructor();

            interface IWebViewFragment;
            interface IFragment;
            interface IComponentCallbacks;
            interface IComponentCallbacks2;
            interface IViewOnCreateContextMenuListener;
        }

    } // namespace Webkit
    } // namepsace Droid
    } // namespace Elastos

}
