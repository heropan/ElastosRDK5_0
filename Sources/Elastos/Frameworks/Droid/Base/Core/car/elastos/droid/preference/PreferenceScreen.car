module
{
    interface Elastos.Droid.App.IDialog;
    interface Elastos.Droid.Os.IBundle;
    interface Elastos.Droid.Widget.IListAdapter;
    interface Elastos.Droid.Widget.IListView;

    namespace Elastos {
    namespace Droid {
    namespace Preference {

    /**
     * Represents a top-level {@link Preference} that
     * is the root of a Preference hierarchy. A {@link PreferenceActivity}
     * points to an instance of this class to show the preferences. To instantiate
     * this class, use {@link PreferenceManager#createPreferenceScreen(Context)}.
     * <ul>
     * This class can appear in two places:
     * <li> When a {@link PreferenceActivity} points to this, it is used as the root
     * and is not shown (only the contained preferences are shown).
     * <li> When it appears inside another preference hierarchy, it is shown and
     * serves as the gateway to another screen of preferences (either by showing
     * another screen of preferences as a {@link Dialog} or via a
     * {@link Context#startActivity(android.content.Intent)} from the
     * {@link Preference#getIntent()}). The children of this {@link PreferenceScreen}
     * are NOT shown in the screen that this {@link PreferenceScreen} is shown in.
     * Instead, a separate screen will be shown when this preference is clicked.
     * </ul>
     * <p>Here's an example XML layout of a PreferenceScreen:</p>
     * <pre>
    &lt;PreferenceScreen
            xmlns:android="http://schemas.android.com/apk/res/android"
            android:key="first_preferencescreen"&gt;
        &lt;CheckBoxPreference
                android:key="wifi enabled"
                android:title="WiFi" /&gt;
        &lt;PreferenceScreen
                android:key="second_preferencescreen"
                android:title="WiFi settings"&gt;
            &lt;CheckBoxPreference
                    android:key="prefer wifi"
                    android:title="Prefer WiFi" /&gt;
            ... other preferences here ...
        &lt;/PreferenceScreen&gt;
    &lt;/PreferenceScreen&gt; </pre>
     * <p>
     * In this example, the "first_preferencescreen" will be used as the root of the
     * hierarchy and given to a {@link PreferenceActivity}. The first screen will
     * show preferences "WiFi" (which can be used to quickly enable/disable WiFi)
     * and "WiFi settings". The "WiFi settings" is the "second_preferencescreen" and when
     * clicked will show another screen of preferences such as "Prefer WiFi" (and
     * the other preferences that are children of the "second_preferencescreen" tag).
     *
     * <div class="special reference">
     * <h3>Developer Guides</h3>
     * <p>For information about building a settings UI with Preferences,
     * read the <a href="{@docRoot}guide/topics/ui/settings.html">Settings</a>
     * guide.</p>
     * </div>
     *
     * @see PreferenceCategory
     *
     * @Involve
     * interface IPreference
     * interface IComparable
     * interface IGenericInflaterParent
     * interface IPreferenceGroup
     * interface IAdapterViewOnItemClickListener
     */
    [local]
    interface IPreferenceScreen {
        /**
         * Returns an adapter that can be attached to a {@link PreferenceActivity}
         * or {@link PreferenceFragment} to show the preferences contained in this
         * {@link PreferenceScreen}.
         * <p>
         * This {@link PreferenceScreen} will NOT appear in the returned adapter, instead
         * it appears in the hierarchy above this {@link PreferenceScreen}.
         * <p>
         * This adapter's {@link Adapter#getItem(int)} should always return a
         * subclass of {@link Preference}.
         *
         * @return An adapter that provides the {@link Preference} contained in this
         *         {@link PreferenceScreen}.
         */
        GetRootAdapter(
            [out] IListAdapter** adapter);

        /**
         * Creates the root adapter.
         *
         * @return An adapter that contains the preferences contained in this {@link PreferenceScreen}.
         * @see #getRootAdapter()
         */
        OnCreateRootAdapter(
            [out] IListAdapter** adapter);

        /**
         * Binds a {@link ListView} to the preferences contained in this {@link PreferenceScreen} via
         * {@link #getRootAdapter()}. It also handles passing list item clicks to the corresponding
         * {@link Preference} contained by this {@link PreferenceScreen}.
         *
         * @param listView The list view to attach to.
         */
        Bind(
            [in] IListView* listView);

        /**
         * Used to get a handle to the dialog.
         * This is useful for cases where we want to manipulate the dialog
         * as we would with any other activity or view.
         */
        GetDialog(
            [out] IDialog** dialog);
    }

    /**
     * @Involve
     * interface IAbsSavedState
     * interface IParcelable
     * interface IPreferenceBaseSavedState
     */
    interface IPreferenceScreenSavedState {
        IsDialogShowing(
            [out] Boolean* isDialogShowing);

        SetDialogShowing(
            [in] Boolean isDialogShowing);

        SetDialogBundle(
            [in] IBundle* b);

        GetDialogBundle(
            [out] IBundle** b);
    }

    } // Preference
    } // Droid
    } // Elastos
}
