
module
{
    interface Elastos.Droid.Net.IDhcpInfo;
    interface Elastos.Droid.Net.Pppoe.IIPppoeManager;
    interface Elastos.Droid.Net.Pppoe.IPppoeDevInfo;
    interface Elastos.Droid.Os.IHandler;

    namespace Elastos {
    namespace Droid {
    namespace Net {
    namespace Pppoe {

        interface IPppoeManager {
            const String TAG = "PppoeManager";
            const Int32 PPPOE_DEVICE_SCAN_RESULT_READY = 0;
            const String PPPOE_STATE_CHANGED_ACTION =
                    "android.net.pppoe.PPPOE_STATE_CHANGED";
            const String NETWORK_STATE_CHANGED_ACTION =
                    "android.net.pppoe.STATE_CHANGE";

        //  const String ACTION_PPPOE_NETWORK = "android.net.pppoe.PPPOE_NET_CHG";


            const String EXTRA_NETWORK_INFO = "networkInfo";
            const String EXTRA_PPPOE_STATE = "pppoe_state";
            const String EXTRA_PPPOE_ERRCODE = "pppoe_errcode";
            const String PROP_VAL_PPP_NOERR = "0:0";
            const String EXTRA_PREVIOUS_PPPOE_STATE = "previous_pppoe_state";

            const Int32 PPPOE_STATE_UNKNOWN = 0;
            const Int32 PPPOE_STATE_DISABLED = 1;
            const Int32 PPPOE_STATE_ENABLED = 2;

            GetIIPppoeManager(
                [out] IIPppoeManager** manager);
            SetIIPppoeManager(
                [in] IIPppoeManager* manager);
            GetHandler(
                [out] IHandler** handler);
            SetHandler(
                [in] IHandler* handler);
            IsPppoeConfigured(
                [out] Boolean* result);
            GetSavedPppoeConfig(
                [out] IPppoeDevInfo** info);
            UpdatePppoeDevInfo(
                [in] IPppoeDevInfo* info);
            GetDeviceNameList(
                [out, callee] ArrayOf<String>* list);
            SetPppoeEnabled(
                [in] Boolean ebl);
            GetPppoeState(
                [out] Int32* val);
            PppoeConfigured(
                [out] Boolean* result);
            GetDhcpInfo(
                [out] IDhcpInfo** info);
            GetTotalInterface(
                [out] Int32* val);
            PppoeSetDefaultConf();
            IsPppoeDeviceUp(
                [out] Boolean* result);

        }

    } // namespace Pppoe
    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
