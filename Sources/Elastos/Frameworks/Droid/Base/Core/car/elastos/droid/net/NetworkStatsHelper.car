
module
{

    interface Elastos.Droid.Net.INetworkStatsNonMonotonicObserver;


    namespace Elastos {
    namespace Droid {
    namespace Net {

    interface INetworkStatsHelper {
        /** {@link #iface} value when interface details unavailable. */
        GetIFACE_ALL(
            [out] String* result);

        /**
         * Subtract the two given {@link NetworkStats} objects, returning the delta
         * between two snapshots in time. Assumes that statistics rows collect over
         * time, and that none of them have disappeared.
         * <p>
         * If counters have rolled backwards, they are clamped to {@code 0} and
         * reported to the given {@link NonMonotonicObserver}.
         */
        Subtract(
            [in] INetworkStats* left,
            [in] INetworkStats* right,
            [in] INetworkStatsNonMonotonicObserver* observer,
            [in] IInterface* cookie,
            [out] INetworkStats** result);

        /**
         * Subtract the two given {@link NetworkStats} objects, returning the delta
         * between two snapshots in time. Assumes that statistics rows collect over
         * time, and that none of them have disappeared.
         * <p>
         * If counters have rolled backwards, they are clamped to {@code 0} and
         * reported to the given {@link NonMonotonicObserver}.
         * <p>
         * If <var>recycle</var> is supplied, this NetworkStats object will be
         * reused (and returned) as the result if it is large enough to contain
         * the data.
         */
        Subtract(
            [in] INetworkStats* left,
            [in] INetworkStats* right,
            [in] INetworkStatsNonMonotonicObserver* observer,
            [in] IInterface* cookie,
            [in] INetworkStats* recycle,
            [out] INetworkStats** result);

        /**
         * Return text description of {@link #set} value.
         */
        SetToString(
            [in] Int32 set,
            [out] String* result);

        /**
         * Return text description of {@link #tag} value.
         */
        TagToString(
            [in] Int32 tag,
            [out] String* result);

    }

    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
