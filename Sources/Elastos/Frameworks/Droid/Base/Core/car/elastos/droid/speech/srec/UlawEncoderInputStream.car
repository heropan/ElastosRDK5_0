module
{

    namespace Elastos {
    namespace Droid {
    namespace Speech {
    namespace Srec {

    /**
     * InputStream which transforms 16 bit pcm data to ulaw data.
     *
     * Not yet ready to be supported, so
     * @hide
     */
    /**
     * @Involve
     * interface Elastos.IO.IInputStream
     */
    interface IUlawEncoderInputStream {
    }

    [deprecated]
    interface IUlawEncoderInputStreamHelper {
        Encode(
            [in] ArrayOf<Byte>* pcmBuf,
            [in] Int32 pcmOffset,
            [in] ArrayOf<Byte>* ulawBuf,
            [in] Int32 ulawOffset,
            [in] Int32 length,
            [in] Int32 max);

        /**
         * Compute the maximum of the absolute value of the pcm samples.
         * The return value can be used to set ulaw encoder scaling.
         * @param pcmBuf array containing 16 bit pcm data.
         * @param offset offset of start of 16 bit pcm data.
         * @param length number of pcm samples (not number of input bytes)
         * @return maximum abs of pcm data values
         */
        MaxAbsPcm(
            [in] ArrayOf<Byte>* pcmBuf,
            [in] Int32 offset,
            [in] Int32 length,
            [out] Int32* ret);
    }

    } // namespace Srec
    } // namespace Speech
    } // namespace Droid
    } // namespace Elastos

}
