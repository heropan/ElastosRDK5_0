module
{
    namespace Elastos {
    namespace Droid {
    namespace Text {

    /**
     * AndroidCharacter exposes some character properties that are not
     * easily accessed from java.lang.Character.
     */
    [deprecated]
    interface IAndroidCharacter {
        const Int32 EAST_ASIAN_WIDTH_NEUTRAL = 0;
        const Int32 EAST_ASIAN_WIDTH_AMBIGUOUS = 1;
        const Int32 EAST_ASIAN_WIDTH_HALF_WIDTH = 2;
        const Int32 EAST_ASIAN_WIDTH_FULL_WIDTH = 3;
        const Int32 EAST_ASIAN_WIDTH_NARROW = 4;
        const Int32 EAST_ASIAN_WIDTH_WIDE = 5;

        /**
         * Fill in the first <code>count</code> bytes of <code>dest</code> with the
         * directionalities from the first <code>count</code> chars of <code>src</code>.
         * This is just like Character.getDirectionality() except it is a
         * batch operation.
         */
        //public native static
        GetDirectionalities(
            [in] ArrayOf<Char32>* src,
            [in] ArrayOf<Byte>* dest,
            [in] Int32 count);

        /**
         * Calculate the East Asian Width of a character according to
         * <a href="http://unicode.org/reports/tr11/">Unicode TR#11</a>. The return
         * will be one of {@link #EAST_ASIAN_WIDTH_NEUTRAL},
         * {@link #EAST_ASIAN_WIDTH_AMBIGUOUS}, {@link #EAST_ASIAN_WIDTH_HALF_WIDTH},
         * {@link #EAST_ASIAN_WIDTH_FULL_WIDTH}, {@link #EAST_ASIAN_WIDTH_NARROW},
         * or {@link #EAST_ASIAN_WIDTH_WIDE}.
         *
         * @param input the character to measure
         * @return the East Asian Width for input
         */
        //public native static
        GetEastAsianWidth(
            [in] Char32 input,
            [out] Int32* ret);

        /**
         * Fill the first <code>count</code> bytes of <code>dest</code> with the
         * East Asian Width from <code>count</code> chars of <code>src</code>
         * starting at <code>start</code>. East Asian Width is calculated based on
         * <a href="http://unicode.org/reports/tr11/">Unicode TR#11</a>. Each entry
         * in <code>dest</code> will be one of {@link #EAST_ASIAN_WIDTH_NEUTRAL},
         * {@link #EAST_ASIAN_WIDTH_AMBIGUOUS}, {@link #EAST_ASIAN_WIDTH_HALF_WIDTH},
         * {@link #EAST_ASIAN_WIDTH_FULL_WIDTH}, {@link #EAST_ASIAN_WIDTH_NARROW},
         * or {@link #EAST_ASIAN_WIDTH_WIDE}.
         *
         * @param src character array of input to measure
         * @param start first character in array to measure
         * @param count maximum number of characters to measure
         * @param dest byte array of results for each character in src
         */
        //public native static
        GetEastAsianWidths(
            [in] ArrayOf<Char32>* src,
            [in] Int32 start,
            [in] Int32 count,
            [in] ArrayOf<Byte>* dest);

        /**
         * Replace the specified slice of <code>text</code> with the chars'
         * right-to-left mirrors (if any), returning true if any
         * replacements were made.
         *
         * @param text array of characters to apply mirror operation
         * @param start first character in array to mirror
         * @param count maximum number of characters to mirror
         * @return true if replacements were made
         */
        //public native static
        Mirror(
            [in] ArrayOf<Char32>* text,
            [in] Int32 start,
            [in] Int32 count,
            [out] Boolean* ret);

        /**
         * Return the right-to-left mirror (or the original char if none)
         * of the specified char.
         */
        //public native static
        GetMirror(
            [in] Char32 ch,
            [out] Char32* ret);
    }

    }//namespace Text
    }//namespace Droid
    }//namespace Elastos

}