
module
{
    interface Elastos.Core.ICharSequence;
    interface Elastos.Utility.ISet;

    namespace Elastos {
    namespace Droid {
    namespace Preference {

    /**
     * A {@link Preference} that displays a list of entries as
     * a dialog.
     * <p>
     * This preference will store a set of strings into the SharedPreferences.
     * This set will contain one or more values from the
     * {@link #setEntryValues(CharSequence[])} array.
     *
     * @attr ref android.R.styleable#MultiSelectListPreference_entries
     * @attr ref android.R.styleable#MultiSelectListPreference_entryValues
     */
    /**
     * @Involve
     * interface IDialogPreference
     * interface IPreference
     * interface IComparable
     * interface IPreferenceManagerOnActivityDestroyListener
     * interface IDialogInterfaceOnDismissListener
     * interface IDialogInterfaceOnClickListener
     */
    [deprecated]
    interface IMultiSelectListPreference {
        /**
         * Sets the human-readable entries to be shown in the list. This will be
         * shown in subsequent dialogs.
         * <p>
         * Each entry must have a corresponding index in
         * {@link #setEntryValues(CharSequence[])}.
         *
         * @param entries The entries.
         * @see #setEntryValues(CharSequence[])
         */
        SetEntries(
            [in] ArrayOf<ICharSequence*>* entries);

        /**
         * @see #setEntries(CharSequence[])
         * @param entriesResId The entries array as a resource.
         */
        SetEntries(
            [in] Int32 entriesResId);

        /**
         * The list of entries to be shown in the list in subsequent dialogs.
         *
         * @return The list as an array.
         */
        GetEntries(
            [out, callee] ArrayOf<ICharSequence*>* result);

        /**
         * The array to find the value to save for a preference when an entry from
         * entries is selected. If a user clicks on the second item in entries, the
         * second item in this array will be saved to the preference.
         *
         * @param entryValues The array to be used as values to save for the preference.
         */
        SetEntryValues(
            [in] ArrayOf<ICharSequence*>* entryValues);

        /**
         * @see #setEntryValues(CharSequence[])
         * @param entryValuesResId The entry values array as a resource.
         */
        SetEntryValues(
            [in] Int32 entryValuesResId);

        /**
             * Returns the array of values to be saved for the preference.
             *
             * @return The array of values.
             */
        GetEntryValues(
            [out, callee] ArrayOf<ICharSequence*>* result);

        /**
             * Sets the value of the key. This should contain entries in
             * {@link #getEntryValues()}.
             *
             * @param values The values to set for the key.
             */
        SetValues(
            [in] ISet* values);

        /**
             * Retrieves the current value of the key.
             */
        GetValues(
            [out] ISet** result);

        /**
             * Returns the index of the given value (in the entry values array).
             *
             * @param value The value whose index should be returned.
             * @return The index of the value, or -1 if not found.
             */
        FindIndexOfValue(
            [in] String value,
            [out] Int32* result);
    }
    /**
     * @Involve
     * interface IPreferenceBaseSavedState
     * interface IAbsSavedState
     * interface IParcelable
     */
    [deprecated]
    interface IMultiSelectListPreferenceSavedState {
        SetValues(
            [in] ISet* values);

        GetValues(
            [out] ISet** values);
    }
    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}