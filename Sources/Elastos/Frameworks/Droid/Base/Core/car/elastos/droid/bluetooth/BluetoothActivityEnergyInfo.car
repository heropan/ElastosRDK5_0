
module
{
    namespace Elastos {
    namespace Droid {
    namespace Bluetooth {

    /**
     * Record of energy and activity information from controller and
     * underlying bt stack state.Timestamp the record with system
     * time
     * @hide
     */
    /**
     * @Involve
     * interface IParcelable
     */
    interface IBluetoothActivityEnergyInfo {
        const Int32 BT_STACK_STATE_INVALID = 0;
        const Int32 BT_STACK_STATE_STATE_ACTIVE = 1;
        const Int32 BT_STACK_STATE_STATE_SCANNING = 2;
        const Int32 BT_STACK_STATE_STATE_IDLE = 3;

        /**
         * @return bt stack reported state
         */
        GetBluetoothStackState(
            [out] Int32* result);

        /**
         * @return tx time in ms
         */
        GetControllerTxTimeMillis(
            [out] Int32* result);

        /**
         * @return rx time in ms
         */
        GetControllerRxTimeMillis(
            [out] Int32* result);

        /**
         * @return idle time in ms
         */
        GetControllerIdleTimeMillis(
            [out] Int32* result);

        /**
         * product of current(mA), voltage(V) and time(ms)
         * @return energy used
         */
        GetControllerEnergyUsed(
            [out] Int32* result);

        /**
         * @return timestamp(wall clock) of record creation
         */
        GetTimeStamp(
            [out] Int64* result);

        /**
         * @return if the record is valid
         */
        IsValid(
            [out] Boolean* result);
    }

    } // Bluetooth
    } // Droid
    } // Elastos
}