
module
{
    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Os {

    [local]
    interface IProcessCpuTrackerStats {
        GetPid(
            [out] Int32* pid);

        GetUid(
            [out] Int32* uid);

        GetInteresting(
            [out] Boolean* interesting);

        GetBaseName(
            [out] String* name);

        GetName(
            [out] String* name);

        GetNameWidth(
            [out] Int32* width);

        GetVsize(
            [out] Int64* vsize);

        GetBaseUptime(
            [out] Int64* time);

        GetRelUptime(
            [out] Int64* time);

        GetBaseUtime(
            [out] Int64* time);

        GetBaseStime(
            [out] Int64* time);

        GetRelUtime(
            [out] Int32* time);

        GetRelStime(
            [out] Int32* time);

        GetBaseMinfaults(
            [out] Int64* faults);

        GetBaseMajfaults(
            [out] Int64* faults);

        GetRelMinfaults(
            [out] Int32* faults);

        GetRelMajfaults(
            [out] Int32* faults);

        GetActive(
            [out] Boolean* active);

        GetWorking(
            [out] Boolean* working);

        GetAdded(
            [out] Boolean* added);

        GetRemoved(
            [out] Boolean* removed);
    }

    [local]
    interface IProcessCpuTracker {
        OnLoadChanged(
            [in] Float load1,
            [in] Float load5,
            [in] Float load15);

        OnMeasureProcessName(
            [in] String name,
            [out] Int32* result);

        Init();

        Update();

        /**
         * Returns the total time (in clock ticks, or 1/100 sec) spent executing in
         * both user and system code.  Safe to call without lock held.
         */
        GetCpuTimeForPid(
            [in] Int32 pid,
            [out] Int64* time);

        /**
         * Returns the delta time (in clock ticks, or 1/100 sec) spent at each CPU
         * speed, since the last call to this method. If this is the first call, it
         * will return 1 for each value.
         */
        GetLastCpuSpeedTimes(
            [out, callee] ArrayOf<Int64>* times);

        GetLastUserTime(
            [out] Int32* result);

        GetLastSystemTime(
            [out] Int32* result);

        GetLastIoWaitTime(
            [out] Int32* result);

        GetLastIrqTime(
            [out] Int32* result);

        GetLastSoftIrqTime(
            [out] Int32* result);

        GetLastIdleTime(
            [out] Int32* result);

        GetTotalCpuPercent(
            [out] Float* result);

        CountStats(
            [out] Int32* result);

        GetStats(
            [in] Int32 index,
            [out] IProcessCpuTrackerStats** stats);

        CountWorkingStats(
            [out] Int32* result);

        GetWorkingStats(
            [in] Int32 index,
            [out] IProcessCpuTrackerStats** stats);

        PrintCurrentLoad(
            [out] String* str);

        PrintCurrentState(
            [in] Int64 now,
            [out] String* str);
    }

    }//namespace Os
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}

