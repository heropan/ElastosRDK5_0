
module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Content.IIntentFilter;
    interface Elastos.Droid.Content.Pm.IPackageManager;
    interface Elastos.Droid.Content.Pm.IActivityInfo;
    interface Elastos.Droid.Content.Pm.IServiceInfo;
    interface Elastos.Droid.Graphics.Drawable.IDrawable;
    interface Elastos.Droid.Utility.IPrinter;

    namespace Elastos {
    namespace Droid {
    namespace Content {
    namespace Pm {

    /**
     * Information that is returned from resolving an intent against an IntentFilter.
     * This partially corresponds to information collected from the AndroidManifest.xml's <intent> tags.
     */
    /**
     * @Involve
     * interface IParcelable
     */
    [local, parcelable]
    interface IResolveInfo {
        /**
         * Retrieve the current textual label associated with this resolution.  This
         * will call back on the given PackageManager to load the label from
         * the application.
         *
         * @param pm A PackageManager from which the label can be loaded; usually
         * the PackageManager from which you originally retrieved this item.
         *
         * @return Returns a CharSequence containing the resolutions's label.  If the
         * item does not have a label, its name is returned.
         */
        LoadLabel(
            [in] IPackageManager* pm,
            [out] ICharSequence** label);

        /**
         * Retrieve the current graphical icon associated with this resolution.  This
         * will call back on the given PackageManager to load the icon from
         * the application.
         *
         * @param pm A PackageManager from which the icon can be loaded; usually
         * the PackageManager from which you originally retrieved this item.
         *
         * @return Returns a Drawable containing the resolution's icon.  If the
         * item does not have an icon, the default activity icon is returned.
         */
        LoadIcon(
            [in] IPackageManager* pm,
            [out] IDrawable** icon);

        /**
         * Return the icon resource identifier to use for this match.  If the
         * match defines an icon, that is used; else if the activity defines
         * an icon, that is used; else, the application icon is used.
         *
         * @return The icon associated with this match.
         */
        GetIconResource(
            [out] Int32* iconRes);

        Dump(
            [in] IPrinter* pw,
            [in] String prefix);

        ToString(
            [out] String* star);

        GetActivityInfo(
            [out] IActivityInfo** activityInfo);

        SetActivityInfo(
            [in] IActivityInfo* activityInfo);

        GetServiceInfo(
            [out] IServiceInfo** serviceInfo);

        SetServiceInfo(
            [in] IServiceInfo* serviceInfo);

        GetProviderInfo(
            [out] IProviderInfo** providerInfo);

        SetProviderInfo(
            [in] IProviderInfo* providerInfo);

        GetFilter(
            [out] IIntentFilter** filter);

        SetFilter(
            [in] IIntentFilter* filter);

        GetPriority(
            [out] Int32* priority);

        SetPriority(
            [in] Int32 priority);

        GetPreferredOrder(
            [out] Int32* preferredOrder);

        SetPreferredOrder(
            [in] Int32 preferredOrder);

        GetMatch(
            [out] Int32* match);

        SetMatch(
            [in] Int32 match);

        GetSpecificIndex(
            [out] Int32* index);

        SetSpecificIndex(
            [in] Int32 index);

        GetIsDefault(
            [out] Boolean* isDefault);

        SetIsDefault(
            [in] Boolean isDefault);

        GetLabelRes(
            [out] Int32* labelRes);

        SetLabelRes(
            [in] Int32 labelRes);

        GetNonLocalizedLabel(
            [out] ICharSequence** label);

        SetNonLocalizedLabel(
            [in] ICharSequence* label);

        GetIcon(
            [out] Int32* icon);

        SetIcon(
            [in] Int32 icon);

        GetResolvePackageName(
            [out] String* resolvePackageName);

        SetResolvePackageName(
            [in] String resolvePackageName);

        GetTargetUserId(
            [out] Int32* userId);

        SetTargetUserId(
            [in] Int32 userId);

        GetNoResourceId(
            [out] Boolean* id);

        SetNoResourceId(
            [in] Boolean id);

        GetSystem(
            [out] Boolean* system);

        SetSystem(
            [in] Boolean system);
    }

    } // namespace Pm
    } // namespace Content
    } // namespace Droid
    } // namespace Elastos
}
