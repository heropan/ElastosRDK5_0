
module
{
    interface Elastos.Droid.Graphics.Drawable.IDrawable;

    namespace Elastos {
    namespace Droid {
    namespace Graphics {
    namespace Drawable {

    /**
     * Lets you assign a number of graphic images to a single Drawable and swap out the visible item by a string
     * ID value.
     * <p/>
     * <p>It can be defined in an XML file with the <code>&lt;selector></code> element.
     * Each state Drawable is defined in a nested <code>&lt;item></code> element. For more
     * information, see the guide to <a
     * href="{@docRoot}guide/topics/resources/drawable-resource.html">Drawable Resources</a>.</p>
     *
     * @attr ref android.R.styleable#StateListDrawable_visible
     * @attr ref android.R.styleable#StateListDrawable_variablePadding
     * @attr ref android.R.styleable#StateListDrawable_constantSize
     * @attr ref android.R.styleable#DrawableStates_state_focused
     * @attr ref android.R.styleable#DrawableStates_state_window_focused
     * @attr ref android.R.styleable#DrawableStates_state_enabled
     * @attr ref android.R.styleable#DrawableStates_state_checkable
     * @attr ref android.R.styleable#DrawableStates_state_checked
     * @attr ref android.R.styleable#DrawableStates_state_selected
     * @attr ref android.R.styleable#DrawableStates_state_activated
     * @attr ref android.R.styleable#DrawableStates_state_active
     * @attr ref android.R.styleable#DrawableStates_state_single
     * @attr ref android.R.styleable#DrawableStates_state_first
     * @attr ref android.R.styleable#DrawableStates_state_middle
     * @attr ref android.R.styleable#DrawableStates_state_last
     * @attr ref android.R.styleable#DrawableStates_state_pressed
     */


     /**
     * A helper class that contains several Drawables and selects which one to use.
     * You can subclass it to create your own DrawableContainers or directly use one
     * its child classes.
     *
     * @sa Drawable
     * @implements Elastos.Droid.Graphics.Drawable.IDrawableContainer
     *
     * @Involve
     * interface IDrawable
     * interface IDrawableContainer
     */

    [deprecated]
    interface IStateListDrawable {
        /**
         * Add a new image/string ID to the set of images.
         *
         * @param stateSet - An array of resource Ids to associate with the image.
         *                 Switch to this image by calling setState().
         * @param drawable -The image to show.
         */
        AddState(
            [in] ArrayOf<Int32>* stateSet,
            [in] IDrawable* drawable);

        /**
         * Gets the number of states contained in this drawable.
         *
         * @return The number of states contained in this drawable.
         * @hide pending API council
         * @see #getStateSet(int)
         * @see #getStateDrawable(int)
         */
        GetStateCount(
            [out] Int32* count);

        /**
         * Gets the drawable at an index.
         *
         * @param index The index of the drawable.
         * @return The drawable at the index.
         * @hide pending API council
         * @see #getStateCount()
         * @see #getStateSet(int)
         */
        GetStateDrawable(
            [in] Int32 index,
            [out] IDrawable** drawable);

        /**
         * Gets the index of the drawable with the provided state set.
         *
         * @param stateSet the state set to look up
         * @return the index of the provided state set, or -1 if not found
         * @hide pending API council
         * @see #getStateDrawable(int)
         * @see #getStateSet(int)
         */
        GetStateDrawableIndex(
            [in] ArrayOf<Int32>* stateSet,
            [out] Int32* index);

        /**
         * Gets the state set at an index.
         *
         * @param index The index of the state set.
         * @return The state set at the index.
         * @hide pending API council
         * @see #getStateCount()
         * @see #getStateDrawable(int)
         */
        GetStateSet(
            [in] Int32 index,
            [out, callee] ArrayOf<Int32>* stateSet);
    }

    } // namespace Drawable
    } // namespace Graphics
    } // namespace Droid
    } // namespace Elastos
}
