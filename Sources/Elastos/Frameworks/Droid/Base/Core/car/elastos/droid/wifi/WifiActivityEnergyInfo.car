
module
{
    namespace Elastos {
    namespace Droid {
    namespace Wifi {

    /**
     * Record of energy and activity information from controller and
     * underlying wifi stack state.Timestamp the record with system
     * time
     * @hide
     */
    /**
     * @Involved
     * interface IParcelable;
     */
    interface IWifiActivityEnergyInfo {
        const Int32 STACK_STATE_INVALID = 0;

        const Int32 STACK_STATE_STATE_ACTIVE = 1;

        const Int32 STACK_STATE_STATE_SCANNING = 2;

        const Int32 STACK_STATE_STATE_IDLE = 3;

        /**
         * @return bt stack reported state
         */
        GetStackState(
            [out] Int32* result);

        /**
         * @return tx time in ms
         */
        GetControllerTxTimeMillis(
            [out] Int32* result);

        /**
         * @return rx time in ms
         */
        GetControllerRxTimeMillis(
            [out] Int32* result);

        /**
         * @return idle time in ms
         */
        GetControllerIdleTimeMillis(
            [out] Int32* result);

        /**
         * product of current(mA), voltage(V) and time(ms)
         * @return energy used
         */
        GetControllerEnergyUsed(
            [out] Int32* result);

        /**
         * @return timestamp(wall clock) of record creation
         */
        GetTimeStamp(
            [out] Int64* result);

        /**
         * @return if the record is valid
         */
        IsValid(
            [out] Boolean* result);

    }

    } // namespace Wifi
    } // namespace Droid
    } // namespace Elastos
}
