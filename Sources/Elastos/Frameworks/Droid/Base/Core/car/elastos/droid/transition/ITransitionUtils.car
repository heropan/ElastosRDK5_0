
module
{
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IViewGroup;
    interface Elastos.Droid.Graphics.IMatrix;
    interface Elastos.Droid.Graphics.IRectF;
    interface Elastos.Droid.Graphics.IBitmap;
    interface Elastos.Droid.Animation.IAnimator;

    namespace Elastos {
    namespace Droid {
    namespace Transition {

    /**
     * Static utility methods for Transitions.
     *
     * @hide
     */
    [local, deprecated]
    interface ITransitionUtils {

        MergeAnimators(
            [in] IAnimator* animator1,
            [in] IAnimator* animator2,
            [out] IAnimator** result);

        MergeTransitions(
            [in] ArrayOf<ITransition*>* transitions,
            [out] ITransition** result);

        /**
         * Creates a View using the bitmap copy of <code>view</code>. If <code>view</code> is large,
         * the copy will use a scaled bitmap of the given view.
         *
         * @param sceneRoot The ViewGroup in which the view copy will be displayed.
         * @param view The view to create a copy of.
         * @param parent The parent of view.
         */
        CopyViewImage(
            [in] IViewGroup* sceneRoot,
            [in] IView* view,
            [in] IView* parent,
            [out] IView** result);

        /**
         * Creates a Bitmap of the given view, using the Matrix matrix to transform to the local
         * coordinates. <code>matrix</code> will be modified during the bitmap creation.
         *
         * <p>If the bitmap is large, it will be scaled uniformly down to at most 1MB size.</p>
         * @param view The view to create a bitmap for.
         * @param matrix The matrix converting the view local coordinates to the coordinates that
         *               the bitmap will be displayed in. <code>matrix</code> will be modified before
         *               returning.
         * @param bounds The bounds of the bitmap in the destination coordinate system (where the
         *               view should be presented. Typically, this is matrix.mapRect(viewBounds);
         * @return A bitmap of the given view or null if bounds has no width or height.
         */
        CreateViewBitmap(
            [in] IView* view,
            [in] IMatrix* matrix,
            [in] IRectF* bounds,
            [out] IBitmap** result);
    }

    } // Transition
    } // Droid
    } // Elastos
}
