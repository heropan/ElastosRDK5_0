
module
{
    interface Elastos.Utility.ILocale;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    interface ITimePickerOnTimeChangedListener;
    interface ITimePickerValidationCallback;

    /**
     * @Involve
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     * extends Elastos.Droid.Widget.IFrameLayout
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    interface ITimePicker {
		/**
         * Set the current hour.
         */
        SetCurrentHour(
            [in] Int32 currentHour);

        /**
         * @return The current hour in the range (0-23).
         */
        GetCurrentHour(
            [out] Int32* hour);

        /**
         * Set the current minute (0-59).
         */
        SetCurrentMinute(
            [in] Int32 currentMinute);

        /**
         * @return The current minute.
         */
        GetCurrentMinute(
            [out] Int32* currentMinute);

        /**
         * Set whether in 24 hour or AM/PM mode.
         *
         * @param is24HourView True = 24 hour mode. False = AM/PM.
         */
        SetIs24HourView(
            [in] Boolean is24HourView);

        /**
         * @return true if this is in 24 hour view else false.
         */
        Is24HourView(
            [out] Boolean* res);

		/**
	     * Set the callback that indicates the time has been adjusted by the user.
	     *
	     * @param onTimeChangedListener the callback, should not be null.
	     */
		SetOnTimeChangedListener(
			[in] ITimePickerOnTimeChangedListener* onTimeChangedListener);

        SetValidationCallback(
            [in] ITimePickerValidationCallback* validationCallback);
    }

    /**
     * The callback interface used to indicate the time has been adjusted.
     */
    interface ITimePickerOnTimeChangedListener {
        /**
         * @param view The view associated with this listener.
         * @param hourOfDay The current hour.
         * @param minute The current minute.
         */
        OnTimeChanged(
            [in] ITimePicker* view,
            [in] Int32 hourOfDay,
            [in] Int32 minute);
    }

    /**
     * A callback interface for updating input validity when the TimePicker
     * when included into a Dialog.
     *
     * @hide
     */
    interface ITimePickerValidationCallback {
        OnValidationChanged(
        	[in] Boolean valid);
    }

    /**
     * An abstract class which can be used as a start for TimePicker implementations
     */
    interface ITimePickerAbstractTimePickerDelegate {
        SetCurrentLocale(
        	[in] ILocale* locale);
    }

    } // namespace Widget
    } // namespace Droid
    } // namespace Elastos
}
