module
{
    merge("widget/Adapter.car");
    merge("widget/AdapterView.car");
    merge("widget/ListAdapter.car");
    merge("widget/BaseAdapter.car");
    merge("widget/AbsListView.car");
    merge("widget/AbsoluteLayout.car");
    merge("widget/ProgressBar.car");
    merge("widget/AbsSeekBar.car");
    merge("widget/AbsSpinner.car");
    merge("widget/TextView.car");
    merge("widget/EditText.car");
    merge("widget/AccessibilityIterators.car");
    merge("widget/ActivityChooserModel.car");
    merge("widget/ActivityChooserView.car");
    merge("widget/AdapterViewAnimator.car");
    merge("widget/AdapterViewFlipper.car");
    merge("widget/Advanceable.car");
    merge("widget/AlphabetIndexer.car");
    merge("widget/AnalogClock.car");
    merge("widget/AppSecurityPermissions.car");
    merge("widget/ArrayAdapter.car");
    merge("widget/AutoCompleteTextView.car");
    merge("widget/FrameLayout.car");
    merge("widget/DatePicker.car");
    merge("widget/DigitalClock.car");
    merge("widget/DateTimeView.car");
    merge("widget/RelativeLayout.car");
    merge("widget/DialerFilter.car");
    merge("widget/DoubleDigitManager.car");
    merge("widget/EdgeEffect.car");
    merge("widget/Editor.car");
    merge("widget/ListView.car");
    merge("widget/ExpandableListAdapter.car");
    merge("widget/ExpandableListConnector.car");
    merge("widget/ExpandableListPosition.car");
    merge("widget/ExpandableListView.car");
    merge("widget/Filter.car");
    merge("widget/Filterable.car");
    merge("widget/FilterQueryProvider.car");
    merge("widget/Gallery.car");
    merge("widget/GridLayout.car");
    merge("widget/GridView.car");
    merge("widget/HeterogeneousExpandableList.car");
    merge("widget/HorizontalScrollView.car");
    merge("widget/BaseExpandableListAdapter.car");
    merge("widget/CalendarView.car");
    merge("widget/Checkable.car");
    merge("widget/Button.car");
    merge("widget/CompoundButton.car");
    merge("widget/CheckBox.car");
    merge("widget/CheckedTextView.car");
    merge("widget/Chronometer.car");
    merge("widget/CursorAdapter.car");
    merge("widget/CursorFilter.car");
    merge("widget/CursorTreeAdapter.car");
    merge("widget/ImageView.car");
    merge("widget/LinearLayout.car");
    merge("widget/ListPopupWindow.car");
    merge("widget/MediaController.car");
    merge("widget/MultiAutoCompleteTextView.car");
    merge("widget/NumberPicker.car");
    merge("widget/PopupMenu.car");
    merge("widget/PopupWindow.car");
    merge("widget/QuickContactBadge.car");
    merge("widget/RadioButton.car");
    merge("widget/RadioGroup.car");
    merge("widget/RatingBar.car");
    merge("widget/RemoteViews.car");
    merge("widget/RemoteViewsAdapter.car");
    merge("widget/ResourceCursorAdapter.car");
    merge("widget/ResourceCursorTreeAdapter.car");
    merge("widget/Scroller.car");
    merge("widget/ScrollBarDrawable.car");
    merge("widget/ScrollView.car");
    merge("widget/SearchView.car");
    merge("widget/SectionIndexer.car");
    merge("widget/SeekBar.car");
    merge("widget/SimpleAdapter.car");
    merge("widget/SimpleCursorAdapter.car");
    merge("widget/SimpleCursorTreeAdapter.car");
    merge("widget/SimpleExpandableListAdapter.car");
    merge("widget/SlidingDrawer.car");
    merge("widget/Space.car");
    merge("widget/Spinner.car");
    merge("widget/SpinnerAdapter.car");
    merge("widget/StackView.car");
    merge("widget/SuggestionsAdapter.car");
    merge("widget/Switch.car");
    merge("widget/TabWidget.car");
    merge("widget/TabHost.car");
    merge("widget/TableLayout.car");
    merge("widget/TableRow.car");
    merge("widget/ViewAnimator.car");
    merge("widget/ViewSwitcher.car");
    merge("widget/ImageSwitcher.car");
    merge("widget/TextSwitcher.car");
    merge("widget/TextClock.car");
    merge("widget/TimePicker.car");
    merge("widget/Toast.car");
    merge("widget/ToggleButton.car");
    merge("widget/TwoLineListItem.car");
    merge("widget/SpellChecker.car");
    merge("widget/ZoomButtonsController.car");
    merge("widget/ZoomControls.car");
    merge("widget/RemoteViewsService.car");
    merge("widget/VideoView.car");
    merge("widget/ViewFlipper.car");
    merge("widget/WrapperListAdapter.car");
    merge("widget/HeaderViewListAdapter.car");
    merge("widget/ImageButton.car");
    merge("widget/ZoomButton.car");
    merge("widget/ShareActionProvider.car");
    merge("widget/RecycleListView.car");
    merge("widget/SearchViewSearchAutoComplete.car");
    merge("widget/VolumePanel.car");
    merge("widget/NumberPickerCustomEditText.car");
    merge("widget/RemoteViewsAdapterServiceConnection.car");
    merge("widget/ActionMenuView.car");
    merge("widget/OnDateChangedListener.car");
    merge("widget/DatePickerController.car");
    merge("widget/OverScroller.car");
    merge("widget/RadialTimePickerView.car");
    merge("widget/RemoteViewsListAdapter.car");
    merge("widget/Toolbar.car");
    merge("widget/ActionMenuPresenter.car");

   //  using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Content.IContext;
   //  interface Elastos.Droid.Content.IIntent;
    interface Elastos.Droid.Utility.IAttributeSet;
   //  interface Elastos.Droid.Database.ICursor;
   //  interface Elastos.Droid.Database.IDataSetObserver;
    interface Elastos.Droid.Graphics.Drawable.IDrawableCallback;
   //  interface Elastos.Droid.Graphics.Drawable.IBitmapDrawable;
   //  interface Elastos.Droid.Content.IDialogInterfaceOnClickListener;
   //  interface Elastos.Droid.Animation.IAnimatorListener;
   //  interface Elastos.Droid.Animation.IAnimatorUpdateListener;
   //  interface Elastos.Droid.App.ITransientNotification;
   //  interface Elastos.Droid.App.IDialog;
   //  interface Elastos.Droid.Os.IBinder;
   //  interface Elastos.Droid.Os.IHandler;
   //  interface Elastos.Droid.Os.IHandlerCallback;
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IViewGroup;
    interface Elastos.Droid.View.IViewGroupLayoutParams;
    interface Elastos.Droid.View.IViewGroupMarginLayoutParams;
    interface Elastos.Droid.View.IViewParent;
    interface Elastos.Droid.View.IViewManager;
    interface Elastos.Droid.View.IKeyEventCallback;
    interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource;
   //  interface Elastos.Droid.View.IOnPreDrawListener;
   //  interface Elastos.Droid.View.IGestureDetectorOnGestureListener;
   //  interface Elastos.Droid.View.IOnTouchModeChangeListener;
   //  interface Elastos.Droid.View.IViewOnFocusChangeListener;
   //  interface Elastos.Droid.View.IViewOnClickListener;
   //  interface Elastos.Droid.View.IViewOnTouchListener;
   //  interface Elastos.Droid.View.IViewOnCreateContextMenuListener;
   //  interface Elastos.Droid.View.Animation.IInterpolator;
   //  interface Elastos.Droid.View.IViewOnLongClickListener;
   //  interface Elastos.Droid.Internal.View.Menu.IMenuPresenterCallback;
   //  interface Elastos.Droid.View.Menu.IMenuBuilderCallback;
   //  interface Elastos.Droid.View.IOnGlobalLayoutListener;
   //  interface Elastos.Droid.View.ICollapsibleActionView;
   //  interface Elastos.Droid.View.IOnTouchModeChangeListener;
   //  interface Elastos.Droid.View.IWindowCallback;
   //  interface Elastos.Droid.Text.ITextWatcher;
   interface Elastos.Droid.Widget.ILinearLayoutLayoutParams;
   //  interface Elastos.Droid.Widget.ITextView;
   //  interface Elastos.Droid.Widget.IRemoteViewsAdapterServiceConnection;
   //  interface Elastos.Droid.Widget.ISeekBarOnSeekBarChangeListener;
   //  interface Elastos.Droid.Widget.IAdapterViewOnItemClickListener;
   //  interface Elastos.Droid.Widget.IOnChronometerTickListener;
   //  interface Elastos.Droid.Widget.Internal.IIRemoteViewsFactory;
   //  interface Elastos.Droid.Media.IAudioService;
   //  interface Elastos.Droid.InputMethodService.IKeyboardView;
   //  interface Elastos.Droid.InputMethodService.IOnKeyboardActionListener;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

   //  [local]
   //  class CView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  class CScrollBarDrawable {
   //      constructor();

   //      interface IScrollBarDrawable;
   //      interface IDrawableCallback;
   //  }

   //  [local]
   //  class CAbsoluteLayoutLayoutParams {

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Int32 x,
   //          [in] Int32 y);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      interface IAbsoluteLayoutLayoutParams;
   //  }

   //  [local]
   //  class CAbsoluteLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IAbsoluteLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CViewAnimator {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IViewAnimator;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }
   //  [local]
   //  class CViewSwitcher {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IViewSwitcher;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }
   //  [local]
   //  class CTextSwitcher {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ITextSwitcher;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }
   //  [local]
   //  class CFrameLayoutLayoutParams {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Int32 weight);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* marginSource);

   //      interface IFrameLayoutLayoutParams;
   //  }

   //  [local]
   //  class CFrameLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IFrameLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

    [local]
    class CLinearLayoutLayoutParams {
        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs);

        constructor(
            [in] Int32 width,
            [in] Int32 height);

        constructor(
            [in] Int32 width,
            [in] Int32 height,
            [in] Float weight);

        constructor(
            [in] IViewGroupLayoutParams* source);

        constructor(
            [in] IViewGroupMarginLayoutParams* marginSource);

        constructor(
            [in] ILinearLayoutLayoutParams* llsource);

        interface ILinearLayoutLayoutParams;
        interface IViewGroupMarginLayoutParams;
        interface IViewGroupLayoutParams;
    }

    [local]
    class CLinearLayout {
        constructor(
            [in] IContext* ctx);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr,
            [in] Int32 defStyleRes);

        interface ILinearLayout;
        interface IViewGroup;
        interface IView;
        interface IViewParent;
        interface IViewManager;
        interface IDrawableCallback;
        interface IKeyEventCallback;
        interface IAccessibilityEventSource;
    }

   //  [local]
   //  class CRelativeLayoutLayoutParams {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* marginSource);

   //      interface IRelativeLayoutLayoutParams;
   //  }

   //  [local]
   //  class CRelativeLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IRelativeLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CBlinkLayout {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IFrameLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CTableLayoutLayoutParams {
   //      constructor();

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Float initWeight);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* marginSource);

   //      interface ITableLayoutLayoutParams;
   //  }

   //  [local]
   //  class CTableLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ITableLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CTableRowLayoutParams {
   //      constructor();

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Float initWeight);

   //      constructor(
   //          [in] Int32 column);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* marginSource);

   //      interface ITableRowLayoutParams;
   //  }

   //  [local]
   //  class CTableRow {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ITableRow;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CImageView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IImageView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  class CAbsListViewSavedState {
   //      constructor(
   //          [in] IParcelable* superState);

   //      constructor();

   //      interface IAbsListViewSavedState;
   //      interface IParcelable;
   //  }

   //  [local]
   //  class CDialerFilter {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IDialerFilter;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CEdgeEffect {
   //      constructor(
   //          [in] IContext* ctx);

   //      interface IEdgeEffect;
   //  }

   //  [local]
   //  class CDatePicker {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IDatePicker;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CDigitalClock {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IDigitalClock;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IOnPreDrawListener;
   //  }

   //  [local]
   //  class CDateTimeView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IDateTimeView;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CDoubleDigitManager {
   //      constructor(
   //          [in] Int64 timeoutInMillis,
   //          [in] IDoubleDigitManagerCallBack* callBack);

   //      interface IDoubleDigitManager;
   //  }

   //  [local]
   //  class CTimePicker {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ITimePicker;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CImageButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IImageButton;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CImageSwitcher {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IImageSwitcher;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IButton;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CCheckBox {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ICheckBox;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CCompoundButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ICompoundButton;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CSwitch {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISwitch;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CToggleButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IToggleButton;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CTwoLineListItem {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ITwoLineListItem;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CRadioButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IRadioButton;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CRadioGroupLayoutParams {

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Float initWeight);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* marginSource);

   //      interface IRadioGroupLayoutParams;
   //  }

   //  [local]
   //  class CRadioGroup {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IRadioGroup;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  class CAbsSpinnerSavedState {
   //      constructor();

   //      constructor(
   //          [in] IParcelable* superState);

   //      interface IParcelable;
   //      interface IAbsSpinnerSavedState;
   //  }

   //  class CProgressBarSavedState {
   //      constructor();

   //      constructor(
   //          [in] IParcelable* superState);

   //      interface IParcelable;
   //      interface IProgressBarSavedState;
   //  }

   //  [local]
   //  class CAbsListViewLayoutParams {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 w,
   //          [in] Int32 h);

   //      constructor(
   //          [in] Int32 w,
   //          [in] Int32 h,
   //          [in] Int32 viewType);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      interface IAbsListViewLayoutParams;
   //  }

   //  [local]
   // class CScroller {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IInterpolator* interpolator);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IInterpolator* interpolator,
   //          [in] Boolean flywheel);

   //      interface IScroller;
   //  }

   //  [local]
   //  class CAutoCompleteTextView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IAutoCompleteTextView;
   //      interface IFilterListener;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CSearchViewSearchAutoComplete {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISearchViewSearchAutoComplete;
   //      interface IFilterListener;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CChronometer {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IChronometer;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CCheckedTextView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ICheckedTextView;
   //      interface ICheckable;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CAnalogClock {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IAnalogClock;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CCalendarView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ICalendarView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CScrollView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IScrollView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CSearchView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ISearchView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface ICollapsibleActionView;
   //  }

   //  [local]
   //  class CZoomButton {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IZoomButton;
   //      interface IViewOnLongClickListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CZoomControls {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IZoomControls;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CZoomButtonsController {
   //      constructor(
   //          [in] IView* ownerView);

   //      interface IZoomButtonsController;
   //      interface IViewOnTouchListener;
   //  }

   //  class CTextViewSavedState {
   //      constructor(
   //          [in] IParcelable* superState);

   //      constructor();

   //      interface ITextViewSavedState;
   //      interface IParcelable;
   //  }

   //  singleton class CTextViewHelper {
   //      interface ITextViewHelper;
   //  }

   //  [local]
   //  class CTextView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ITextView;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  singleton class CActivityChooserModelHelper {
   //      interface IActivityChooserModelHelper;
   //  }


   //  [local]
   //  class CEditText {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IEditText;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CNumberPickerCustomEditText {

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface INumberPickerCustomEditText;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CPopupWindow {
   //      constructor();

   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle,
   //          [in] Int32 defStyleRes);

   //      constructor(
   //          [in] IView* contentView);

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] IView* contentView,
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      constructor(
   //          [in] IView* contentView,
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Boolean focusable);

   //      interface IPopupWindow;
   //  }

   //  [local]
   //  class CExpandableListPosition {
   //      interface IExpandableListPosition;
   //  }

   //  [local]
   //  class CExpandableListView {
   //      interface IExpandableListView;
   //      interface ITextWatcher;
   //      interface IOnGlobalLayoutListener;
   //      interface IFilterListener;
   //      interface IOnTouchModeChangeListener;
   //      interface IRemoteAdapterConnectionCallback;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  singleton class CExpandableListViewHelper {
   //      interface IExpandableListViewHelper;
   //  }

   //  singleton class CExpandableListPositionHelper {
   //      interface IExpandableListPositionHelper;
   //  }

   //  [local]
   //  class CExpandableListConnector {
   //      interface IExpandableListConnector;
   //      interface IFilterable;
   //      interface ISpinnerAdapter;
   //  }

   //  singleton class CPositionMetadataHelper {
   //      interface IPositionMetadataHelper;
   //  }

   //  singleton class CGroupMetadataHelper {
   //      interface IGroupMetadataHelper;
   //  }

   //  [local]
   //  class CCursorFilter {
   //      constructor(
   //          [in] ICursorFilterClient* client);

   //      interface ICursorFilter;
   //  }

   //  class CAlphabetIndexer {
   //      constructor(
   //          [in] ICursor* pCursor,
   //          [in] Int32 sortedColumnIndex,
   //          [in] ICharSequence * pAlphabet);

   //      interface IAlphabetIndexer;
   //      interface IDataSetObserver;
   //      interface ISectionIndexer;
   //  }

   //  [local]
   //  class CArrayAdapter {

   //      constructor(
   //         [in] IContext* ctx,
   //         [in] Int32 textViewResourceId);

   //      constructor(
   //         [in] IContext* ctx,
   //         [in] Int32 resource,
   //         [in] Int32 textViewResourceId);

   //      constructor(
   //         [in] IContext* ctx,
   //         [in] Int32 textViewResourceId,
   //         [in] IObjectContainer* objects);

   //      constructor(
   //         [in] IContext* ctx,
   //         [in] Int32 resource,
   //         [in] Int32 textViewResourceId,
   //         [in] IObjectContainer* objects);

   //      interface IArrayAdapter;
   //      interface IFilterable;
   //      interface ISpinnerAdapter;
   //  }

   //  [local, deprecated]
   //  class CSimpleAdapter {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IObjectContainer* data,
   //          [in] Int32 resource,
   //          [in] ArrayOf<String>* from,
   //          [in] ArrayOf<Int32>* to);

   //      interface ISimpleAdapter;
   //      interface IFilterable;
   //      interface ISpinnerAdapter;
   //  }

   //  [local, deprecated]
   //  class CSimpleCursorAdapter {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 layout,
   //          [in] ICursor* c,
   //          [in] ArrayOf<String>* from,
   //          [in] ArrayOf<Int32>* to);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 layout,
   //          [in] ICursor* c,
   //          [in] ArrayOf<String>* from,
   //          [in] ArrayOf<Int32>* to,
   //          [in] Int32 flags);

   //      interface ISimpleCursorAdapter;
   //      interface IFilterable;
   //      interface ISpinnerAdapter;
   //      interface ICursorFilterClient;
   //  }

   //  [local]
   //  class CProgressBar {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle,
   //          [in] Int32 styleRes);

   //      interface IProgressBar;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CSeekBar {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISeekBar;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CShareActionProvider {
   //      constructor(
   //          [in] IContext* ctx);

   //      interface IShareActionProvider;
   //  }

   //  [local]
   //  class CToastTransientNotification {
   //      constructor(
   //          [in] IToast* toast);

   //      interface ITransientNotification;
   //      interface IBinder;
   //  }

   //  [local]
   //  class CToast {
   //      constructor(
   //          [in] IContext* ctx);

   //      interface IToast;
   //  }

   //  [local]
   //  singleton class CToastHelper {
   //      interface IToastHelper;
   //  }

   //  [local]
   //  class CTabWidget {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ITabWidget;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IViewOnFocusChangeListener;
   //  }

   //  [local]
   //  class CTabHost {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ITabHost;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IOnTouchModeChangeListener;
   //  }

   //  [local]
   //  class CVideoView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IVideoView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IMediaPlayerControl;
   //  }

   //  [local]
   //  class CVideoViewEx {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IVideoView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IMediaPlayerControl;
   //  }

   //  [local]
   //  class CGalleryLayoutParams {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] Int32 w,
   //          [in] Int32 h);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      interface IGalleryLayoutParams;
   //  }

   //  [local]
   //  class CGallery {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IGallery;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IGestureDetectorOnGestureListener;
   //  }

   //  [local]
   //  class CListView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IListView;
   //      interface ITextWatcher;
   //      interface IOnGlobalLayoutListener;
   //      interface IFilterListener;
   //      interface IOnTouchModeChangeListener;
   //      interface IRemoteAdapterConnectionCallback;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CRecycleListView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IRecycleListView;
   //      interface ITextWatcher;
   //      interface IOnGlobalLayoutListener;
   //      interface IFilterListener;
   //      interface IOnTouchModeChangeListener;
   //      interface IRemoteAdapterConnectionCallback;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CListPopupWindow {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle,
   //          [in] Int32 defStyleRes);

   //      interface IListPopupWindow;
   //  }

   //  [local]
   //  class CGridView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IGridView;
   //      interface ITextWatcher;
   //      interface IOnGlobalLayoutListener;
   //      interface IFilterListener;
   //      interface IOnTouchModeChangeListener;
   //      interface IRemoteAdapterConnectionCallback;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CHorizontalScrollView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IHorizontalScrollView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CMediaController {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Boolean useFastForWard);

   //      interface IMediaController;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CMultiAutoCompleteTextView {

   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IMultiAutoCompleteTextView;
   //      interface IFilterListener;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CNumberPicker {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface INumberPicker;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  singleton class CNumberPickerHelper {
   //      interface INumberPickerHelper;
   //  }

   //  [local]
   //  class CPopupMenu {

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IView* anchor);

   //      interface IPopupMenu;
   //      interface IMenuBuilderCallback;
   //      interface IMenuPresenterCallback;
   //  }

   //  [local]
   //  class CSpace {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISpace;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CRemoteViews {
   //      constructor();

   //      constructor(
   //          [in] String packageName,
   //          [in] Int32 layoutId);

   //      constructor(
   //          [in] IRemoteViews* landscape,
   //          [in] IRemoteViews* portrait);

   //      interface IRemoteViews;
   //      interface IParcelable;
   //  }

   //  [local]
   //  class CRemoteViewsAdapter {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IIntent* intent,
   //          [in] IRemoteAdapterConnectionCallback* cb);

   //      interface IRemoteViewsAdapter;
   //      interface ISpinnerAdapter;
   //      interface IHandlerCallback;
   //  }

   //  [local]
   //  class CRemoteViewsAdapterServiceConnection {
   //      constructor(
   //          [in] IRemoteViewsAdapter* adapter);

   //      interface IRemoteViewsAdapterServiceConnection;
   //      interface IBinder;
   //  }

   //  [local]
   //  class CRemoteViewsFactoryAdapter {
   //      constructor(
   //          [in] IRemoteViewsFactory* factory,
   //          [in] Boolean isCreated);

   //      interface IIRemoteViewsFactory;
   //      interface IBinder;
   //  }

   //  class CRemoteViewsBitmapCache {
   //      constructor();

   //      interface IRemoteViewsBitmapCache;
   //      interface IParcelable;
   //  }

   //  [local]
   //  class CSpinner {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 mode);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IDialogInterfaceOnClickListener;
   //      interface ISpinner;
   //  }

   //  [local]
   //  class CRatingBar {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IRatingBar;
   //  }

   //  [local]
   //  class CGridLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IGridLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CGridLayoutLayoutParams {
   //      constructor();

   //      constructor(
   //          [in] ISpec* rowSpec,
   //          [in] ISpec* columnSpec);

   //      constructor(
   //          [in] IViewGroupLayoutParams* vglp);

   //      constructor(
   //          [in] IViewGroupMarginLayoutParams* vmlp);

   //      constructor(
   //          [in] IGridLayoutLayoutParams* that);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IGridLayoutLayoutParams;
   //  }

   //  [local]
   //  class CViewFlipper {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IViewFlipper;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CVolumePanel {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAudioService* realOwner);

   //      interface IVolumePanel;
   //      interface IViewOnClickListener;
   //      interface IHandler;
   //      interface ISeekBarOnSeekBarChangeListener;
   //  }

   //  [local]
   //  class CVolumePanelDialog {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 theme,
   //          [in] IVolumePanel* panel);

   //      interface IDialog;
   //      interface IWindowCallback;
   //      interface IViewOnCreateContextMenuListener;
   //      interface IKeyEventCallback;
   //  }

   //  [local]
   //  class CAdapterViewAnimator {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IAdapterViewAnimator;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IAdvanceable;
   //      interface IRemoteAdapterConnectionCallback;
   //  }

   //  [local]
   //  class CStackView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IAdapterViewAnimator;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IAdvanceable;
   //      interface IRemoteAdapterConnectionCallback;
   //  }

   //  [local]
   //  class CStackViewLayoutParams {
   //      constructor(
   //          [in] IStackView* sv,
   //          [in] IView* view);

   //      constructor(
   //          [in] IStackView* sv,
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IStackViewLayoutParams;
   //  }

   //  [local, deprecated]
   //  class CSimpleExpandableListAdapter {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IObjectContainer* groupData,
   //          [in] Int32 groupLayout,
   //          [in] ArrayOf<String>* groupFrom,
   //          [in] ArrayOf<Int32>* groupTo,
   //          [in] IObjectContainer* childData,
   //          [in] Int32 childLayout,
   //          [in] ArrayOf<String>* childFrom,
   //          [in] ArrayOf<Int32>* childTo);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IObjectContainer* groupData,
   //          [in] Int32 expandedGroupLayout,
   //          [in] Int32 collapsedGroupLayout,
   //          [in] ArrayOf<String>* groupFrom,
   //          [in] ArrayOf<Int32>* groupTo,
   //          [in] IObjectContainer* childData,
   //          [in] Int32 childLayout,
   //          [in] ArrayOf<String>* childFrom,
   //          [in] ArrayOf<Int32>* childTo);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IObjectContainer* groupData,
   //          [in] Int32 expandedGroupLayout,
   //          [in] Int32 collapsedGroupLayout,
   //          [in] ArrayOf<String>* groupFrom,
   //          [in] ArrayOf<Int32>* groupTo,
   //          [in] IObjectContainer* childData,
   //          [in] Int32 childLayout,
   //          [in] Int32 lastChildLayout,
   //          [in] ArrayOf<String>* childFrom,
   //          [in] ArrayOf<Int32>* childTo);

   //      interface ISimpleExpandableListAdapter;
   //      interface IHeterogeneousExpandableList;
   //  }

   //  [local, deprecated]
   //  class CHeaderViewListAdapter {
   //      constructor(
   //          [in] ArrayOf<IFixedViewInfo*>* headerViewInfos,
   //          [in] ArrayOf<IFixedViewInfo*>* footerViewInfos,
   //          [in] IListAdapter* adapter);

   //      interface IHeaderViewListAdapter;
   //      interface IWrapperListAdapter;
   //      interface IFilterable;
   //  }

   //  [local]
   //  class CSlidingDrawer {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISlidingDrawer;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

    } // namespace Widget
    } // namespace Droid
    } // namespace Elastos


   //  //==========================================================================

   //  namespace Elastos {
   //  namespace Droid {
   //  namespace Widget {
   //  namespace Internal {

   //  [local]
   //  class CDialogTitle {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IDialogTitle;
   //      interface IOnPreDrawListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CScrollingTabContainerView {

   //      constructor(
   //          [in] IContext* ctx);

   //      interface IScrollingTabContainerView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IAdapterViewOnItemClickListener;
   //  }

   //  [local]
   //  singleton class CSmileys {

   //      interface ISmileys;
   //  }

   //  [local]
   //  class CDigitalClock2 {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IDigitalClock;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CSlidingTab {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ISlidingTab;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CWaveView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IWaveView;
   //      interface IAnimatorUpdateListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CFaceUnlockView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IFaceUnlockView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CPointerLocationView {
   //      constructor(
   //          [in] IContext* ctx);

   //      interface IPointerLocationView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CLinearLayoutWithDefaultTouchRecepient {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ILinearLayoutWithDefaultTouchRecepient;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CPasswordEntryKeyboard {
   //       constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 xmlLayoutResId);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 xmlLayoutResId,
   //          [in] Int32 width,
   //          [in] Int32 height);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 xmlLayoutResId,
   //          [in] Int32 modeId,
   //          [in] Int32 width,
   //          [in] Int32 height);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 xmlLayoutResId,
   //          [in] Int32 modeId);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] Int32 layoutTemplateResId,
   //          [in] ICharSequence* characters,
   //          [in] Int32 columns,
   //          [in] Int32 horizontalPadding);

   //      interface IPasswordEntryKeyboard;
   //  }

   //  [local, deprecated]
   //  class CPasswordEntryKeyboardHelper {

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] IKeyboardView* keyboardView,
   //          [in] IView* targetView);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] IKeyboardView* keyboardView,
   //          [in] IView* targetView,
   //          [in] Boolean useFullScreenWidth);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] IKeyboardView* keyboardView,
   //          [in] IView* targetView,
   //          [in] Boolean useFullScreenWidth,
   //          [in] ArrayOf<Int32>* layouts);

   //      interface IPasswordEntryKeyboardHelper;
   //      interface IOnKeyboardActionListener;
   //  }

   //  [local]
   //  class CPasswordEntryKeyboardView {

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //       constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IPasswordEntryKeyboardView;
   //      interface IViewOnClickListener;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CDrawableHolder {

   //      constructor(
   //          [in] IBitmapDrawable* drawable);

   //      constructor(
   //          [in] IBitmapDrawable* drawable,
   //          [in] Float x,
   //          [in] Float y);

   //      interface IDrawableHolder;
   //      interface IAnimatorListener;
   //  }

   //  [local]
   //  class CEditableInputConnection {

   //      constructor(
   //          [in] ITextView* textview);

   //      interface IEditableInputConnection;
   //  }

   //  [local]
   //  class CWeightedLinearLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IWeightedLinearLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CRotarySelector {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IRotarySelector;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CTransportControlView {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ITransportControlView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface ILockScreenWidgetInterface;
   //      interface IViewOnClickListener;
   //  }

   //  class CTransportControlViewSavedState {
   //      constructor();

   //      constructor(
   //          [in] IParcelable* superState);

   //      interface IParcelable;
   //      interface ITransportControlViewSavedState;
   //  }

   //  [local]
   //  class CActionBarContextView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface IActionBarContextView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IAnimatorListener;
   //  }

   //  [local]
   //  class CTextProgressBar {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ITextProgressBar;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //      interface IOnChronometerTickListener;
   //  }

   //      [local]
   //  class CActionBarView {
   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IActionBarView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //      [local]
   //  class CActionBarOverlayLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IActionBarOverlayLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //      [local]
   //  class CActionBarContainer {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IActionBarContainer;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }


   //  [local]
   //  class CSizeAdaptiveLayoutLayoutParams {
   //      /**
   //       * Constructs a new LayoutParams with default values as defined in {@link LayoutParams}.
   //       */
   //      constructor();

   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height);

   //      /**
   //       * Creates a new set of layout parameters with the specified width, height
   //       * and valid height bounds.
   //       *
   //       * @param width the width, either {@link #MATCH_PARENT},
   //       *        {@link #WRAP_CONTENT} or a fixed size in pixels
   //       * @param height the height, either {@link #MATCH_PARENT},
   //       *        {@link #WRAP_CONTENT} or a fixed size in pixels
   //       * @param minHeight the minimum height of this child
   //       * @param maxHeight the maximum height of this child
   //       *        or {@link #UNBOUNDED} if the child can grow forever
   //       */
   //      constructor(
   //          [in] Int32 width,
   //          [in] Int32 height,
   //          [in] Int32 x,
   //          [in] Int32 y);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IViewGroupLayoutParams* source);

   //      interface ISizeAdaptiveLayoutLayoutParams;
   //  }

   //  [local]
   //  class CSizeAdaptiveLayout {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs,
   //          [in] Int32 defStyle);

   //      interface ISizeAdaptiveLayout;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CActionBarViewHomeView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface IActionBarViewHomeView;
   //      interface IViewParent;
   //      interface IViewManager;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CLockPatternView {
   //      constructor(
   //          [in] IContext* ctx);

   //      constructor(
   //          [in] IContext* ctx,
   //          [in] IAttributeSet* attrs);

   //      interface ILockPatternView;
   //      interface IDrawableCallback;
   //      interface IKeyEventCallback;
   //      interface IAccessibilityEventSource;
   //  }

   //  [local]
   //  class CLockPatternViewSavedState {
   //      constructor(
   //          [in] IParcel* parcel);

   //      constructor(
   //          [in] IParcelable* superState,
   //          [in] String serializedPattern,
   //          [in] Int32 displayMode,
   //          [in] Boolean inputEnabled,
   //          [in] Boolean inStealthMode,
   //          [in] Boolean tactileFeedbackEnabled);

   //      interface ILockPatternViewSavedState;
   //  }

   //  [local]
   //  class CLockPatternUtils {
   //      constructor(
   //          [in] IContext* ctx);

   //      interface ILockPatternUtils;
   //  }

   //  } // namespace Internal
   //  } // namespace Widget
   //  } // namespace Droid
   //  } // namespace Elastos
}
