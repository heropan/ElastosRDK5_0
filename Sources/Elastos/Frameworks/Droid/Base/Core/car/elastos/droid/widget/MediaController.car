
module
{
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IViewOnClickListener;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    interface IMediaPlayerControl {
        Start();

        Pause();

        GetDuration(
            [out] Int32* duration);

        GetCurrentPosition(
            [out] Int32* position);

        SeekTo(
            [in] Int32 position);

        IsPlaying(
            [out] Boolean* isPlaying);

        GetBufferPercentage(
            [out] Int32* percentage);

        CanPause(
            [out] Boolean* canPause);

        CanSeekBackward(
            [out] Boolean* canSeekBackward);

        CanSeekForward(
            [out] Boolean* canSeekForward);

        /**
         * Get the audio session id for the player used by this VideoView. This can be used to
         * apply audio effects to the audio track of a video.
         * @return The audio session, or 0 if there was an error.
         */
        GetAudioSessionId(
            [out] Int32* result);
    }

    /**
     * A view containing controls for a MediaPlayer. Typically contains the
     * buttons like "Play/Pause", "Rewind", "Fast Forward" and a progress
     * slider. It takes care of synchronizing the controls with the state
     * of the MediaPlayer.
     * <p>
     * The way to use this class is to instantiate it programatically.
     * The MediaController will create a default set of controls
     * and put them in a window floating above your application. Specifically,
     * the controls will float above the view specified with setAnchorView().
     * The window will disappear if left idle for three seconds and reappear
     * when the user touches the anchor view.
     * <p>
     * Functions like show() and hide() have no effect when MediaController
     * is created in an xml layout.
     *
     * MediaController will hide and
     * show the buttons according to these rules:
     * <ul>
     * <li> The "previous" and "next" buttons are hidden until setPrevNextListeners()
     *   has been called
     * <li> The "previous" and "next" buttons are visible but disabled if
     *   setPrevNextListeners() was called with null listeners
     * <li> The "rewind" and "fastforward" buttons are shown unless requested
     *   otherwise by using the MediaController(Context, boolean) constructor
     *   with the boolean set to false
     * </ul>
     */
    /**
     * @Involve
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     * extends Elastos.Droid.Widget.IFrameLayout
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    [local]
    interface IMediaController {
        SetMediaPlayer(
            [in] IMediaPlayerControl* player);

        /**
         * Set the view that acts as the anchor for the control view.
         * This can for example be a VideoView, or your Activity's main view.
         * @param view The view to which to anchor the controller when it is visible.
         */
        SetAnchorView(
            [in] IView* view);

        /**
         * Show the controller on screen. It will go away
         * automatically after 3 seconds of inactivity.
         */
        Show();

        /**
         * Show the controller on screen. It will go away
         * automatically after 'timeout' milliseconds of inactivity.
         * @param timeout The timeout in milliseconds. Use 0 to show
         * the controller until hide() is called.
         */
        Show(
            [in] Int32 timeout);

        IsShowing(
            [out] Boolean* isShowing);

        /**
         * Remove the controller from the screen.
         */
        Hide();

        SetPrevNextListeners(
            [in] IViewOnClickListener* next,
            [in] IViewOnClickListener* prev);
    }

    } // namespace Widget
    } // namespace Droid
    } // namespace Elastos
}
