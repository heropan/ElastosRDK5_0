
module
{

    namespace Elastos {
    namespace Droid {
    namespace View {

    /**
     * Helper for tracking the velocity of touch events, for implementing
     * flinging and other such gestures.
     *
     * Use {@link #obtain} to retrieve a new instance of the class when you are going
     * to begin tracking.  Put the motion events you receive into it with
     * {@link #addMovement(MotionEvent)}.  When you want to determine the velocity call
     * {@link #computeCurrentVelocity(int)} and then call {@link #getXVelocity(int)}
     * and {@link #getYVelocity(int)} to retrieve the velocity for each pointer id.
     */
    interface IVelocityTracker {
        Recycle();

        Clear();

        AddMovement(
            [in] IMotionEvent* event);

        ComputeCurrentVelocity(
            [in] Int32 units);

        ComputeCurrentVelocity(
            [in] Int32 units,
            [in] Float maxVelocity);

        GetXVelocity(
            [out] Float* velocity);

        GetYVelocity(
            [out] Float* velocity);

        GetXVelocity(
            [in] Int32 id,
            [out] Float* velocity);

        GetYVelocity(
            [in] Int32 id,
            [out] Float* velocity);
    }

    interface IVelocityTrackerHelper {
        Obtain(
            [out] IVelocityTracker** velocity);

        Obtain(
            [in] String strategy,
            [out] IVelocityTracker** velocity);
    }

    } // namespace View
    } // namepsace Droid
    } // namespace Elastos
}
