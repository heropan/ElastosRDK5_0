module
{
    namespace Elastos {
    namespace Droid {
    namespace Speech {
    namespace Tts {

    /**
     * Exposes parts of the {@link AudioTrack} API by delegating calls to an
     * underlying {@link AudioTrack}. Additionally, provides methods like
     * {@link #waitAndRelease()} that will block until all audiotrack
     * data has been flushed to the mixer, and is estimated to have completed
     * playback.
     */
    interface IBlockingAudioTrack {

        /*
         * if I expose this function, I have to expose AudioOutputParams and enclose it into a CAR interface
         *
        constructor(
            [in] AudioOutputParams audioParams,
            [in] Int32 sampleRate,
            [in] Int32 audioFormat,
            [in] Int32 channelCount);
        */

        Init(
            [out] Boolean* ret);

        Stop();

        Write(
            [in] ArrayOf<Byte>* data,
            [out] Int32* ret);

        WaitAndRelease();
    }

    } // namespace Tts
    } // namespace Speech
    } // namespace Droid
    } // namespace Elastos

}


