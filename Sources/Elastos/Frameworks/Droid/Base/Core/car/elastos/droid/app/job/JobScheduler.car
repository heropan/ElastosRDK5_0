module
{
    using interface Elastos.Utility.IList;

    interface Elastos.Droid.App.Job.IJobInfo;

    namespace Elastos {
    namespace Droid {
    namespace App {
    namespace Job {

    interface IJobScheduler {
        /**
         * Returned from {@link #schedule(JobInfo)} when an invalid parameter was supplied. This can occur
         * if the run-time for your job is too short, or perhaps the system can't resolve the
         * requisite {@link JobService} in your package.
         */
        const Int32 RESULT_FAILURE = 0;
        /**
         * Returned from {@link #schedule(JobInfo)} if this application has made too many requests for
         * work over too short a time.
         */
        // TODO: Determine if this is necessary.
        const Int32 RESULT_SUCCESS = 1;

        /**
         * @param job The job you wish scheduled. See
         * {@link android.app.job.JobInfo.Builder JobInfo.Builder} for more detail on the sorts of jobs
         * you can schedule.
         * @return If >0, this int returns the jobId of the successfully scheduled job.
         * Otherwise you have to compare the return value to the error codes defined in this class.
         */
        Schedule(
            [in] IJobInfo* job,
            [out] Int32* result);

        /**
         * Cancel a job that is pending in the JobScheduler.
         * @param jobId unique identifier for this job. Obtain this value from the jobs returned by
         * {@link #getAllPendingJobs()}.
         * @return
         */
        Cancel(
            [in] Int32 jobId);

        /**
         * Cancel all jobs that have been registered with the JobScheduler by this package.
         */
        CancelAll();

        /**
         * @return a list of all the jobs registered by this package that have not yet been executed.
         */
        GetAllPendingJobs(
            [out] IList** jobs);
    }

    } // namespace Job
    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}