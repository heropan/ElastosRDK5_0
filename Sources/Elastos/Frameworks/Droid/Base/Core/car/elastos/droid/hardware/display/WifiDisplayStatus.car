
module
{
    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Display {

    /**
     * @Involve
     * interface IParcelable;
     */
    interface IWifiDisplayStatus {
        /** Feature state: Wifi display is not available on this device. */
        const Int32 FEATURE_STATE_UNAVAILABLE = 0;
        /** Feature state: Wifi display is disabled, probably because Wifi is disabled. */
        const Int32 FEATURE_STATE_DISABLED = 1;
        /** Feature state: Wifi display is turned off in settings. */
        const Int32 FEATURE_STATE_OFF = 2;
        /** Feature state: Wifi display is turned on in settings. */
        const Int32 FEATURE_STATE_ON = 3;

        /** Scan state: Not currently scanning. */
        const Int32 SCAN_STATE_NOT_SCANNING = 0;
        /** Scan state: Currently scanning. */
        const Int32 SCAN_STATE_SCANNING = 1;

        /** Display state: Not connected. */
        const Int32 DISPLAY_STATE_NOT_CONNECTED = 0;
        /** Display state: Connecting to active display. */
        const Int32 DISPLAY_STATE_CONNECTING = 1;
        /** Display state: Connected to active display. */
        const Int32 DISPLAY_STATE_CONNECTED = 2;

        /**
         * Returns the state of the Wifi display feature on this device.
         * <p>
         * The value of this property reflects whether the device supports the Wifi display,
         * whether it has been enabled by the user and whether the prerequisites for
         * connecting to displays have been met.
         * </p>
         */
        GetFeatureState(
            [out] Int32* state);

        /**
         * Returns the current state of the Wifi display scan.
         *
         * @return One of: {@link #SCAN_STATE_NOT_SCANNING} or {@link #SCAN_STATE_SCANNING}.
         */
        GetScanState(
            [out] Int32* state);

        /**
         * Get the state of the currently active display.
         *
         * @return One of: {@link #DISPLAY_STATE_NOT_CONNECTED}, {@link #DISPLAY_STATE_CONNECTING},
         * or {@link #DISPLAY_STATE_CONNECTED}.
         */
        GetActiveDisplayState(
            [out] Int32* state);

        /**
         * Gets the Wifi display that is currently active.  It may be connecting or
         * connected.
         */
        GetActiveDisplay(
            [out] IWifiDisplay** display);

        /**
         * Gets the list of Wifi displays, returns a combined list of all available
         * Wifi displays as reported by the most recent scan, and all remembered
         * Wifi displays (not necessarily available at the time).
         */
        GetDisplays(
            [out, callee] ArrayOf<IWifiDisplay*>* displays);

        /**
         * Gets the Wifi display session info (required for certification only)
         */
        GetSessionInfo(
            [out] IWifiDisplaySessionInfo** result);

        ToString(
            [out] String* info);
    }

    } // namespace Display
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
