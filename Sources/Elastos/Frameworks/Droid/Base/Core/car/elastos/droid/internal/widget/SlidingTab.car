
module
{
    interface Elastos.Droid.View.IView;
    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Widget {

    /**
     * Interface definition for a callback to be invoked when a tab is triggered
     * by moving it beyond a threshold.
     */
    [local]
    interface ISlidingTabOnTriggerListener {
        /**
         * The interface was triggered because the user let go of the handle without reaching the
         * threshold.
         */
        const Int32 NO_HANDLE = 0;

        /**
         * The interface was triggered because the user grabbed the left handle and moved it past
         * the threshold.
         */
        const Int32 LEFT_HANDLE = 1;

        /**
         * The interface was triggered because the user grabbed the right handle and moved it past
         * the threshold.
         */
        const Int32 RIGHT_HANDLE = 2;

        /**
         * Called when the user moves a handle beyond the threshold.
         *
         * @param v The view that was triggered.
         * @param whichHandle  Which "dial handle" the user grabbed,
         *        either {@link #LEFT_HANDLE}, {@link #RIGHT_HANDLE}.
         */
        OnTrigger(
            [in] IView* v,
            [in] Int32 whichHandle);

        /**
         * Called when the "grabbed state" changes (i.e. when the user either grabs or releases
         * one of the handles.)
         *
         * @param v the view that was triggered
         * @param grabbedState the new state: {@link #NO_HANDLE}, {@link #LEFT_HANDLE},
         * or {@link #RIGHT_HANDLE}.
         */
        OnGrabbedStateChange(
            [in] IView* v,
            [in] Int32 grabbedState);
    }

    /**
     * A special widget containing two Sliders and a threshold for each.  Moving either slider beyond
     * the threshold will cause the registered ISlidingTabOnTriggerListener.onTrigger() to be called with
     * whichHandle being {@link ISlidingTabOnTriggerListener#LEFT_HANDLE} or {@link ISlidingTabOnTriggerListener#RIGHT_HANDLE}
     * Equivalently, selecting a tab will result in a call to
     * {@link ISlidingTabOnTriggerListener#onGrabbedStateChange(View, int)} with one of these two states. Releasing
     * the tab will result in whichHandle being {@link ISlidingTabOnTriggerListener#NO_HANDLE}.
     *
     * @Involve
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
     [local]
    interface ISlidingTab {
        /**
         * Reset the tabs to their original state and stop any existing animation.
         * Animate them back into place if animate is true.
         *
         * @param animate
         */
        Reset(
            [in] Boolean animate);

        /**
         * Sets the left handle icon to a given resource.
         *
         * The resource should refer to a Drawable object, or use 0 to remove
         * the icon.
         *
         * @param iconId the resource ID of the icon drawable
         * @param targetId the resource of the target drawable
         * @param barId the resource of the bar drawable (stateful)
         * @param tabId the resource of the
         */
        SetLeftTabResources(
            [in] Int32 iconId,
            [in] Int32 targetId,
            [in] Int32 barId,
            [in] Int32 tabId);

        /**
         * Sets the left handle hint text to a given resource string.
         *
         * @param resId
         */
        SetLeftHintText(
            [in] Int32 resId);

        /**
         * Sets the right handle icon to a given resource.
         *
         * The resource should refer to a Drawable object, or use 0 to remove
         * the icon.
         *
         * @param iconId the resource ID of the icon drawable
         * @param targetId the resource of the target drawable
         * @param barId the resource of the bar drawable (stateful)
         * @param tabId the resource of the
         */
        SetRightTabResources(
            [in] Int32 iconId,
            [in] Int32 targetId,
            [in] Int32 barId,
            [in] Int32 tabId);

        /**
         * Sets the left handle hint text to a given resource string.
         *
         * @param resId
         */
        SetRightHintText(
            [in] Int32 resId);

        SetHoldAfterTrigger(
            [in] Boolean holdLeft,
            [in] Boolean holdRight);

        /**
         * Registers a callback to be invoked when the user triggers an event.
         *
         * @param listener the OnDialTriggerListener to attach to this view
         */
        SetISlidingTabOnTriggerListener(
            [in] ISlidingTabOnTriggerListener* listener);
    }

    }// namespace Widget
    }// namespace Internal
    }// namespace Droid
    }// namespace Elastos

}

