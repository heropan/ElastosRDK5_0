
module
{
    interface Elastos.Core.ICharSequence;
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.Pm.IServiceInfo;
    interface Elastos.Droid.Content.Pm.IPackageManager;
    interface Elastos.Droid.Content.IComponentName;
    interface Elastos.Droid.Graphics.Drawable.IDrawable;

    namespace Elastos {
    namespace Droid {
    namespace View {
    namespace InputMethod {

    /**
     * This class is used to specify meta information of an input method.
     *
     * <p>It should be defined in an XML resource file with an {@code &lt;input-method>} element.
     * For more information, see the guide to
     * <a href="{@docRoot}guide/topics/text/creating-input-method.html">
     * Creating an Input Method</a>.</p>
     *
     * @see InputMethodSubtype
     *
     * @attr ref android.R.styleable#InputMethod_settingsActivity
     * @attr ref android.R.styleable#InputMethod_isDefault
     * @attr ref android.R.styleable#InputMethod_supportsSwitchingToNextInputMethod
     */
    /**
     * @Involve
     * interface IParcelable
     */
    [local, parcelable]
    interface IInputMethodInfo {
        /**
         * Return a unique ID for this input method.  The ID is generated from
         * the package and class name implementing the method.
         */
        GetId(
            [out] String* id);

        /**
         * Return the .apk package that implements this input method.
         */
        GetPackageName(
            [out] String* name);

        /**
         * Return the class name of the service component that implements
         * this input method.
         */
        GetServiceName(
            [out] String* name);

        /**
         * Return the raw information about the Service implementing this
         * input method.  Do not modify the returned object.
         */
        GetServiceInfo(
            [out] IServiceInfo** info);

        /**
         * Return the component of the service that implements this input
         * method.
         */
        GetComponent(
            [out] IComponentName** name);

        /**
         * Load the user-displayed label for this input method.
         *
         * @param pm Supply a PackageManager used to load the input method's
         * resources.
         */
        LoadLabel(
            [in] IPackageManager* pm,
            [out] ICharSequence** str);

        /**
         * Load the user-displayed icon for this input method.
         *
         * @param pm Supply a PackageManager used to load the input method's
         * resources.
         */
        LoadIcon(
            [in] IPackageManager* pm,
            [out] IDrawable** drawable);

        /**
         * Return the class name of an activity that provides a settings UI for
         * the input method.  You can launch this activity be starting it with
         * an {@link android.content.Intent} whose action is MAIN and with an
         * explicit {@link android.content.ComponentName}
         * composed of {@link #getPackageName} and the class name returned here.
         *
         * <p>A null will be returned if there is no settings activity associated
         * with the input method.
         */
        GetSettingsActivity(
            [out] String* settings);

        /**
         * Return the count of the subtypes of Input Method.
         */
        GetSubtypeCount(
            [out] Int32* count);

        /**
         * Return the Input Method's subtype at the specified index.
         *
         * @param index the index of the subtype to return.
         */
        GetSubtypeAt(
            [in] Int32 index,
            [out] IInputMethodSubtype** subType);

        /**
         * Return the resource identifier of a resource inside of this input
         * method's .apk that determines whether it should be considered a
         * default input method for the system.
         */
        GetIsDefaultResourceId(
            [out] Int32* id);

        /**
         * Return whether or not this ime is a default ime or not.
         * @hide
         */
        IsDefault(
            [in] IContext* ctx,
            [out] Boolean* result);

        /**
         * @hide
         */
        IsAuxiliaryIme(
            [out] Boolean* result);

        /**
         * @return true if this input method supports ways to switch to a next input method.
         * @hide
         */
        SupportsSwitchingToNextInputMethod(
            [out] Boolean* supports);
    }

    } // namespace InputMethod
    } // namespace View
    } // namepsace Droid
    } // namespace Elastos
}
