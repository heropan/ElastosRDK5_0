
module
{
    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Camera2 {
    namespace Utils {

    /**
     * Keep track of a single concurrent task starting and finishing;
     * allow draining the existing task and figuring out when the task has finished
     * (and won't restart).
     *
     * <p>The initial state is to allow all tasks to be started and finished. A task may only be started
     * once, after which it must be finished before starting again. Likewise, finishing a task
     * that hasn't been started is also not allowed.</p>
     *
     * <p>When draining begins, the task cannot be started again. This guarantees that at some
     * point the task will be finished forever, at which point the {@link DrainListener#onDrained}
     * callback will be invoked.</p>
     */
    interface ITaskSingleDrainer {
        /**
         * Mark this asynchronous task as having started.
         *
         * <p>The task cannot be started more than once without first having finished. Once
         * draining begins with {@link #beginDrain}, no new tasks can be started.</p>
         *
         * @see #taskFinished
         * @see #beginDrain
         *
         * @throws IllegalStateException
         *          If attempting to start a task which is already started (and not finished),
         *          or if attempting to start a task after draining has begun.
         */
        TaskStarted();

        /**
         * Do not allow any more task re-starts; once the existing task is finished,
         * fire the {@link DrainListener#onDrained} callback asynchronously.
         *
         * <p>This operation is idempotent; calling it more than once has no effect.</p>
         */
        BeginDrain();

        /**
         * Mark this asynchronous task as having finished.
         *
         * <p>The task cannot be finished if it hasn't started. Once finished, a task
         * cannot be finished again (unless it's started again).</p>
         *
         * @see #taskStarted
         * @see #beginDrain
         *
         * @throws IllegalStateException
         *          If attempting to start a task which is already finished (and not re-started),
         */
        TaskFinished();
    }

    } // namespace Utils
    } // namespace Camera2
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
