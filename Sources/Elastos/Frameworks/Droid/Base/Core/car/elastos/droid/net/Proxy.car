
module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Net.IProxyInfo;

    using interface Org.Apache.Http.IHttpHost;

    namespace Elastos {
    namespace Droid {
    namespace Net {

    /**
     * A convenience class for accessing the user and default proxy
     * settings.
     */
    /**
     * @Involved
     * no super interface
     */
    interface IProxy {
        /**
         * Used to notify an app that's caching the default connection proxy
         * that either the default connection or its proxy has changed.
         * The intent will have the following extra value:</p>
         * <ul>
         *   <li><em>EXTRA_PROXY_INFO</em> - The ProxyProperties for the proxy.  Non-null,
         *                                   though if the proxy is undefined the host string
         *                                   will be empty.
         * </ul>
         *
         * <p class="note">This is a protected intent that can only be sent by the system
         */
        // @SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
        const String PROXY_CHANGE_ACTION = "android.intent.action.PROXY_CHANGE";

        /**
         * Intent extra included with {@link #PROXY_CHANGE_ACTION} intents.
         * It describes the new proxy being used (as a {@link ProxyInfo} object).
         */
        const String EXTRA_PROXY_INFO = "android.intent.extra.PROXY_INFO";

        /** @hide */
        const Int32 PROXY_VALID = 0;

        /** @hide */
        const Int32 PROXY_HOSTNAME_EMPTY = 1;

        /** @hide */
        const Int32 PROXY_HOSTNAME_INVALID = 2;

        /** @hide */
        const Int32 PROXY_PORT_EMPTY = 3;

        /** @hide */
        const Int32 PROXY_PORT_INVALID = 4;

        /** @hide */
        const Int32 PROXY_EXCLLIST_INVALID = 5;

        /**
         * Return the proxy object to be used for the URL given as parameter.
         * @param ctx A Context used to get the settings for the proxy host.
         * @param url A URL to be accessed. Used to evaluate exclusion list.
         * @return Proxy (java.net) object containing the host name. If the
         *         user did not set a hostname it returns the default host.
         *         A null value means that no host is to be used.
         * {@hide}
         */
        GetProxy(
            [in] IContext* ctx,
            [in] String url,
            [out] Elastos.Net.IProxy** result);

        /**
         * Return the proxy host set by the user.
         * @param ctx A Context used to get the settings for the proxy host.
         * @return String containing the host name. If the user did not set a host
         *         name it returns the default host. A null value means that no
         *         host is to be used.
         * @deprecated Use standard java vm proxy values to find the host, port
         *         and exclusion list.  This call ignores the exclusion list.
         */
        GetHost(
            [in] IContext* ctx,
            [out] String* result);

        /**
         * Return the proxy port set by the user.
         * @param ctx A Context used to get the settings for the proxy port.
         * @return The port number to use or -1 if no proxy is to be used.
         * @deprecated Use standard java vm proxy values to find the host, port
         *         and exclusion list.  This call ignores the exclusion list.
         */
        GetPort(
            [in] IContext* ctx,
            [out] Int32* result);

        /**
         * Return the default proxy host specified by the carrier.
         * @return String containing the host name or null if there is no proxy for
         * this carrier.
         * @deprecated Use standard java vm proxy values to find the host, port and
         *         exclusion list.  This call ignores the exclusion list and no
         *         longer reports only mobile-data apn-based proxy values.
         */
        GetDefaultHost(
            [out] String* result);

        /**
         * Return the default proxy port specified by the carrier.
         * @return The port number to be used with the proxy host or -1 if there is
         * no proxy for this carrier.
         * @deprecated Use standard java vm proxy values to find the host, port and
         *         exclusion list.  This call ignores the exclusion list and no
         *         longer reports only mobile-data apn-based proxy values.
         */
        GetDefaultPort(
            [out] Int32* result);

        /**
         * Returns the preferred proxy to be used by clients. This is a wrapper
         * around {@link android.net.Proxy#getHost()}.
         *
         * @param context the context which will be passed to
         * {@link android.net.Proxy#getHost()}
         * @param url the target URL for the request
         * @note Calling this method requires permission
         * android.permission.ACCESS_NETWORK_STATE
         * @return The preferred proxy to be used by clients, or null if there
         * is no proxy.
         * {@hide}
         */
        GetPreferredHttpHost(
            [in] IContext* context,
            [in] String url,
            [out] IHttpHost** result);

        /**
         * Validate syntax of hostname, port and exclusion list entries
         * {@hide}
         */
        Validate(
            [in] String hostname,
            [in] String port,
            [in] String exclList,
            [out] Int32* result);

        /** @hide */
        SetHttpProxySystemProperty(
            [in] IProxyInfo* p);

        /** @hide */
        SetHttpProxySystemProperty(
            [in] String host,
            [in] String port,
            [in] String exclList,
            [in] IUri* pacFileUrl);

    }

    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
