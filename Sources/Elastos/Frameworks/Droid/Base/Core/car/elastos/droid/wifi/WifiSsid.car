
module
{
    namespace Elastos {
    namespace Droid {
    namespace Wifi {

    /**
     * Stores SSID octets and handles conversion.
     *
     * For Ascii encoded string, any octet < 32 or > 127 is encoded as
     * a "\x" followed by the hex representation of the octet.
     * Exception chars are ", \, \e, \n, \r, \t which are escaped by a \
     * See src/utils/common.c for the implementation in the supplicant.
     *
     * @hide
     */
    interface IWifiSsid {
        const String NONE = "<unknown ssid>";

        /** @hide */
        GetOctets(
            [out, callee] ArrayOf<Byte>* octets);

        /** @hide */
        GetHexString(
            [out] String* hexString);

        ToString(
            [out] String* value);
    }

    interface IWifiSsidHelper {
        CreateFromAsciiEncoded(
            [in] String asciiEncoded,
            [out] IWifiSsid** wifiSsid);

        CreateFromHex(
            [in] String hexStr,
            [out] IWifiSsid** wifiSsid);
    }

    } // namespace Wifi
    } // namespace Droid
    } // namespace Elastos
}

