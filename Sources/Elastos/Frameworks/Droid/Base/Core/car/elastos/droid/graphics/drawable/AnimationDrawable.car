
module
{
    interface Elastos.Droid.Graphics.Drawable.IDrawable;

    namespace Elastos {
    namespace Droid {
    namespace Graphics {
    namespace Drawable {

    /**
     *
     * An object used to create frame-by-frame animations, defined by a series of Drawable objects,
     * which can be used as a View object's background.
     * <p>
     * The simplest way to create a frame-by-frame animation is to define the animation in an XML
     * file, placed in the res/drawable/ folder, and set it as the background to a View object. Then, call somthing
     * to run the animation.Somthing meams:
     *
     *@sa #start()
     *
     * <p>
     * An AnimationDrawable defined in XML consists of a single <code>&lt;animation-list></code> element,
     * and a series of nested <code>&lt;item></code> tags. Each item defines a frame of the animation.
     * See the example below.
     * </p>
     * <p>spin_animation.xml file in res/drawable/ folder:</p>
     * <pre>&lt;!-- Animation frames are wheel0.png -- wheel5.png files inside the
     * res/drawable/ folder --&gt;
     * &lt;animation-list android:id=&quot;@+id/selected&quot; android:oneshot=&quot;false&quot;&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel0&quot; android:duration=&quot;50&quot; /&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel1&quot; android:duration=&quot;50&quot; /&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel2&quot; android:duration=&quot;50&quot; /&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel3&quot; android:duration=&quot;50&quot; /&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel4&quot; android:duration=&quot;50&quot; /&gt;
     *    &lt;item android:drawable=&quot;@drawable/wheel5&quot; android:duration=&quot;50&quot; /&gt;
     * &lt;/animation-list&gt;</pre>
     *
     * <p>Here is the code to load and play this animation.</p>
     * <pre>
     * // Load the ImageView that will host the animation and
     * // set its background to our AnimationDrawable XML resource.
     * ImageView img = (ImageView)findViewById(R.id.spinning_wheel_image);
     * img.setBackgroundResource(R.drawable.spin_animation);
     *
     * // Get the background, which has been compiled to an AnimationDrawable object.
     * AnimationDrawable frameAnimation = (AnimationDrawable) img.getBackground();
     *
     * // Start the animation (looped playback by default).
     * frameAnimation.start();
     * </pre>
     *
     * <div class="special reference">
     * <h3>Developer Guides</h3>
     * <p>For more information about animating with {@code AnimationDrawable}, read the
     * <a href="{@docRoot}guide/topics/graphics/drawable-animation.html">Drawable Animation</a>
     * developer guide.</p>
     * </div>
     *
     * @attr ref android.R.styleable#AnimationDrawable_visible
     * @attr ref android.R.styleable#AnimationDrawable_variablePadding
     * @attr ref android.R.styleable#AnimationDrawable_oneshot
     * @attr ref android.R.styleable#AnimationDrawableItem_duration
     * @attr ref android.R.styleable#AnimationDrawableItem_drawable
     */

     /**
     * A helper class that contains several Drawables and selects which one to use.
     * You can subclass it to create your own DrawableContainers or directly use one
     * its child classes.
     *
     * @sa Drawable
     * @implements Elastos.Droid.Graphics.Drawable.IDrawableContainer
     */
    /**
     * @Involve
     * interface IDrawableContainer
     * interface IDrawable
     * interface IDrawableCallback
     * interface IRunnable
     * interface IAnimatable
     */
    interface IAnimationDrawable {
        /**
         * Add a frame to the animation
         *
         * @param frame The frame to add
         * @param duration How long in milliseconds the frame should appear
         */
        AddFrame(
            [in] IDrawable* frame,
            [in] Int32 duration);

        /**
         * @return The duration in milliseconds of the frame at the
         * specified index
         */
        GetDuration(
            [in] Int32 i,
            [out] Int32* duration);

        /**
         * @return The Drawable at the specified frame index
         */
        GetFrame(
            [in] Int32 index,
            [out] IDrawable** drawable);

        /**
         * @return The number of frames in the animation
         */
        GetNumberOfFrames(
            [out] Int32* number);

        /**
         * @return True of the animation will play once, false otherwise
         */
        IsOneShot(
            [out] Boolean* result);

        /**
         * Sets whether the animation should play once or repeat.
         *
         * @param oneShot Pass true if the animation should only play once
         */
        SetOneShot(
            [in] Boolean oneShot);
    }

    } // namespace Drawable
    } // namespace Graphics
    } // namespace Droid
    } // namespace Elastos
}
