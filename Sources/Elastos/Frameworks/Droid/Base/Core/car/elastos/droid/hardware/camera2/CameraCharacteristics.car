
module
{
    using interface Elastos.Utility.IList;

    interface Elastos.Droid.Hardware.Camera2.Impl.ICameraMetadataNative;
    interface Elastos.Droid.Hardware.Camera2.Impl.ICameraMetadataNativeKey;

    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Camera2 {

    /**
     * A {@code Key} is used to do camera characteristics field lookups with
     * {@link CameraCharacteristics#get}.
     *
     * <p>For example, to get the stream configuration map:
     * <code><pre>
     * StreamConfigurationMap map = cameraCharacteristics.get(
     *      CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
     * </pre></code>
     * </p>
     *
     * <p>To enumerate over all possible keys for {@link CameraCharacteristics}, see
     * {@link CameraCharacteristics#getKeys()}.</p>
     *
     * @see CameraCharacteristics#get
     * @see CameraCharacteristics#getKeys()
     */
    interface ICameraCharacteristicsKey {
        /**
         * Return a camelCase, period separated name formatted like:
         * {@code "root.section[.subsections].name"}.
         *
         * <p>Built-in keys exposed by the Android SDK are always prefixed with {@code "android."};
         * keys that are device/platform-specific are prefixed with {@code "com."}.</p>
         *
         * <p>For example, {@code CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP} would
         * have a name of {@code "android.scaler.streamConfigurationMap"}; whereas a device
         * specific key might look like {@code "com.google.nexus.data.private"}.</p>
         *
         * @return String representation of the key name
         */
        GetName(
            [out] String* name);

        /**
         * Visible for CameraMetadataNative implementation only; do not use.
         *
         * TODO: Make this private or remove it altogether.
         *
         * @hide
         */
        GetNativeKey(
            [out] ICameraMetadataNativeKey** key);
    }

    /**
     * <p>The properties describing a
     * {@link CameraDevice CameraDevice}.</p>
     *
     * <p>These properties are fixed for a given CameraDevice, and can be queried
     * through the {@link CameraManager CameraManager}
     * interface with {@link CameraManager#getCameraCharacteristics}.</p>
     *
     * <p>{@link CameraCharacteristics} objects are immutable.</p>
     *
     * @see CameraDevice
     * @see CameraManager
     *
     * @ invoke
     * interface ICameraMetadata
     */
    interface ICameraCharacteristics {
        /**
         * Returns a copy of the underlying {@link CameraMetadataNative}.
         * @hide
         */
        GetNativeCopy(
            [out] ICameraMetadataNative** outcmn);

        /**
         * Get a camera characteristics field value.
         *
         * <p>The field definitions can be
         * found in {@link CameraCharacteristics}.</p>
         *
         * <p>Querying the value for the same key more than once will return a value
         * which is equal to the previous queried value.</p>
         *
         * @throws IllegalArgumentException if the key was not valid
         *
         * @param key The characteristics field to read.
         * @return The value of that key, or {@code null} if the field is not set.
         */
        Get(
            [in] ICameraCharacteristicsKey* key,
            [out] IInterface** outface);

        /**
         * Returns the list of keys supported by this {@link CameraDevice} for querying
         * with a {@link CaptureRequest}.
         *
         * <p>The list returned is not modifiable, so any attempts to modify it will throw
         * a {@code UnsupportedOperationException}.</p>
         *
         * <p>Each key is only listed once in the list. The order of the keys is undefined.</p>
         *
         * <p>Note that there is no {@code getAvailableCameraCharacteristicsKeys()} -- use
         * {@link #getKeys()} instead.</p>
         *
         * @return List of keys supported by this CameraDevice for CaptureRequests.
         */
        //@SuppressWarnings({"unchecked"})
        GetAvailableCaptureRequestKeys(
            [out] IList** outlist);

        /**
         * Returns the list of keys supported by this {@link CameraDevice} for querying
         * with a {@link CaptureResult}.
         *
         * <p>The list returned is not modifiable, so any attempts to modify it will throw
         * a {@code UnsupportedOperationException}.</p>
         *
         * <p>Each key is only listed once in the list. The order of the keys is undefined.</p>
         *
         * <p>Note that there is no {@code getAvailableCameraCharacteristicsKeys()} -- use
         * {@link #getKeys()} instead.</p>
         *
         * @return List of keys supported by this CameraDevice for CaptureResults.
         */
        //@SuppressWarnings({"unchecked"})
        GetAvailableCaptureResultKeys(
            [out] IList** outlist);
    }

    } // namespace Camera2
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
