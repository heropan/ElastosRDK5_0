
module
{
    namespace Elastos {
    namespace Droid {
    namespace Server {

    /**
     * Utility class that you can call on with a timeout, and get called back
     * after a given time, dealing correctly with restarting the timeout.
     *
     * <p>For example, this class is used by the android.os.Vibrator class.
     */
    interface IResettableTimeout {
        /**
         * Override this do what you need to do when it's starting
         * This is called with the monitor on this method held, so be careful.
         *
         * @param alreadyOn is true if it's currently running
         */
        On(
            [in] Boolean alreadyOn);

        /**
         * Override this to do what you need to do when it's stopping.
         * This is called with the monitor on this method held, so be careful.
         */
        Off();

        /**
         * Does the following steps.
         * <p>1. Call on()</p>
         * <p>2. Start the timer.</p>
         * <p>3. At the timeout, calls off()<p>
         * <p>If you call this again, the timeout is reset to the new one</p>
         */
        Go(
            [in] Int64 milliseconds);

        /**
         * Cancel the timeout and call off now.
         */
        Cancel();
    }

    } // namespace Server
    } // namepsace Droid
    } // namespace Elastos
}
