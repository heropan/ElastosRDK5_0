
module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Text.ITextPaint;
    interface Elastos.Droid.Text.ILayoutDirections;
    interface Elastos.Droid.Text.ITextDirectionHeuristic;

    enum Elastos.Droid.Text.LayoutAlignment;
    enum Elastos.Droid.Text.TextUtilsTruncateAt;

    namespace Elastos {
    namespace Droid {
    namespace Text {

    /**
     * @Involve
     * interface Elastos.Droid.Graphics.IPaintFontMetricsInt
     */
    interface IBoringLayoutMetrics {
        GetWidth(
            [out] Int32* width);

        SetWidth(
            [in] Int32 width);

        GetTop(
            [out] Float* top);

        SetTop(
            [in] Float top);

        GetAscent(
            [out] Float* ascent);

        SetAscent(
            [in] Float ascent);

        GetDescent(
            [out] Float* descent);

        SetDescent(
            [in] Float descent);

        GetBottom(
            [out] Float* bottom);

        SetBottom(
            [in] Float bottom);

        GetLeading(
            [out] Float* leading);

        SetLeading(
            [in] Float leading);
    }

    /**
     * @Involve
     * interface ITextUtilsEllipsizeCallback
     * interface ILayout
     */
    interface IBoringLayout {
        /**
         * Returns a BoringLayout for the specified text, potentially reusing
         * this one if it is already suitable.  The caller must make sure that
         * no one is still using this Layout.
         */
        ReplaceOrMake(
            [in] ICharSequence* source,
            [in] ITextPaint* paint,
            [in] Int32 outerwidth,
            [in] LayoutAlignment align,
            [in] Float spacingmult,
            [in] Float spacingadd,
            [in] IBoringLayoutMetrics* metrics,
            [in] Boolean includepad,
            [out] IBoringLayout** layout);

        /**
         * Returns a BoringLayout for the specified text, potentially reusing
         * this one if it is already suitable.  The caller must make sure that
         * no one is still using this Layout.
         */
        ReplaceOrMake(
            [in] ICharSequence* source,
            [in] ITextPaint* paint,
            [in] Int32 outerwidth,
            [in] LayoutAlignment align,
            [in] Float spacingmult,
            [in] Float spacingadd,
            [in] IBoringLayoutMetrics* metrics,
            [in] Boolean includepad,
            [in] TextUtilsTruncateAt ellipsize,
            [in] Int32 ellipsizedWidth,
            [out] IBoringLayout** layout);
    }

    /**
     * @Involve
     * interface ILayoutHelper
     */
    interface IBoringLayoutHelper {
        Make(
            [in] ICharSequence* source,
            [in] ITextPaint* paint,
            [in] Int32 outerwidth,
            [in] LayoutAlignment align,
            [in] Float spacingmult,
            [in] Float spacingadd,
            [in] IBoringLayoutMetrics* metrics,
            [in] Boolean includepad,
            [out] IBoringLayout** ret);

        Make(
            [in] ICharSequence* source,
            [in] ITextPaint* paint,
            [in] Int32 outerwidth,
            [in] LayoutAlignment align,
            [in] Float spacingmult,
            [in] Float spacingadd,
            [in] IBoringLayoutMetrics* metrics,
            [in] Boolean includepad,
            [in] TextUtilsTruncateAt ellipsize,
            [in] Int32 ellipsizedWidth,
            [out] IBoringLayout** ret);

        IsBoring(
            [in] ICharSequence* text,
            [in] ITextPaint* paint,
            [out] IBoringLayoutMetrics** ret);

        IsBoring(
            [in] ICharSequence* text,
            [in] ITextPaint* paint,
            [in] ITextDirectionHeuristic* textDir,
            [out] IBoringLayoutMetrics** ret);

        IsBoring(
            [in] ICharSequence* text,
            [in] ITextPaint* paint,
            [in] IBoringLayoutMetrics* metrics,
            [out] IBoringLayoutMetrics** ret);

        IsBoring(
            [in] ICharSequence* text,
            [in] ITextPaint* paint,
            [in] ITextDirectionHeuristic* textDir,
            [in] IBoringLayoutMetrics* metrics,
            [out] IBoringLayoutMetrics** ret);
    }

    } // namespace Text
    } // namepsace Droid
    } // namespace Elastos
}
