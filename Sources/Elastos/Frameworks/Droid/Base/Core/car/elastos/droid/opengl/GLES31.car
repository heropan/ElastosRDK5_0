
module
{
    using interface Elastos.IO.IInt32Buffer;
    using interface Elastos.IO.IFloatBuffer;

    namespace Elastos {
    namespace Droid {
    namespace Opengl {

    /** OpenGL ES 3.1
     */
    [deprecated]
    interface IGLES31 {

        const Int32 _GL__VERTEX_SHADER_BIT                            = 0x00000001;
        const Int32 _GL__FRAGMENT_SHADER_BIT                          = 0x00000002;
        const Int32 _GL__UNIFORM_BARRIER_BIT                          = 0x00000004;
        const Int32 _GL__TEXTURE_FETCH_BARRIER_BIT                    = 0x00000008;
        const Int32 _GL__COMPUTE_SHADER_BIT                           = 0x00000020;
        const Int32 _GL__COMMAND_BARRIER_BIT                          = 0x00000040;
        const Int32 _GL__PIXEL_BUFFER_BARRIER_BIT                     = 0x00000080;
        const Int32 _GL__TEXTURE_UPDATE_BARRIER_BIT                   = 0x00000100;
        const Int32 _GL__BUFFER_UPDATE_BARRIER_BIT                    = 0x00000200;
        const Int32 _GL__FRAMEBUFFER_BARRIER_BIT                      = 0x00000400;
        const Int32 _GL__TRANSFORM_FEEDBACK_BARRIER_BIT               = 0x00000800;
        const Int32 _GL__ATOMIC_COUNTER_BARRIER_BIT                   = 0x00001000;
        const Int32 _GL__SHADER_STORAGE_BARRIER_BIT                   = 0x00002000;
        const Int32 _GL__ALL_SHADER_BITS                              = -1; // 0xFFFFFFFF

        const Int32 _GL__TEXTURE_WIDTH                                = 0x1000;
        const Int32 _GL__TEXTURE_HEIGHT                               = 0x1001;
        const Int32 _GL__TEXTURE_INTERNAL_FORMAT                      = 0x1003;
        const Int32 _GL__STENCIL_INDEX                                = 0x1901;
        const Int32 _GL__TEXTURE_RED_SIZE                             = 0x805C;
        const Int32 _GL__TEXTURE_GREEN_SIZE                           = 0x805D;
        const Int32 _GL__TEXTURE_BLUE_SIZE                            = 0x805E;
        const Int32 _GL__TEXTURE_ALPHA_SIZE                           = 0x805F;
        const Int32 _GL__TEXTURE_DEPTH                                = 0x8071;
        const Int32 _GL__PROGRAM_SEPARABLE                            = 0x8258;
        const Int32 _GL__ACTIVE_PROGRAM                               = 0x8259;
        const Int32 _GL__PROGRAM_PIPELINE_BINDING                     = 0x825A;
        const Int32 _GL__MAX_COMPUTE_SHARED_MEMORY_SIZE               = 0x8262;
        const Int32 _GL__MAX_COMPUTE_UNIFORM_COMPONENTS               = 0x8263;
        const Int32 _GL__MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS           = 0x8264;
        const Int32 _GL__MAX_COMPUTE_ATOMIC_COUNTERS                  = 0x8265;
        const Int32 _GL__MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS      = 0x8266;
        const Int32 _GL__COMPUTE_WORK_GROUP_SIZE                      = 0x8267;
        const Int32 _GL__MAX_UNIFORM_LOCATIONS                        = 0x826E;
        const Int32 _GL__VERTEX_ATTRIB_BINDING                        = 0x82D4;
        const Int32 _GL__VERTEX_ATTRIB_RELATIVE_OFFSET                = 0x82D5;
        const Int32 _GL__VERTEX_BINDING_DIVISOR                       = 0x82D6;
        const Int32 _GL__VERTEX_BINDING_OFFSET                        = 0x82D7;
        const Int32 _GL__VERTEX_BINDING_STRIDE                        = 0x82D8;
        const Int32 _GL__MAX_VERTEX_ATTRIB_RELATIVE_OFFSET            = 0x82D9;
        const Int32 _GL__MAX_VERTEX_ATTRIB_BINDINGS                   = 0x82DA;
        const Int32 _GL__MAX_VERTEX_ATTRIB_STRIDE                     = 0x82E5;
        const Int32 _GL__TEXTURE_COMPRESSED                           = 0x86A1;
        const Int32 _GL__TEXTURE_DEPTH_SIZE                           = 0x884A;
        const Int32 _GL__READ_ONLY                                    = 0x88B8;
        const Int32 _GL__WRITE_ONLY                                   = 0x88B9;
        const Int32 _GL__READ_WRITE                                   = 0x88BA;
        const Int32 _GL__TEXTURE_STENCIL_SIZE                         = 0x88F1;
        const Int32 _GL__TEXTURE_RED_TYPE                             = 0x8C10;
        const Int32 _GL__TEXTURE_GREEN_TYPE                           = 0x8C11;
        const Int32 _GL__TEXTURE_BLUE_TYPE                            = 0x8C12;
        const Int32 _GL__TEXTURE_ALPHA_TYPE                           = 0x8C13;
        const Int32 _GL__TEXTURE_DEPTH_TYPE                           = 0x8C16;
        const Int32 _GL__TEXTURE_SHARED_SIZE                          = 0x8C3F;
        const Int32 _GL__SAMPLE_POSITION                              = 0x8E50;
        const Int32 _GL__SAMPLE_MASK                                  = 0x8E51;
        const Int32 _GL__SAMPLE_MASK_VALUE                            = 0x8E52;
        const Int32 _GL__MAX_SAMPLE_MASK_WORDS                        = 0x8E59;
        const Int32 _GL__MIN_PROGRAM_TEXTURE_GATHER_OFFSET            = 0x8E5E;
        const Int32 _GL__MAX_PROGRAM_TEXTURE_GATHER_OFFSET            = 0x8E5F;
        const Int32 _GL__MAX_IMAGE_UNITS                              = 0x8F38;
        const Int32 _GL__MAX_COMBINED_SHADER_OUTPUT_RESOURCES         = 0x8F39;
        const Int32 _GL__IMAGE_BINDING_NAME                           = 0x8F3A;
        const Int32 _GL__IMAGE_BINDING_LEVEL                          = 0x8F3B;
        const Int32 _GL__IMAGE_BINDING_LAYERED                        = 0x8F3C;
        const Int32 _GL__IMAGE_BINDING_LAYER                          = 0x8F3D;
        const Int32 _GL__IMAGE_BINDING_ACCESS                         = 0x8F3E;
        const Int32 _GL__DRAW_INDIRECT_BUFFER                         = 0x8F3F;
        const Int32 _GL__DRAW_INDIRECT_BUFFER_BINDING                 = 0x8F43;
        const Int32 _GL__VERTEX_BINDING_BUFFER                        = 0x8F4F;
        const Int32 _GL__IMAGE_2D                                     = 0x904D;
        const Int32 _GL__IMAGE_3D                                     = 0x904E;
        const Int32 _GL__IMAGE_CUBE                                   = 0x9050;
        const Int32 _GL__IMAGE_2D_ARRAY                               = 0x9053;
        const Int32 _GL__INT_IMAGE_2D                                 = 0x9058;
        const Int32 _GL__INT_IMAGE_3D                                 = 0x9059;
        const Int32 _GL__INT_IMAGE_CUBE                               = 0x905B;
        const Int32 _GL__INT_IMAGE_2D_ARRAY                           = 0x905E;
        const Int32 _GL__UNSIGNED_INT_IMAGE_2D                        = 0x9063;
        const Int32 _GL__UNSIGNED_INT_IMAGE_3D                        = 0x9064;
        const Int32 _GL__UNSIGNED_INT_IMAGE_CUBE                      = 0x9066;
        const Int32 _GL__UNSIGNED_INT_IMAGE_2D_ARRAY                  = 0x9069;
        const Int32 _GL__IMAGE_BINDING_FORMAT                         = 0x906E;
        const Int32 _GL__IMAGE_FORMAT_COMPATIBILITY_TYPE              = 0x90C7;
        const Int32 _GL__IMAGE_FORMAT_COMPATIBILITY_BY_SIZE           = 0x90C8;
        const Int32 _GL__IMAGE_FORMAT_COMPATIBILITY_BY_CLASS          = 0x90C9;
        const Int32 _GL__MAX_VERTEX_IMAGE_UNIFORMS                    = 0x90CA;
        const Int32 _GL__MAX_FRAGMENT_IMAGE_UNIFORMS                  = 0x90CE;
        const Int32 _GL__MAX_COMBINED_IMAGE_UNIFORMS                  = 0x90CF;
        const Int32 _GL__SHADER_STORAGE_BUFFER                        = 0x90D2;
        const Int32 _GL__SHADER_STORAGE_BUFFER_BINDING                = 0x90D3;
        const Int32 _GL__SHADER_STORAGE_BUFFER_START                  = 0x90D4;
        const Int32 _GL__SHADER_STORAGE_BUFFER_SIZE                   = 0x90D5;
        const Int32 _GL__MAX_VERTEX_SHADER_STORAGE_BLOCKS             = 0x90D6;
        const Int32 _GL__MAX_FRAGMENT_SHADER_STORAGE_BLOCKS           = 0x90DA;
        const Int32 _GL__MAX_COMPUTE_SHADER_STORAGE_BLOCKS            = 0x90DB;
        const Int32 _GL__MAX_COMBINED_SHADER_STORAGE_BLOCKS           = 0x90DC;
        const Int32 _GL__MAX_SHADER_STORAGE_BUFFER_BINDINGS           = 0x90DD;
        const Int32 _GL__MAX_SHADER_STORAGE_BLOCK_SIZE                = 0x90DE;
        const Int32 _GL__SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT       = 0x90DF;
        const Int32 _GL__DEPTH_STENCIL_TEXTURE_MODE                   = 0x90EA;
        const Int32 _GL__MAX_COMPUTE_WORK_GROUP_INVOCATIONS           = 0x90EB;
        const Int32 _GL__DISPATCH_INDIRECT_BUFFER                     = 0x90EE;
        const Int32 _GL__DISPATCH_INDIRECT_BUFFER_BINDING             = 0x90EF;
        const Int32 _GL__TEXTURE_2D_MULTISAMPLE                       = 0x9100;
        const Int32 _GL__TEXTURE_BINDING_2D_MULTISAMPLE               = 0x9104;
        const Int32 _GL__TEXTURE_SAMPLES                              = 0x9106;
        const Int32 _GL__TEXTURE_FIXED_SAMPLE_LOCATIONS               = 0x9107;
        const Int32 _GL__SAMPLER_2D_MULTISAMPLE                       = 0x9108;
        const Int32 _GL__INT_SAMPLER_2D_MULTISAMPLE                   = 0x9109;
        const Int32 _GL__UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE          = 0x910A;
        const Int32 _GL__MAX_COLOR_TEXTURE_SAMPLES                    = 0x910E;
        const Int32 _GL__MAX_DEPTH_TEXTURE_SAMPLES                    = 0x910F;
        const Int32 _GL__MAX_INTEGER_SAMPLES                          = 0x9110;
        const Int32 _GL__COMPUTE_SHADER                               = 0x91B9;
        const Int32 _GL__MAX_COMPUTE_UNIFORM_BLOCKS                   = 0x91BB;
        const Int32 _GL__MAX_COMPUTE_TEXTURE_IMAGE_UNITS              = 0x91BC;
        const Int32 _GL__MAX_COMPUTE_IMAGE_UNIFORMS                   = 0x91BD;
        const Int32 _GL__MAX_COMPUTE_WORK_GROUP_COUNT                 = 0x91BE;
        const Int32 _GL__MAX_COMPUTE_WORK_GROUP_SIZE                  = 0x91BF;
        const Int32 _GL__ATOMIC_COUNTER_BUFFER                        = 0x92C0;
        const Int32 _GL__ATOMIC_COUNTER_BUFFER_BINDING                = 0x92C1;
        const Int32 _GL__ATOMIC_COUNTER_BUFFER_START                  = 0x92C2;
        const Int32 _GL__ATOMIC_COUNTER_BUFFER_SIZE                   = 0x92C3;
        const Int32 _GL__MAX_VERTEX_ATOMIC_COUNTER_BUFFERS            = 0x92CC;
        const Int32 _GL__MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS          = 0x92D0;
        const Int32 _GL__MAX_COMBINED_ATOMIC_COUNTER_BUFFERS          = 0x92D1;
        const Int32 _GL__MAX_VERTEX_ATOMIC_COUNTERS                   = 0x92D2;
        const Int32 _GL__MAX_FRAGMENT_ATOMIC_COUNTERS                 = 0x92D6;
        const Int32 _GL__MAX_COMBINED_ATOMIC_COUNTERS                 = 0x92D7;
        const Int32 _GL__MAX_ATOMIC_COUNTER_BUFFER_SIZE               = 0x92D8;
        const Int32 _GL__ACTIVE_ATOMIC_COUNTER_BUFFERS                = 0x92D9;
        const Int32 _GL__UNSIGNED_INT_ATOMIC_COUNTER                  = 0x92DB;
        const Int32 _GL__MAX_ATOMIC_COUNTER_BUFFER_BINDINGS           = 0x92DC;
        const Int32 _GL__UNIFORM                                      = 0x92E1;
        const Int32 _GL__UNIFORM_BLOCK                                = 0x92E2;
        const Int32 _GL__PROGRAM_INPUT                                = 0x92E3;
        const Int32 _GL__PROGRAM_OUTPUT                               = 0x92E4;
        const Int32 _GL__BUFFER_VARIABLE                              = 0x92E5;
        const Int32 _GL__SHADER_STORAGE_BLOCK                         = 0x92E6;
        const Int32 _GL__TRANSFORM_FEEDBACK_VARYING                   = 0x92F4;
        const Int32 _GL__ACTIVE_RESOURCES                             = 0x92F5;
        const Int32 _GL__MAX_NAME_LENGTH                              = 0x92F6;
        const Int32 _GL__MAX_NUM_ACTIVE_VARIABLES                     = 0x92F7;
        const Int32 _GL__NAME_LENGTH                                  = 0x92F9;
        const Int32 _GL__TYPE                                         = 0x92FA;
        const Int32 _GL__ARRAY_SIZE                                   = 0x92FB;
        const Int32 _GL__OFFSET                                       = 0x92FC;
        const Int32 _GL__BLOCK_INDEX                                  = 0x92FD;
        const Int32 _GL__ARRAY_STRIDE                                 = 0x92FE;
        const Int32 _GL__MATRIX_STRIDE                                = 0x92FF;
        const Int32 _GL__IS_ROW_MAJOR                                 = 0x9300;
        const Int32 _GL__ATOMIC_COUNTER_BUFFER_INDEX                  = 0x9301;
        const Int32 _GL__BUFFER_BINDING                               = 0x9302;
        const Int32 _GL__BUFFER_DATA_SIZE                             = 0x9303;
        const Int32 _GL__NUM_ACTIVE_VARIABLES                         = 0x9304;
        const Int32 _GL__ACTIVE_VARIABLES                             = 0x9305;
        const Int32 _GL__REFERENCED_BY_VERTEX_SHADER                  = 0x9306;
        const Int32 _GL__REFERENCED_BY_FRAGMENT_SHADER                = 0x930A;
        const Int32 _GL__REFERENCED_BY_COMPUTE_SHADER                 = 0x930B;
        const Int32 _GL__TOP_LEVEL_ARRAY_SIZE                         = 0x930C;
        const Int32 _GL__TOP_LEVEL_ARRAY_STRIDE                       = 0x930D;
        const Int32 _GL__LOCATION                                     = 0x930E;
        const Int32 _GL__FRAMEBUFFER_DEFAULT_WIDTH                    = 0x9310;
        const Int32 _GL__FRAMEBUFFER_DEFAULT_HEIGHT                   = 0x9311;
        const Int32 _GL__FRAMEBUFFER_DEFAULT_SAMPLES                  = 0x9313;
        const Int32 _GL__FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS   = 0x9314;
        const Int32 _GL__MAX_FRAMEBUFFER_WIDTH                        = 0x9315;
        const Int32 _GL__MAX_FRAMEBUFFER_HEIGHT                       = 0x9316;
        const Int32 _GL__MAX_FRAMEBUFFER_SAMPLES                      = 0x9318;


        // C function void glDispatchCompute ( GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z )

        GlDispatchCompute(
            [in] Int32 num_groups_x,
            [in] Int32 num_groups_y,
            [in] Int32 num_groups_z
        );

        // C function void glDispatchComputeIndirect ( GLintptr indirect );

        GlDispatchComputeIndirect(
            [in] Int64 indirect);

        // C function void glDrawArraysIndirect ( GLenum mode, const void *indirect );

        GlDrawArraysIndirect(
            [in] Int32 mode,
            [in] Int64 indirect);

        // C function glDrawElementsIndirect ( GLenum mode, GLenum type, const void *indirect );

        GlDrawElementsIndirect(
            [in] Int32 mode,
            [in] Int32 type,
            [in] Int64 indirect);

        // C function void glFramebufferParameteri ( GLenum target, GLenum pname, GLint param )

        GlFramebufferParameteri(
            [in] Int32 target,
            [in] Int32 pname,
            [in] Int32 param
        );

        // C function void glGetFramebufferParameteriv ( GLenum target, GLenum pname, GLint *params )

        GlGetFramebufferParameteriv(
            [in] Int32 target,
            [in] Int32 pname,
            [in] ArrayOf<Int32>* params,
            [in] Int32 offset
        );

        // C function void glGetFramebufferParameteriv ( GLenum target, GLenum pname, GLint *params )

        GlGetFramebufferParameteriv(
            [in] Int32 target,
            [in] Int32 pname,
            [in] IInt32Buffer* params
        );

        // C function void glGetProgramInterfaceiv ( GLuint program, GLenum programInterface, GLenum pname, GLint *params )

        GlGetProgramInterfaceiv(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] Int32 pname,
            [in] ArrayOf<Int32>* params,
            [in] Int32 offset
        );

        // C function void glGetProgramInterfaceiv ( GLuint program, GLenum programInterface, GLenum pname, GLint *params )

        GlGetProgramInterfaceiv(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] Int32 pname,
            [in] IInt32Buffer* params
        );

        // C function GLuint glGetProgramResourceIndex ( GLuint program, GLenum programInterface, const GLchar *name )

        GlGetProgramResourceIndex(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] String name,
            [out] Int32* index
        );

        // C function void glGetProgramResourceName ( GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name )

        GlGetProgramResourceName(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] Int32 index,
            [out] String* result
        );

        // C function void glGetProgramResourceiv ( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params )

        GlGetProgramResourceiv(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] Int32 index,
            [in] Int32 propCount,
            [in] ArrayOf<Int32>* props,
            [in] Int32 propsOffset,
            [in] Int32 bufSize,
            [in] ArrayOf<Int32>* length,
            [in] Int32 lengthOffset,
            [in] ArrayOf<Int32>* params,
            [in] Int32 paramsOffset
        );

        // C function void glGetProgramResourceiv ( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params )

        GlGetProgramResourceiv(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] Int32 index,
            [in] Int32 propCount,
            [in] IInt32Buffer* props,
            [in] Int32 bufSize,
            [in] IInt32Buffer* length,
            [in] IInt32Buffer* params
        );

        // C function GLint glGetProgramResourceLocation ( GLuint program, GLenum programInterface, const GLchar *name )

        GlGetProgramResourceLocation(
            [in] Int32 program,
            [in] Int32 programInterface,
            [in] String name,
            [out] Int32* result
        );

        // C function void glUseProgramStages ( GLuint pipeline, GLbitfield stages, GLuint program )

        GlUseProgramStages(
            [in] Int32 pipeline,
            [in] Int32 stages,
            [in] Int32 program
        );

        // C function void glActiveShaderProgram ( GLuint pipeline, GLuint program )

        GlActiveShaderProgram(
            [in] Int32 pipeline,
            [in] Int32 program
        );

        // C function GLuint glCreateShaderProgramv ( GLenum type, GLsizei count, const GLchar *const *strings )

        GlCreateShaderProgramv(
            [in] Int32 type,
            [in] ArrayOf<String>* strings,
            [out] Int32* result
        );

        // C function void glBindProgramPipeline ( GLuint pipeline )

        GlBindProgramPipeline(
            [in] Int32 pipeline
        );

        // C function void glDeleteProgramPipelines ( GLsizei n, const GLuint *pipelines )

        GlDeleteProgramPipelines(
            [in] Int32 n,
            [in] ArrayOf<Int32>* pipelines,
            [in] Int32 offset
        );

        // C function void glDeleteProgramPipelines ( GLsizei n, const GLuint *pipelines )

        GlDeleteProgramPipelines(
            [in] Int32 n,
            [in] IInt32Buffer* pipelines
        );

        // C function void glGenProgramPipelines ( GLsizei n, GLuint *pipelines )

        GlGenProgramPipelines(
            [in] Int32 n,
            [in] ArrayOf<Int32>* pipelines,
            [in] Int32 offset
        );

        // C function void glGenProgramPipelines ( GLsizei n, GLuint *pipelines )

        GlGenProgramPipelines(
            [in] Int32 n,
            [in] IInt32Buffer* pipelines
        );

        // C function GLboolean glIsProgramPipeline ( GLuint pipeline )

        GlIsProgramPipeline(
            [in] Int32 pipeline,
            [out] Boolean* result
        );

        // C function void glGetProgramPipelineiv ( GLuint pipeline, GLenum pname, GLint *params )

        GlGetProgramPipelineiv(
            [in] Int32 pipeline,
            [in] Int32 pname,
            [in] ArrayOf<Int32>* params,
            [in] Int32 offset
        );

        // C function void glGetProgramPipelineiv ( GLuint pipeline, GLenum pname, GLint *params )

        GlGetProgramPipelineiv(
            [in] Int32 pipeline,
            [in] Int32 pname,
            [in] IInt32Buffer* params
        );

        // C function void glProgramUniform1i ( GLuint program, GLint location, GLint v0 )

        GlProgramUniform1i(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0
        );

        // C function void glProgramUniform2i ( GLuint program, GLint location, GLint v0, GLint v1 )

        GlProgramUniform2i(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1
        );

        // C function void glProgramUniform3i ( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 )

        GlProgramUniform3i(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1,
            [in] Int32 v2
        );

        // C function void glProgramUniform4i ( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 )

        GlProgramUniform4i(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1,
            [in] Int32 v2,
            [in] Int32 v3
        );

        // C function void glProgramUniform1ui ( GLuint program, GLint location, GLuint v0 )

        GlProgramUniform1ui(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0
        );

        // C function void glProgramUniform2ui ( GLuint program, GLint location, GLuint v0, GLuint v1 )

        GlProgramUniform2ui(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1
        );

        // C function void glProgramUniform3ui ( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 )

        GlProgramUniform3ui(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1,
            [in] Int32 v2
        );

        // C function void glProgramUniform4ui ( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 )

        GlProgramUniform4ui(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 v0,
            [in] Int32 v1,
            [in] Int32 v2,
            [in] Int32 v3
        );

        // C function void glProgramUniform1f ( GLuint program, GLint location, GLfloat v0 )

        GlProgramUniform1f(
            [in] Int32 program,
            [in] Int32 location,
            [in] Float v0
        );

        // C function void glProgramUniform2f ( GLuint program, GLint location, GLfloat v0, GLfloat v1 )

        GlProgramUniform2f(
            [in] Int32 program,
            [in] Int32 location,
            [in] Float v0,
            [in] Float v1
        );

        // C function void glProgramUniform3f ( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 )

        GlProgramUniform3f(
            [in] Int32 program,
            [in] Int32 location,
            [in] Float v0,
            [in] Float v1,
            [in] Float v2
        );

        // C function void glProgramUniform4f ( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 )

        GlProgramUniform4f(
            [in] Int32 program,
            [in] Int32 location,
            [in] Float v0,
            [in] Float v1,
            [in] Float v2,
            [in] Float v3
        );

        // C function void glProgramUniform1iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform1iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform1iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform1iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform2iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform2iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform2iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform2iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform3iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform3iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform3iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform3iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform4iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform4iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform4iv ( GLuint program, GLint location, GLsizei count, const GLint *value )

        GlProgramUniform4iv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform1uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform1uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform1uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform1uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform2uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform2uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform2uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform2uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform3uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform3uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform3uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform3uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform4uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform4uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Int32>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform4uiv ( GLuint program, GLint location, GLsizei count, const GLuint *value )

        GlProgramUniform4uiv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IInt32Buffer* value
        );

        // C function void glProgramUniform1fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform1fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform1fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform1fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniform2fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform2fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniform3fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform3fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniform4fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniform4fv ( GLuint program, GLint location, GLsizei count, const GLfloat *value )

        GlProgramUniform4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix2x3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2x3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix2x3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2x3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix3x2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3x2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix3x2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3x2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix2x4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2x4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix2x4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix2x4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix4x2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4x2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix4x2fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4x2fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix3x4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3x4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix3x4fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix3x4fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glProgramUniformMatrix4x3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4x3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] ArrayOf<Float>* value,
            [in] Int32 offset
        );

        // C function void glProgramUniformMatrix4x3fv ( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value )

        GlProgramUniformMatrix4x3fv(
            [in] Int32 program,
            [in] Int32 location,
            [in] Int32 count,
            [in] Boolean transpose,
            [in] IFloatBuffer* value
        );

        // C function void glValidateProgramPipeline ( GLuint pipeline )

        GlValidateProgramPipeline(
            [in] Int32 pipeline
        );

        // C function void glGetProgramPipelineInfoLog( GLuint program, GLsizei maxLength, GLsizei * length, GLchar * infoLog);

        GlGetProgramPipelineInfoLog(
            [in] Int32 program,
            [out] String* result
        );

        // C function void glBindImageTexture ( GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format )

        GlBindImageTexture(
            [in] Int32 unit,
            [in] Int32 texture,
            [in] Int32 level,
            [in] Boolean layered,
            [in] Int32 layer,
            [in] Int32 access,
            [in] Int32 format
        );

        // C function void glGetBooleani_v ( GLenum target, GLuint index, GLboolean *data )

        GlGetBooleani_v(
            [in] Int32 target,
            [in] Int32 index,
            [in] ArrayOf<Boolean>* data,
            [in] Int32 offset
        );

        // C function void glGetBooleani_v ( GLenum target, GLuint index, GLboolean *data )

        GlGetBooleani_v(
            [in] Int32 target,
            [in] Int32 index,
            [in] IInt32Buffer* data
        );

        // C function void glMemoryBarrier ( GLbitfield barriers )

        GlMemoryBarrier(
            [in] Int32 barriers
        );

        // C function void glMemoryBarrierByRegion ( GLbitfield barriers )

        GlMemoryBarrierByRegion(
            [in] Int32 barriers
        );

        // C function void glTexStorage2DMultisample ( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations )

        GlTexStorage2DMultisample(
            [in] Int32 target,
            [in] Int32 samples,
            [in] Int32 internalformat,
            [in] Int32 width,
            [in] Int32 height,
            [in] Boolean fixedsamplelocations
        );

        // C function void glGetMultisamplefv ( GLenum pname, GLuint index, GLfloat *val )

        GlGetMultisamplefv(
            [in] Int32 pname,
            [in] Int32 index,
            [in] ArrayOf<Float>* val,
            [in] Int32 offset
        );

        // C function void glGetMultisamplefv ( GLenum pname, GLuint index, GLfloat *val )

        GlGetMultisamplefv(
            [in] Int32 pname,
            [in] Int32 index,
            [in] IFloatBuffer* val
        );

        // C function void glSampleMaski ( GLuint maskNumber, GLbitfield mask )

        GlSampleMaski(
            [in] Int32 maskNumber,
            [in] Int32 mask
        );

        // C function void glGetTexLevelParameteriv ( GLenum target, GLint level, GLenum pname, GLint *params )

        GlGetTexLevelParameteriv(
            [in] Int32 target,
            [in] Int32 level,
            [in] Int32 pname,
            [in] ArrayOf<Int32>* params,
            [in] Int32 offset
        );

        // C function void glGetTexLevelParameteriv ( GLenum target, GLint level, GLenum pname, GLint *params )

        GlGetTexLevelParameteriv(
            [in] Int32 target,
            [in] Int32 level,
            [in] Int32 pname,
            [in] IInt32Buffer* params
        );

        // C function void glGetTexLevelParameterfv ( GLenum target, GLint level, GLenum pname, GLfloat *params )

        GlGetTexLevelParameterfv(
            [in] Int32 target,
            [in] Int32 level,
            [in] Int32 pname,
            [in] ArrayOf<Float>* params,
            [in] Int32 offset
        );

        // C function void glGetTexLevelParameterfv ( GLenum target, GLint level, GLenum pname, GLfloat *params )

        GlGetTexLevelParameterfv(
            [in] Int32 target,
            [in] Int32 level,
            [in] Int32 pname,
            [in] IFloatBuffer* params
        );

        // C function void glBindVertexBuffer ( GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride )

        GlBindVertexBuffer(
            [in] Int32 bindingindex,
            [in] Int32 buffer,
            [in] Int64 offset,
            [in] Int32 stride
        );

        // C function void glVertexAttribFormat ( GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset )

        GlVertexAttribFormat(
            [in] Int32 attribindex,
            [in] Int32 size,
            [in] Int32 type,
            [in] Boolean normalized,
            [in] Int32 relativeoffset
        );

        // C function void glVertexAttribIFormat ( GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset )

        GlVertexAttribIFormat(
            [in] Int32 attribindex,
            [in] Int32 size,
            [in] Int32 type,
            [in] Int32 relativeoffset
        );

        // C function void glVertexAttribBinding ( GLuint attribindex, GLuint bindingindex )

        GlVertexAttribBinding(
            [in] Int32 attribindex,
            [in] Int32 bindingindex
        );

        // C function void glVertexBindingDivisor ( GLuint bindingindex, GLuint divisor )

        GlVertexBindingDivisor(
            [in] Int32 bindingindex,
            [in] Int32 divisor
        );

    }


    } // namespace Opengl
    } // namespace Droid
    } // namespace Elastos
}
