
module
{
    interface Elastos.Droid.Os.IParcelUuid;
    interface Elastos.Droid.Utility.ISparseArray;

    using interface Elastos.Utility.IList;
    using interface Elastos.Utility.IMap;

    namespace Elastos {
    namespace Droid {
    namespace Bluetooth {
    namespace LE {


    /**
     * Advertise data packet container for Bluetooth LE advertising. This represents the data to be
     * advertised as well as the scan response data for active scans.
     * <p>
     * Use {@link AdvertiseData.Builder} to create an instance of {@link AdvertiseData} to be
     * advertised.
     *
     * @see BluetoothLeAdvertiser
     * @see ScanRecord
     */
    /**
     * @Involve
     * interface IParcelable;
     */
    interface IAdvertiseData {

        /**
         * Returns a list of service UUIDs within the advertisement that are used to identify the
         * Bluetooth GATT services.
         */
        GetServiceUuids(
            [out] IList** uuids);

        /**
         * Returns an array of manufacturer Id and the corresponding manufacturer specific data. The
         * manufacturer id is a non-negative number assigned by Bluetooth SIG.
         */
        GetManufacturerSpecificData(
            [out] ISparseArray** data);

        /**
         * Returns a map of 16-bit UUID and its corresponding service data.
         */
        GetServiceData(
            [out] IMap** data);

        /**
         * Whether the transmission power level will be included in the advertisement packet.
         */
        GetIncludeTxPowerLevel(
            [out] Boolean* result);

        /**
         * Whether the device name will be included in the advertisement packet.
         */
        GetIncludeDeviceName(
            [out] Boolean* result);
    }

    [deprecated]
    interface IAdvertiseDataBuilder {

        /**
         * Add a service UUID to advertise data.
         *
         * @param serviceUuid A service UUID to be advertised.
         * @throws IllegalArgumentException If the {@code serviceUuids} are null.
         */
        AddServiceUuid(
            [in] IParcelUuid* serviceUuid);

        /**
         * Add service data to advertise data.
         *
         * @param serviceDataUuid 16-bit UUID of the service the data is associated with
         * @param serviceData Service data
         * @throws IllegalArgumentException If the {@code serviceDataUuid} or {@code serviceData} is
         *             empty.
         */
        AddServiceData(
            [in] IParcelUuid* serviceDataUuid,
            [in] ArrayOf<Byte>* serviceData);

        /**
         * Add manufacturer specific data.
         * <p>
         * Please refer to the Bluetooth Assigned Numbers document provided by the <a
         * href="https://www.bluetooth.org">Bluetooth SIG</a> for a list of existing company
         * identifiers.
         *
         * @param manufacturerId Manufacturer ID assigned by Bluetooth SIG.
         * @param manufacturerSpecificData Manufacturer specific data
         * @throws IllegalArgumentException If the {@code manufacturerId} is negative or
         *             {@code manufacturerSpecificData} is null.
         */
        AddManufacturerData(
            [in] Int32 manufacturerId,
            [in] ArrayOf<Byte>* manufacturerSpecificData);

        /**
         * Whether the transmission power level should be included in the advertise packet. Tx power
         * level field takes 3 bytes in advertise packet.
         */
        SetIncludeTxPowerLevel(
            [in] Boolean includeTxPowerLevel);

        /**
         * Set whether the device name should be included in advertise packet.
         */
        SetIncludeDeviceName(
            [in] Boolean includeDeviceName);

        /**
         * Build the {@link AdvertiseData}.
         */
        Build(
            [out] IAdvertiseData** data);
    }


    } // LE
    } // Bluetooth
    } // Droid
    } // Elastos
}