
module
{
    using interface Elastos.Core.ICharSequence;
    using interface Elastos.Utility.IHashMap;

    interface Elastos.Droid.Utility.IArrayMap;
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.App.IFragmentManagerImpl;
    interface Elastos.Droid.App.IBackStackRecord;

    namespace Elastos {
    namespace Droid {
    namespace App {

    [local]
    interface IBackStackState {
        Instantiate(
            [in] IFragmentManagerImpl* fm,
            [out] IBackStackRecord** record);
    }

    [local]
    interface IBackStackRecordTransitionState {

        GetNameOverrides(
            [out] IArrayMap** map);

        SetNameOverrides(
            [in] IArrayMap* map);

        GetEnteringEpicenterView(
            [out] IView** result);

        SetEnteringEpicenterView(
            [in] IView* result);

        GetNonExistentView(
            [out] IView** result);

        SetNonExistentView(
            [in] IView* result);
    }

    /**
     * @Involve
     * interface IFragmentTransaction
     * interface IFragmentManagerBackStackEntry
     * interface IRunnable
     */
    [local, deprecated]
    interface IBackStackRecord {

        GetId(
            [out] Int32* id);

        GetBreadCrumbTitleRes(
            [out] Int32* titleRes);

        GetBreadCrumbShortTitleRes(
            [out] Int32* shortTitleRes);

        GetBreadCrumbTitle(
            [out] ICharSequence** title);

        GetBreadCrumbShortTitle(
            [out] ICharSequence** shortTitle);

        PopFromBackStack(
            [in] Boolean doStateMove,
            [in] IBackStackRecordTransitionState* state,
            [in] IHashMap* firstOutFragments,
            [in] IHashMap* lastInFragments,
            [out] IBackStackRecordTransitionState** result);

        GetName(
            [out] String* name);

        GetTransition(
            [out] Int32* trans);

        GetTransitionStyle(
            [out] Int32* transStyle);
    }

    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
