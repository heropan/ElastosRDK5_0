//This file is autogenerated for
//    ContentViewRenderView.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_CONTENTVIEWRENDERVIEW_CALLBACK_DEC_HH
#define ELASTOS_CONTENTVIEWRENDERVIEW_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern Int64 Elastos_ContentViewRenderView_nativeInit(IInterface* caller,Int64 rootWindowNativePointer);
    extern void Elastos_ContentViewRenderView_nativeDestroy(IInterface* caller,Handle32 nativeContentViewRenderView);
    extern void Elastos_ContentViewRenderView_nativeSetCurrentContentViewCore(IInterface* caller,Handle32 nativeContentViewRenderView,Int64 nativeContentViewCore);
    extern void Elastos_ContentViewRenderView_nativeSetLayerTreeBuildHelper(IInterface* caller,Handle32 nativeContentViewRenderView,Int64 buildHelperNativePtr);
    extern void Elastos_ContentViewRenderView_nativeSurfaceCreated(IInterface* caller,Handle32 nativeContentViewRenderView);
    extern void Elastos_ContentViewRenderView_nativeSurfaceDestroyed(IInterface* caller,Handle32 nativeContentViewRenderView);
    extern void Elastos_ContentViewRenderView_nativeSurfaceChanged(IInterface* caller,Handle32 nativeContentViewRenderView,Int32 format,Int32 width,Int32 height,IInterface* surface);
    extern void Elastos_ContentViewRenderView_nativeSetOverlayVideoMode(IInterface* caller,Handle32 nativeContentViewRenderView,Boolean enabled);
    extern void Elastos_ContentViewRenderView_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Content {
namespace Browser {

struct ElaContentViewRenderViewCallback
{
    void (*elastos_ContentViewRenderView_onCompositorLayout)(IInterface* obj);
    void (*elastos_ContentViewRenderView_onSwapBuffersCompleted)(IInterface* obj);
};

void* ContentViewRenderView::ElaContentViewRenderViewCallback_Init()
{
    static ElaContentViewRenderViewCallback sElaContentViewRenderViewCallback;

    sElaContentViewRenderViewCallback.elastos_ContentViewRenderView_onCompositorLayout = &ContentViewRenderView::OnCompositorLayout;
    sElaContentViewRenderViewCallback.elastos_ContentViewRenderView_onSwapBuffersCompleted = &ContentViewRenderView::OnSwapBuffersCompleted;

    Elastos_ContentViewRenderView_InitCallback((Handle32)&sElaContentViewRenderViewCallback);
    return &sElaContentViewRenderViewCallback;
}

static void* sPElaContentViewRenderViewCallback = ContentViewRenderView::ElaContentViewRenderViewCallback_Init();

} // namespace Browser
} // namespace Content
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_CONTENTVIEWRENDERVIEW_CALLBACK_DEC_HH
