//This file is autogenerated for
//    TraceEvent.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_TRACEEVENT_CALLBACK_DEC_HH
#define ELASTOS_TRACEEVENT_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_TraceEvent_nativeRegisterEnabledObserver();
    extern void Elastos_TraceEvent_nativeStartATrace();
    extern void Elastos_TraceEvent_nativeStopATrace();
    extern void Elastos_TraceEvent_nativeInstant(const String& name,const String& arg);
    extern void Elastos_TraceEvent_nativeBegin(const String& name,const String& arg);
    extern void Elastos_TraceEvent_nativeEnd(const String& name,const String& arg);
    extern void Elastos_TraceEvent_nativeBeginToplevel();
    extern void Elastos_TraceEvent_nativeEndToplevel();
    extern void Elastos_TraceEvent_nativeStartAsync(const String& name,Int64 id,const String& arg);
    extern void Elastos_TraceEvent_nativeFinishAsync(const String& name,Int64 id,const String& arg);
    extern void Elastos_TraceEvent_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Base {

struct ElaTraceEventCallback
{
    void (*elastos_TraceEvent_setEnabled)(Boolean enabled);
};

void* TraceEvent::ElaTraceEventCallback_Init()
{
    static ElaTraceEventCallback sElaTraceEventCallback;

    sElaTraceEventCallback.elastos_TraceEvent_setEnabled = &TraceEvent::SetEnabled;

    Elastos_TraceEvent_InitCallback((Handle32)&sElaTraceEventCallback);
    return &sElaTraceEventCallback;
}

static void* sPElaTraceEventCallback = TraceEvent::ElaTraceEventCallback_Init();

} // namespace Base
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_TRACEEVENT_CALLBACK_DEC_HH
