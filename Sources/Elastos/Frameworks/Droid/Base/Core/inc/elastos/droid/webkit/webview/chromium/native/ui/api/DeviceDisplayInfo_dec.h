//This file is autogenerated for
//    DeviceDisplayInfo.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_DEVICEDISPLAYINFO_CALLBACK_DEC_HH
#define ELASTOS_DEVICEDISPLAYINFO_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_DeviceDisplayInfo_nativeUpdateSharedDeviceDisplayInfo(IInterface* caller,Int32 displayHeight,Int32 displayWidth,Int32 physicalDisplayHeight,Int32 physicalDisplayWidth,Int32 bitsPerPixel,Int32 bitsPerComponent,Double dipScale,Int32 smallestDIPWidth,Int32 rotationDegrees);
    extern void Elastos_DeviceDisplayInfo_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Ui {
namespace Gfx {

struct ElaDeviceDisplayInfoCallback
{
    Int32 (*elastos_DeviceDisplayInfo_getDisplayHeight)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getDisplayWidth)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getPhysicalDisplayHeight)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getPhysicalDisplayWidth)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getBitsPerPixel)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getBitsPerComponent)(IInterface* obj);
    Double (*elastos_DeviceDisplayInfo_getDIPScale)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getSmallestDIPWidth)(IInterface* obj);
    Int32 (*elastos_DeviceDisplayInfo_getRotationDegrees)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_DeviceDisplayInfo_create)(IInterface* context);
};

void* DeviceDisplayInfo::ElaDeviceDisplayInfoCallback_Init()
{
    static ElaDeviceDisplayInfoCallback sElaDeviceDisplayInfoCallback;

    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getDisplayHeight = &DeviceDisplayInfo::GetDisplayHeight;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getDisplayWidth = &DeviceDisplayInfo::GetDisplayWidth;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getPhysicalDisplayHeight = &DeviceDisplayInfo::GetPhysicalDisplayHeight;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getPhysicalDisplayWidth = &DeviceDisplayInfo::GetPhysicalDisplayWidth;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getBitsPerPixel = &DeviceDisplayInfo::GetBitsPerPixel;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getBitsPerComponent = &DeviceDisplayInfo::GetBitsPerComponent;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getDIPScale = &DeviceDisplayInfo::GetDIPScale;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getSmallestDIPWidth = &DeviceDisplayInfo::GetSmallestDIPWidth;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_getRotationDegrees = &DeviceDisplayInfo::GetRotationDegrees;
    sElaDeviceDisplayInfoCallback.elastos_DeviceDisplayInfo_create = &DeviceDisplayInfo::Create;

    Elastos_DeviceDisplayInfo_InitCallback((Handle32)&sElaDeviceDisplayInfoCallback);
    return &sElaDeviceDisplayInfoCallback;
}

static void* sPElaDeviceDisplayInfoCallback = DeviceDisplayInfo::ElaDeviceDisplayInfoCallback_Init();

} // namespace Gfx
} // namespace Ui
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_DEVICEDISPLAYINFO_CALLBACK_DEC_HH
