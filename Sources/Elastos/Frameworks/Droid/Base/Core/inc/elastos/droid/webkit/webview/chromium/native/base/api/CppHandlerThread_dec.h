//This file is autogenerated for
//    JavaHandlerThread.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_JAVAHANDLERTHREAD_CALLBACK_DEC_HH
#define ELASTOS_JAVAHANDLERTHREAD_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_JavaHandlerThread_nativeInitializeThread(IInterface* caller,Handle32 nativeJavaHandlerThread,Int64 nativeEvent);
    extern void Elastos_JavaHandlerThread_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Base {

struct ElaJavaHandlerThreadCallback
{
    AutoPtr<IInterface> (*elastos_JavaHandlerThread_create)(const String& name);
    void (*elastos_JavaHandlerThread_start)(IInterface* obj, Int64 nativeThread, Int64 nativeEvent);
};

void* CppHandlerThread::ElaCppHandlerThreadCallback_Init()
{
    static ElaJavaHandlerThreadCallback sElaJavaHandlerThreadCallback;

    sElaJavaHandlerThreadCallback.elastos_JavaHandlerThread_create = &CppHandlerThread::Create;
    sElaJavaHandlerThreadCallback.elastos_JavaHandlerThread_start = &CppHandlerThread::Start;

    Elastos_JavaHandlerThread_InitCallback((Handle32)&sElaJavaHandlerThreadCallback);
    return &sElaJavaHandlerThreadCallback;
}

static void* sPElaCppHandlerThreadCallback = CppHandlerThread::ElaCppHandlerThreadCallback_Init();

} // namespace Base
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_JAVAHANDLERTHREAD_CALLBACK_DEC_HH
