//This file is autogenerated for
//    AudioManagerAndroid.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_AUDIOMANAGERANDROID_CALLBACK_DEC_HH
#define ELASTOS_AUDIOMANAGERANDROID_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_AudioManagerAndroid_nativeSetMute(IInterface* caller,Handle32 nativeAudioManagerAndroid,Boolean muted);
    extern void Elastos_AudioManagerAndroid_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Media {

struct ElaAudioManagerAndroidCallback
{
    Elastos::String (*elastos_AudioDeviceName_id)(IInterface* obj);
    Elastos::String (*elastos_AudioDeviceName_name)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_AudioManagerAndroid_createAudioManagerAndroid)(IInterface* context, Int64 nativeAudioManagerAndroid);
    void (*elastos_AudioManagerAndroid_init)(IInterface* obj);
    void (*elastos_AudioManagerAndroid_close)(IInterface* obj);
    void (*elastos_AudioManagerAndroid_setCommunicationAudioModeOn)(IInterface* obj, Boolean on);
    Boolean (*elastos_AudioManagerAndroid_setDevice)(IInterface* obj, const Elastos::String& deviceId);
    AutoPtr<ArrayOf<IInterface*> > (*elastos_AudioManagerAndroid_getAudioInputDeviceNames)(IInterface* obj);
    Int32 (*elastos_AudioManagerAndroid_getNativeOutputSampleRate)(IInterface* obj);
    Int32 (*elastos_AudioManagerAndroid_getMinInputFrameSize)(Int32 sampleRate, Int32 channels);
    Int32 (*elastos_AudioManagerAndroid_getMinOutputFrameSize)(Int32 sampleRate, Int32 channels);
    Boolean (*elastos_AudioManagerAndroid_isAudioLowLatencySupported)(IInterface* obj);
    Int32 (*elastos_AudioManagerAndroid_getAudioLowLatencyOutputFrameSize)(IInterface* obj);
    Boolean (*elastos_AudioManagerAndroid_shouldUseAcousticEchoCanceler)();
};

void* AudioManagerAndroid::ElaAudioManagerAndroidCallback_Init()
{
    static ElaAudioManagerAndroidCallback sElaAudioManagerAndroidCallback;
    sElaAudioManagerAndroidCallback.elastos_AudioDeviceName_id = &AudioManagerAndroid::AudioDeviceName::Id;
    sElaAudioManagerAndroidCallback.elastos_AudioDeviceName_name = &AudioManagerAndroid::AudioDeviceName::Name;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_createAudioManagerAndroid = &AudioManagerAndroid::CreateAudioManagerAndroid;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_init = &AudioManagerAndroid::Init;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_close = &AudioManagerAndroid::Close;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_setCommunicationAudioModeOn = &AudioManagerAndroid::SetCommunicationAudioModeOn;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_setDevice = &AudioManagerAndroid::SetDevice;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_getAudioInputDeviceNames = &AudioManagerAndroid::GetAudioInputDeviceNames;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_getNativeOutputSampleRate = &AudioManagerAndroid::GetNativeOutputSampleRate;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_getMinInputFrameSize = &AudioManagerAndroid::GetMinInputFrameSize;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_getMinOutputFrameSize = &AudioManagerAndroid::GetMinOutputFrameSize;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_isAudioLowLatencySupported = &AudioManagerAndroid::IsAudioLowLatencySupported;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_getAudioLowLatencyOutputFrameSize = &AudioManagerAndroid::GetAudioLowLatencyOutputFrameSize;
    sElaAudioManagerAndroidCallback.elastos_AudioManagerAndroid_shouldUseAcousticEchoCanceler = &AudioManagerAndroid::ShouldUseAcousticEchoCanceler;

    Elastos_AudioManagerAndroid_InitCallback((Handle32)&sElaAudioManagerAndroidCallback);
    return &sElaAudioManagerAndroidCallback;
}

static void* sPElaAudioManagerAndroidCallback = AudioManagerAndroid::ElaAudioManagerAndroidCallback_Init();

} // namespace Media
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_AUDIOMANAGERANDROID_CALLBACK_DEC_HH
