//This file is autogenerated for
//    ExternalVideoSurfaceContainer.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH
#define ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_ExternalVideoSurfaceContainer_nativeSurfaceCreated(IInterface* caller,Handle32 nativeExternalVideoSurfaceContainerImpl,Int32 playerId,IInterface* surface);
    extern void Elastos_ExternalVideoSurfaceContainer_nativeSurfaceDestroyed(IInterface* caller,Handle32 nativeExternalVideoSurfaceContainerImpl,Int32 playerId);
    extern void Elastos_ExternalVideoSurfaceContainer_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace AndroidWebview {

struct ElaExternalVideoSurfaceContainerCallback
{
    AutoPtr<IInterface> (*elastos_ExternalVideoSurfaceContainer_create)(Int64 nativeExternalVideoSurfaceContainer, IInterface* contentViewCore);
    void (*elastos_ExternalVideoSurfaceContainer_requestExternalVideoSurface)(IInterface* obj, Int32 playerId);
    void (*elastos_ExternalVideoSurfaceContainer_releaseExternalVideoSurface)(IInterface* obj, Int32 playerId);
    void (*elastos_ExternalVideoSurfaceContainer_destroy)(IInterface* obj);
    void (*elastos_ExternalVideoSurfaceContainer_onExternalVideoSurfacePositionChanged)(IInterface* obj, Int32 playerId, Float left, Float top, Float right, Float bottom);
    void (*elastos_ExternalVideoSurfaceContainer_onFrameInfoUpdated)(IInterface* obj);
};

void* ExternalVideoSurfaceContainer::ElaExternalVideoSurfaceContainerCallback_Init()
{
    static ElaExternalVideoSurfaceContainerCallback sElaExternalVideoSurfaceContainerCallback;

    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_create = &ExternalVideoSurfaceContainer::Create;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_requestExternalVideoSurface = &ExternalVideoSurfaceContainer::RequestExternalVideoSurface;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_releaseExternalVideoSurface = &ExternalVideoSurfaceContainer::ReleaseExternalVideoSurface;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_destroy = &ExternalVideoSurfaceContainer::Destroy;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_onExternalVideoSurfacePositionChanged = &ExternalVideoSurfaceContainer::OnExternalVideoSurfacePositionChanged;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_onFrameInfoUpdated = &ExternalVideoSurfaceContainer::OnFrameInfoUpdated;

    Elastos_ExternalVideoSurfaceContainer_InitCallback((Handle32)&sElaExternalVideoSurfaceContainerCallback);
    return &sElaExternalVideoSurfaceContainerCallback;
}

static void* sPElaExternalVideoSurfaceContainerCallback = ExternalVideoSurfaceContainer::ElaExternalVideoSurfaceContainerCallback_Init();

} // namespace AndroidWebview
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH
