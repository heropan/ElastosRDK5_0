/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

#ifndef __ELASTOS_DROID_Elastos_Droid_Manifest_H__
#define __ELASTOS_DROID_Elastos_Droid_Manifest_H__

#include "elastos/droid/ext/frameworkext.h"

namespace Elastos {
namespace Droid {

class Manifest {
      public:

            class Permission {
            public:
                  /**  Allows an application to access all multi-user external storage @hide
                   */
                  static const String ACCESS_ALL_EXTERNAL_STORAGE;//="android.permission.ACCESS_ALL_EXTERNAL_STORAGE";
                  /**  Allow an application to read and write the cache partition.
                   @hide
                   */
                  static const String ACCESS_CACHE_FILESYSTEM;//="android.permission.ACCESS_CACHE_FILESYSTEM";
                  /**  Allows read/write access to the "properties" table in the checkin
                   database, to change values that get uploaded.
                   */
                  static const String ACCESS_CHECKIN_PROPERTIES;//="android.permission.ACCESS_CHECKIN_PROPERTIES";
                  /**  Allows an app to access approximate location derived from network location
                   sources such as cell towers and Wi-Fi.
                   */
                  static const String ACCESS_COARSE_LOCATION;//="android.permission.ACCESS_COARSE_LOCATION";
                  /**  Allows the holder to access content providers from outside an ApplicationThread.
                   This permission is enforced by the ActivityManagerService on the corresponding APIs,
                   in particular ActivityManagerService#getContentProviderExternal(String) and
                   ActivityManagerService#removeContentProviderExternal(String).
                   @hide

                   */
                  static const String ACCESS_CONTENT_PROVIDERS_EXTERNALLY;//="android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY";
                  /**  Allows an app to access precise location from location sources such
                   as GPS, cell towers, and Wi-Fi.
                   */
                  static const String ACCESS_FINE_LOCATION;//="android.permission.ACCESS_FINE_LOCATION";
                  /**  Allows an application to access extra location provider commands
                   */
                  static const String ACCESS_LOCATION_EXTRA_COMMANDS;//="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS";
                  /**  Allows an application to create mock location providers for testing
                   */
                  static const String ACCESS_MOCK_LOCATION;//="android.permission.ACCESS_MOCK_LOCATION";
                  /**  Allows an application to access the MTP USB kernel driver.
                   For use only by the device side MTP implementation.
                   @hide
                   */
                  static const String ACCESS_MTP;//="android.permission.ACCESS_MTP";
                  /**  Allows applications to access information about networks
                   */
                  static const String ACCESS_NETWORK_STATE;//="android.permission.ACCESS_NETWORK_STATE";
                  /**  Allows an application to use SurfaceFlinger's low level features
                   */
                  static const String ACCESS_SURFACE_FLINGER;//="android.permission.ACCESS_SURFACE_FLINGER";
                  /**  Allows applications to access information about Wi-Fi networks
                   */
                  static const String ACCESS_WIFI_STATE;//="android.permission.ACCESS_WIFI_STATE";
                  /**  @hide
                   */
                  static const String ACCESS_WIMAX_STATE;//="android.permission.ACCESS_WIMAX_STATE";
                  /**  Allows applications to call into AccountAuthenticators. Only
                   the system can get this permission.
                   */
                  static const String ACCOUNT_MANAGER;//="android.permission.ACCOUNT_MANAGER";
                  /**  Allows an application to add voicemails into the system.
                   */
                  static const String ADD_VOICEMAIL;//="com.android.voicemail.permission.ADD_VOICEMAIL";
                  /**  Allows an application to use any media decoder when decoding for playback
                   @hide
                   */
                  static const String ALLOW_ANY_CODEC_FOR_PLAYBACK;//="android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK";
                  /**  Allows access to ASEC non-destructive API calls
                   @hide
                   */
                  static const String ASEC_ACCESS;//="android.permission.ASEC_ACCESS";
                  /**  Allows creation of ASEC volumes
                   @hide
                   */
                  static const String ASEC_CREATE;//="android.permission.ASEC_CREATE";
                  /**  Allows destruction of ASEC volumes
                   @hide
                   */
                  static const String ASEC_DESTROY;//="android.permission.ASEC_DESTROY";
                  /**  Allows mount / unmount of ASEC volumes
                   @hide
                   */
                  static const String ASEC_MOUNT_UNMOUNT;//="android.permission.ASEC_MOUNT_UNMOUNT";
                  /**  Allows rename of ASEC volumes
                   @hide
                   */
                  static const String ASEC_RENAME;//="android.permission.ASEC_RENAME";
                  /**  Allows an application to act as an AccountAuthenticator for
                   the AccountManager
                   */
                  static const String AUTHENTICATE_ACCOUNTS;//="android.permission.AUTHENTICATE_ACCOUNTS";
                  /**  Allows an application to control the backup and restore process
                   @hide pending API council
                   */
                  static const String BACKUP;//="android.permission.BACKUP";
                  /**  Allows an application to collect battery statistics
                   */
                  static const String BATTERY_STATS;//="android.permission.BATTERY_STATS";
                  /**  Must be required by an {@link android.accessibilityservice.AccessibilityService},
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_ACCESSIBILITY_SERVICE;//="android.permission.BIND_ACCESSIBILITY_SERVICE";
                  /**  Allows an application to tell the AppWidget service which application
                   can access AppWidget's data.  The normal user flow is that a user
                   picks an AppWidget to go into a particular host, thereby giving that
                   host application access to the private data from the AppWidget app.
                   An application that has this permission should honor that contract.
                   Very few applications should need to use this permission.
                   */
                  static const String BIND_APPWIDGET;//="android.permission.BIND_APPWIDGET";
                  /**  Must be required by device administration receiver, to ensure that only the
                   system can interact with it.
                   */
                  static const String BIND_DEVICE_ADMIN;//="android.permission.BIND_DEVICE_ADMIN";
                  /**  Allows an application to execute contacts directory search.
                   This should only be used by ContactsProvider.
           @hide
                   */
                  static const String BIND_DIRECTORY_SEARCH;//="android.permission.BIND_DIRECTORY_SEARCH";
                  /**  Must be required by an {@link android.inputmethodservice.InputMethodService},
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_INPUT_METHOD;//="android.permission.BIND_INPUT_METHOD";
                  /**  Private permission, to restrict who can bring up a dialog to add a new
                   keyguard widget
                   @hide
                   */
                  static const String BIND_KEYGUARD_APPWIDGET;//="android.permission.BIND_KEYGUARD_APPWIDGET";
                  /**  Must be required by package verifier receiver, to ensure that only the
                   system can interact with it.
                   @hide

                   */
                  static const String BIND_PACKAGE_VERIFIER;//="android.permission.BIND_PACKAGE_VERIFIER";
                  /**  Must be required by a {@link android.widget.RemoteViewsService},
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_REMOTEVIEWS;//="android.permission.BIND_REMOTEVIEWS";
                  /**  Must be required by a TextService (e.g. SpellCheckerService)
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_TEXT_SERVICE;//="android.permission.BIND_TEXT_SERVICE";
                  /**  Must be required by an {@link android.net.VpnService},
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_VPN_SERVICE;//="android.permission.BIND_VPN_SERVICE";
                  /**  Must be required by a {@link android.service.wallpaper.WallpaperService},
                   to ensure that only the system can bind to it.
                   */
                  static const String BIND_WALLPAPER;//="android.permission.BIND_WALLPAPER";
                  /**  Allows applications to connect to paired bluetooth devices
                   */
                  static const String BLUETOOTH;//="android.permission.BLUETOOTH";
                  /**  Allows applications to discover and pair bluetooth devices
                   */
                  static const String BLUETOOTH_ADMIN;//="android.permission.BLUETOOTH_ADMIN";
                  /**  Allows bluetooth stack to access files
                   @hide This should only be used by Bluetooth apk.

                   */
                  static const String BLUETOOTH_STACK;//="android.permission.BLUETOOTH_STACK";
                  /**  Required to be able to disable the device (very dangerous!).
                   */
                  static const String BRICK;//="android.permission.BRICK";
                  /**  Allows an application to broadcast a notification that an application
                   package has been removed.
                   */
                  static const String BROADCAST_PACKAGE_REMOVED;//="android.permission.BROADCAST_PACKAGE_REMOVED";
                  /**  Allows an application to broadcast an SMS receipt notification
                   */
                  static const String BROADCAST_SMS;//="android.permission.BROADCAST_SMS";
                  /**  Allows an application to broadcast sticky intents.  These are
                   broadcasts whose data is held by the system after being finished,
                   so that clients can quickly retrieve that data without having
                   to wait for the next broadcast.
                   */
                  static const String BROADCAST_STICKY;//="android.permission.BROADCAST_STICKY";
                  /**  Allows an application to broadcast a WAP PUSH receipt notification
                   */
                  static const String BROADCAST_WAP_PUSH;//="android.permission.BROADCAST_WAP_PUSH";
                  /**  C2DM permission.
                   @hide Used internally.

                   */
                  static const String C2D_MESSAGE;//="android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE";
                  /**  Allows an application to initiate a phone call without going through
                   the Dialer user interface for the user to confirm the call
                   being placed.
                   */
                  static const String CALL_PHONE;//="android.permission.CALL_PHONE";
                  /**  Allows an application to call any phone number, including emergency
                   numbers, without going through the Dialer user interface for the user
                   to confirm the call being placed.
                   */
                  static const String CALL_PRIVILEGED;//="android.permission.CALL_PRIVILEGED";
                  /**  Required to be able to access the camera device.
                   <p>This will automatically enforce the <a
                   href="{@docRoot}guide/topics/manifest/uses-feature-element.html">{@code
                   &lt;uses-feature&gt;}</a> manifest element for <em>all</em> camera features.
                   If you do not require all camera features or can properly operate if a camera
                   is not available, then you must modify your manifest as appropriate in order to
                   install on devices that don't support all camera features.</p>
                   */
                  static const String CAMERA;//="android.permission.CAMERA";
                  /**  Allows applications to change the background data setting
                   @hide pending API council
                   */
                  static const String CHANGE_BACKGROUND_DATA_SETTING;//="android.permission.CHANGE_BACKGROUND_DATA_SETTING";
                  /**  Allows an application to change whether an application component (other than its own) is
                   enabled or not.
                   */
                  static const String CHANGE_COMPONENT_ENABLED_STATE;//="android.permission.CHANGE_COMPONENT_ENABLED_STATE";
                  /**  Allows an application to modify the current configuration, such
                   as locale.
           Allows an application to modify the current configuration, such
                   as locale.
                   */
                  static const String CHANGE_CONFIGURATION;//="android.permission.CHANGE_CONFIGURATION";
                  /**  Allows applications to change network connectivity state
                   */
                  static const String CHANGE_NETWORK_STATE;//="android.permission.CHANGE_NETWORK_STATE";
                  /**  Allows applications to enter Wi-Fi Multicast mode
                   */
                  static const String CHANGE_WIFI_MULTICAST_STATE;//="android.permission.CHANGE_WIFI_MULTICAST_STATE";
                  /**  Allows applications to change Wi-Fi connectivity state
                   */
                  static const String CHANGE_WIFI_STATE;//="android.permission.CHANGE_WIFI_STATE";
                  /**  @hide
                   */
                  static const String CHANGE_WIMAX_STATE;//="android.permission.CHANGE_WIMAX_STATE";
                  /**  Allows an application to clear the caches of all installed
                   applications on the device.
                   */
                  static const String CLEAR_APP_CACHE;//="android.permission.CLEAR_APP_CACHE";
                  /**  Allows an application to clear user data
                   */
                  static const String CLEAR_APP_USER_DATA;//="android.permission.CLEAR_APP_USER_DATA";
                  /**  Allows an application to configure and connect to Wifi displays
                   @hide
                   */
                  static const String CONFIGURE_WIFI_DISPLAY;//="android.permission.CONFIGURE_WIFI_DISPLAY";
                  /**  Allows a package to launch the secure full-backup confirmation UI.
                   ONLY the system process may hold this permission.
                   @hide
                   */
                  static const String CONFIRM_FULL_BACKUP;//="android.permission.CONFIRM_FULL_BACKUP";
                  /**  Allows an internal user to use privileged ConnectivityManager APIs.
                  @hide
                   */
                  static const String CONNECTIVITY_INTERNAL;//="android.permission.CONNECTIVITY_INTERNAL";
                  /**  Allows enabling/disabling location update notifications from
                   the radio. Not for use by normal applications.
                   */
                  static const String CONTROL_LOCATION_UPDATES;//="android.permission.CONTROL_LOCATION_UPDATES";
                  /**  Allows an application to control low-level features of Wifi displays
                   such as opening an RTSP socket.  This permission should only be used
                   by the display manager.
                   @hide
                   */
                  static const String CONTROL_WIFI_DISPLAY;//="android.permission.CONTROL_WIFI_DISPLAY";
                  /**  Must be required by default container service so that only
                   the system can bind to it and use it to copy
                   protected data to secure containers or files
                   accessible to the system.
                   @hide
                   */
                  static const String COPY_PROTECTED_DATA;//="android.permission.COPY_PROTECTED_DATA";
                  /**  Internal permission protecting access to the encryption methods
                  @hide

                   */
                  static const String CRYPT_KEEPER;//="android.permission.CRYPT_KEEPER";
                  /**  Allows an application to delete cache files.
                   */
                  static const String DELETE_CACHE_FILES;//="android.permission.DELETE_CACHE_FILES";
                  /**  Allows an application to delete packages.
                   */
                  static const String DELETE_PACKAGES;//="android.permission.DELETE_PACKAGES";
                  /**  Allows low-level access to power management
                   */
                  static const String DEVICE_POWER;//="android.permission.DEVICE_POWER";
                  /**  Allows applications to RW to diagnostic resources.
                   */
                  static const String DIAGNOSTIC;//="android.permission.DIAGNOSTIC";
                  /**  Allows applications to disable the keyguard
                   */
                  static const String DISABLE_KEYGUARD;//="android.permission.DISABLE_KEYGUARD";
                  /**  Allows an application to retrieve state dump information from system
                   services.
                   */
                  static const String DUMP;//="android.permission.DUMP";
                  /**  Allows an application to expand or collapse the status bar.
                   */
                  static const String EXPAND_STATUS_BAR;//="android.permission.EXPAND_STATUS_BAR";
                  /**  Run as a manufacturer test application, running as the root user.
                   Only available when the device is running in manufacturer test mode.
                   */
                  static const String FACTORY_TEST;//="android.permission.FACTORY_TEST";
                  /**  @hide Allows an application to register an input filter which filters the stream
                   of user events (keys, touch, trackball) before they are dispatched to any window.
                   */
                  static const String FILTER_EVENTS;//="android.permission.FILTER_EVENTS";
                  /**  Allows access to the flashlight
                   */
                  static const String FLASHLIGHT;//="android.permission.FLASHLIGHT";
                  /**  Allows an application to force a BACK operation on whatever is the
                   top activity.
                   */
                  static const String FORCE_BACK;//="android.permission.FORCE_BACK";
                  /**  Allows an application to call
                  {@link android.app.ActivityManager#forceStopPackage}.
                  @hide
                   */
                  static const String FORCE_STOP_PACKAGES;//="android.permission.FORCE_STOP_PACKAGES";
                  /**  @hide Allows the application to temporarily freeze the screen for a
                   full-screen transition.
                   */
                  static const String FREEZE_SCREEN;//="android.permission.FREEZE_SCREEN";
                  /**  Allows access to the list of accounts in the Accounts Service
                   */
                  static const String GET_ACCOUNTS;//="android.permission.GET_ACCOUNTS";
                  /**  Allows an application to get full detailed information about
                   recently running tasks, with full fidelity to the real state.
                   @hide
                   */
                  static const String GET_DETAILED_TASKS;//="android.permission.GET_DETAILED_TASKS";
                  /**  Allows an application to find out the space used by any package.
                   */
                  static const String GET_PACKAGE_SIZE;//="android.permission.GET_PACKAGE_SIZE";
                  /**  Allows an application to get information about the currently
                   or recently running tasks.
                   */
                  static const String GET_TASKS;//="android.permission.GET_TASKS";
                  /**  This permission can be used on content providers to allow the global
                   search system to access their data.  Typically it used when the
                   provider has some permissions protecting it (which global search
                   would not be expected to hold), and added as a read-only permission
                   to the path in the provider where global search queries are
                   performed.  This permission can not be held by regular applications;
                   it is used by applications to protect themselves from everyone else
                   besides global search.
                   */
                  static const String GLOBAL_SEARCH;//="android.permission.GLOBAL_SEARCH";
                  /**  Internal permission protecting access to the global search
                   system: ensures that only the system can access the provider
                   to perform queries (since this otherwise provides unrestricted
                   access to a variety of content providers), and to write the
                   search statistics (to keep applications from gaming the source
                   ranking).
                   @hide
                   */
                  static const String GLOBAL_SEARCH_CONTROL;//="android.permission.GLOBAL_SEARCH_CONTROL";
                  /**  @hide Allows an application to grant or revoke specific permissions.
                   */
                  static const String GRANT_REVOKE_PERMISSIONS;//="android.permission.GRANT_REVOKE_PERMISSIONS";
                  /**  Allows access to hardware peripherals.  Intended only for hardware testing
                   */
                  static const String HARDWARE_TEST;//="android.permission.HARDWARE_TEST";
                  /**  Allows an application to inject user events (keys, touch, trackball)
                   into the event stream and deliver them to ANY window.  Without this
                   permission, you can only deliver events to windows in your own process.
                   Very few applications should need to use this permission.
                   */
                  static const String INJECT_EVENTS;//="android.permission.INJECT_EVENTS";
                  /**  Allows an application to install a location provider into the Location Manager
                   */
                  static const String INSTALL_LOCATION_PROVIDER;//="android.permission.INSTALL_LOCATION_PROVIDER";
                  /**  Allows an application to install packages.
                   */
                  static const String INSTALL_PACKAGES;//="android.permission.INSTALL_PACKAGES";
                  /**  @hide Allows an application to call APIs that allow it to do interactions
                   across the users on the device, using singleton services and
                   user-targeted broadcasts.  This permission is not available to
                   third party applications.
                   */
                  static const String INTERACT_ACROSS_USERS;//="android.permission.INTERACT_ACROSS_USERS";
                  /**  @hide Fuller form of {@link android.Manifest.permission#INTERACT_ACROSS_USERS}
                   that removes restrictions on where broadcasts can be sent and allows other
                   types of interactions.
                   */
                  static const String INTERACT_ACROSS_USERS_FULL;//="android.permission.INTERACT_ACROSS_USERS_FULL";
                  /**  Allows an application to open windows that are for use by parts
                   of the system user interface.  Not for use by third party apps.
                   */
                  static const String INTERNAL_SYSTEM_WINDOW;//="android.permission.INTERNAL_SYSTEM_WINDOW";
                  /**  Allows applications to open network sockets.
                   */
                  static const String INTERNET;//="android.permission.INTERNET";
                  /**  Allows an application to call
                  {@link android.app.ActivityManager#killBackgroundProcesses}.
                   */
                  static const String KILL_BACKGROUND_PROCESSES;//="android.permission.KILL_BACKGROUND_PROCESSES";
                  /**  @hide Allows an application to magnify the content of a display.
                   */
                  static const String MAGNIFY_DISPLAY;//="android.permission.MAGNIFY_DISPLAY";
                  /**  Allows an application to manage the list of accounts in the AccountManager
                   */
                  static const String MANAGE_ACCOUNTS;//="android.permission.MANAGE_ACCOUNTS";
                  /**  Allows an application to manage (create, destroy,
                   Z-order) application tokens in the window manager.  This is only
                   for use by the system.
                   */
                  static const String MANAGE_APP_TOKENS;//="android.permission.MANAGE_APP_TOKENS";
                  /**  Allows an application to manage network policies (such as warning and disable
                   limits) and to define application-specific rules. @hide
                   */
                  static const String MANAGE_NETWORK_POLICY;//="android.permission.MANAGE_NETWORK_POLICY";
                  /**  Allows an application to manage preferences and permissions for USB devices
                   @hide
                   */
                  static const String MANAGE_USB;//="android.permission.MANAGE_USB";
                  /**  @hide Allows an application to call APIs that allow it to query and manage
                   users on the device. This permission is not available to
                   third party applications.
                   */
                  static const String MANAGE_USERS;//="android.permission.MANAGE_USERS";
                  static const String MASTER_CLEAR;//="android.permission.MASTER_CLEAR";
                  /**  Internal permission allowing an application to query/set which
                   applications can bind AppWidgets.
                   @hide
                   */
                  static const String MODIFY_APPWIDGET_BIND_PERMISSIONS;//="android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS";
                  /**  Allows an application to modify global audio settings
                   */
                  static const String MODIFY_AUDIO_SETTINGS;//="android.permission.MODIFY_AUDIO_SETTINGS";
                  /**  Allows an application to account its network traffic against other UIDs. Used
                   by system services like download manager and media server. Not for use by
                   third party apps. @hide
                   */
                  static const String MODIFY_NETWORK_ACCOUNTING;//="android.permission.MODIFY_NETWORK_ACCOUNTING";
                  /**  Allows modification of the telephony state - power on, mmi, etc.
                   Does not include placing calls.
                   */
                  static const String MODIFY_PHONE_STATE;//="android.permission.MODIFY_PHONE_STATE";
                  /**  Allows formatting file systems for removable storage.
                   */
                  static const String MOUNT_FORMAT_FILESYSTEMS;//="android.permission.MOUNT_FORMAT_FILESYSTEMS";
                  /**  Allows mounting and unmounting file systems for removable storage.
                   */
                  static const String MOUNT_UNMOUNT_FILESYSTEMS;//="android.permission.MOUNT_UNMOUNT_FILESYSTEMS";
                  /**  Allows an application to move location of installed package.
                   @hide
                   */
                  static const String MOVE_PACKAGE;//="android.permission.MOVE_PACKAGE";
                  /**  Allows access to configure network interfaces, configure/use IPSec, etc.
                   @hide
                   */
                  static const String NET_ADMIN;//="android.permission.NET_ADMIN";
                  /**  @hide Allows low-level access to tun tap driver
                   */
                  static const String NET_TUNNELING;//="android.permission.NET_TUNNELING";
                  /**  Allows applications to perform I/O operations over NFC
                   */
                  static const String NFC;//="android.permission.NFC";
                  /**  Allows an application to collect component usage
                   statistics @hide
                   */
                  static const String PACKAGE_USAGE_STATS;//="android.permission.PACKAGE_USAGE_STATS";
                  /**  @hide Package verifier needs to have this permission before the PackageManager will
                   trust it to verify packages.

                   */
                  static const String PACKAGE_VERIFICATION_AGENT;//="android.permission.PACKAGE_VERIFICATION_AGENT";
                  /**  Allows an application to perform CDMA OTA provisioning @hide
                   */
                  static const String PERFORM_CDMA_PROVISIONING;//="android.permission.PERFORM_CDMA_PROVISIONING";
                  /**  @deprecated This functionality will be removed in the future; please do
                   not use. Allow an application to make its activities persistent.
                   */
                  static const String PERSISTENT_ACTIVITY;//="android.permission.PERSISTENT_ACTIVITY";
                  /**  Allows an application to monitor, modify, or abort outgoing
                   calls.
                   */
                  static const String PROCESS_OUTGOING_CALLS;//="android.permission.PROCESS_OUTGOING_CALLS";
                  /**  Allows an application to read the user's calendar data.
                   */
                  static const String READ_CALENDAR;//="android.permission.READ_CALENDAR";
                  /**  Allows an application to read the user's call log.
                   <p class="note"><strong>Note:</strong> If your app uses the
                   {@link #READ_CONTACTS} permission and <em>both</em> your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
                   minSdkVersion}</a> and <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> values are set to 15 or lower, the system implicitly
                   grants your app this permission. If you don't need this permission, be sure your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> is 16 or higher.</p>
                   */
                  static const String READ_CALL_LOG;//="android.permission.READ_CALL_LOG";
                  /**  Allows an application to read previously received cell broadcast
                   messages and to register a content observer to get notifications when
                   a cell broadcast has been received and added to the database. For
                   emergency alerts, the database is updated immediately after the
                   alert dialog and notification sound/vibration/speech are presented.
                   The "read" column is then updated after the user dismisses the alert.
                   This enables supplementary emergency assistance apps to start loading
                   additional emergency information (if Internet access is available)
                   when the alert is first received, and to delay presenting the info
                   to the user until after the initial alert dialog is dismissed.
                   @hide Pending API council approval
                   */
                  static const String READ_CELL_BROADCASTS;//="android.permission.READ_CELL_BROADCASTS";
                  /**  Allows an application to read the user's contacts data.
                   */
                  static const String READ_CONTACTS;//="android.permission.READ_CONTACTS";
                  /**  Allows applications to read dream settings and dream state.
                   @hide
                   */
                  static const String READ_DREAM_STATE;//="android.permission.READ_DREAM_STATE";
                  /**  Allows an application to read from external storage.
                   <p>Any app that declares the {@link #WRITE_EXTERNAL_STORAGE} permission is implicitly
                   granted this permission.</p>
                   <p>Currently, this permission is not enforced and all apps still have access to read from
                   external storage without this permission. That will change in a future release and apps
                   will require this permission to read from external storage. So if your
                   app reads from the external storage, you should add this permission to your app now
                   to ensure that it continues to work on future versions of Android.</p>
                   <p>You can test your app with the permission enforced by either running your app on the
                   Android Emulator when running Android 4.1 or higher, or enabling <em>Protect USB
                   storage</em> under Developer options in the Settings app on a device running Android 4.1 or
                   higher.</p>
                   <p class="note"><strong>Note:</strong> If <em>both</em> your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
                   minSdkVersion}</a> and <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
                   grants your app this permission. If you don't need this permission, be sure your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> is 4 or higher.
                   */
                  static const String READ_EXTERNAL_STORAGE;//="android.permission.READ_EXTERNAL_STORAGE";
                  /**  Allows an application to take screen shots and more generally
                   get access to the frame buffer data
                   */
                  static const String READ_FRAME_BUFFER;//="android.permission.READ_FRAME_BUFFER";
                  /**  Allows an application to read (but not write) the user's
                  browsing history and bookmarks.
                   */
                  static const String READ_HISTORY_BOOKMARKS;//="com.android.browser.permission.READ_HISTORY_BOOKMARKS";
                  /**  Allows an application to retrieve the current state of keys and
                   switches.  This is only for use by the system.
                   */
                  static const String READ_INPUT_STATE;//="android.permission.READ_INPUT_STATE";
                  /**  Allows an application to read the low-level system log files.
                   Log entries can contain the user's private information,
                   which is why this permission is not available to normal apps.
                   */
                  static const String READ_LOGS;//="android.permission.READ_LOGS";
                  /**  Allows an application to read historical network usage for
                   specific networks and applications. @hide
                   */
                  static const String READ_NETWORK_USAGE_HISTORY;//="android.permission.READ_NETWORK_USAGE_HISTORY";
                  /**  Allows read only access to phone state.
                   <p class="note"><strong>Note:</strong> If <em>both</em> your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
                   minSdkVersion}</a> and <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
                   grants your app this permission. If you don't need this permission, be sure your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> is 4 or higher.
                   */
                  static const String READ_PHONE_STATE;//="android.permission.READ_PHONE_STATE";
                  /**  Allows read access to privileged phone state.
                   @hide Used internally.
                   */
                  static const String READ_PRIVILEGED_PHONE_STATE;//="android.permission.READ_PRIVILEGED_PHONE_STATE";
                  /**  Allows an application to read the user's personal profile data.
                   */
                  static const String READ_PROFILE;//="android.permission.READ_PROFILE";
                  /**  Allows an application to read SMS messages.
                   */
                  static const String READ_SMS;//="android.permission.READ_SMS";
                  /**  Allows an application to read from the user's social stream.
                   */
                  static const String READ_SOCIAL_STREAM;//="android.permission.READ_SOCIAL_STREAM";
                  /**  Allows applications to read the sync settings
                   */
                  static const String READ_SYNC_SETTINGS;//="android.permission.READ_SYNC_SETTINGS";
                  /**  Allows applications to read the sync stats
                   */
                  static const String READ_SYNC_STATS;//="android.permission.READ_SYNC_STATS";
                  /**  Allows an application to read the user dictionary. This should
                   really only be required by an IME, or a dictionary editor like
                   the Settings app.
                   */
                  static const String READ_USER_DICTIONARY;//="android.permission.READ_USER_DICTIONARY";
                  /**  Required to be able to reboot the device.
                   */
                  static const String REBOOT;//="android.permission.REBOOT";
                  /**  Allows an application to receive the
                   {@link android.content.Intent#ACTION_BOOT_COMPLETED} that is
                   broadcast after the system finishes booting.  If you don't
                   request this permission, you will not receive the broadcast at
                   that time.  Though holding this permission does not have any
                   security implications, it can have a negative impact on the
                   user experience by increasing the amount of time it takes the
                   system to start and allowing applications to have themselves
                   running without the user being aware of them.  As such, you must
                   explicitly declare your use of this facility to make that visible
                   to the user.
                   */
                  static const String RECEIVE_BOOT_COMPLETED;//="android.permission.RECEIVE_BOOT_COMPLETED";
                  /**  @hide
                   */
                  static const String RECEIVE_DATA_ACTIVITY_CHANGE;//="android.permission.RECEIVE_DATA_ACTIVITY_CHANGE";
                  /**  Allows an application to receive emergency cell broadcast messages,
                   to record or display them to the user. Reserved for system apps.
                   @hide Pending API council approval
                   */
                  static const String RECEIVE_EMERGENCY_BROADCAST;//="android.permission.RECEIVE_EMERGENCY_BROADCAST";
                  /**  Allows an application to monitor incoming MMS messages, to record
                   or perform processing on them.
                   */
                  static const String RECEIVE_MMS;//="android.permission.RECEIVE_MMS";
                  /**  Allows an application to monitor incoming SMS messages, to record
                   or perform processing on them.
                   */
                  static const String RECEIVE_SMS;//="android.permission.RECEIVE_SMS";
                  /**  Allows an application to monitor incoming WAP push messages.
                   */
                  static const String RECEIVE_WAP_PUSH;//="android.permission.RECEIVE_WAP_PUSH";
                  /**  Allows an application to record audio
                   */
                  static const String RECORD_AUDIO;//="android.permission.RECORD_AUDIO";
                  /**  Allows registration for remote audio playback. @hide
                   */
                  static const String REMOTE_AUDIO_PLAYBACK;//="android.permission.REMOTE_AUDIO_PLAYBACK";
                  /**  @hide Allows an application to change to remove/kill tasks
                   */
                  static const String REMOVE_TASKS;//="android.permission.REMOVE_TASKS";
                  /**  Allows an application to change the Z-order of tasks
                   */
                  static const String REORDER_TASKS;//="android.permission.REORDER_TASKS";
                  /**  @deprecated The {@link android.app.ActivityManager#restartPackage}
                  API is no longer supported.
                   */
                  static const String RESTART_PACKAGES;//="android.permission.RESTART_PACKAGES";
                  /**  @hide Allows an application to retrieve the content of the active window
                   An active window is the window that has fired an accessibility event.
                   */
                  static const String RETRIEVE_WINDOW_CONTENT;//="android.permission.RETRIEVE_WINDOW_CONTENT";
                  /**  @hide Allows an application to retrieve info for a window from the window manager.
                   */
                  static const String RETRIEVE_WINDOW_INFO;//="android.permission.RETRIEVE_WINDOW_INFO";
                  /**  Allows an application to send SMS messages.
                   */
                  static const String SEND_SMS;//="android.permission.SEND_SMS";
                  /**  Allows an application to send SMS messages via the Messaging app with no user
                   input or confirmation.
                   @hide
                   */
                  static const String SEND_SMS_NO_CONFIRMATION;//="android.permission.SEND_SMS_NO_CONFIRMATION";
                  /**  Allows applications to access serial ports via the SerialManager.
                   @hide
                   */
                  static const String SERIAL_PORT;//="android.permission.SERIAL_PORT";
                  /**  Allows an application to watch and control how activities are
                   started globally in the system.  Only for is in debugging
                   (usually the monkey command).
                   */
                  static const String SET_ACTIVITY_WATCHER;//="android.permission.SET_ACTIVITY_WATCHER";
                  /**  Allows an application to broadcast an Intent to set an alarm for the
                   user.
                   */
                  static const String SET_ALARM;//="com.android.alarm.permission.SET_ALARM";
                  /**  Allows an application to control whether activities are immediately
                   finished when put in the background.
                   */
                  static const String SET_ALWAYS_FINISH;//="android.permission.SET_ALWAYS_FINISH";
                  /**  Modify the global animation scaling factor.
                   */
                  static const String SET_ANIMATION_SCALE;//="android.permission.SET_ANIMATION_SCALE";
                  /**  Configure an application for debugging.
                   */
                  static const String SET_DEBUG_APP;//="android.permission.SET_DEBUG_APP";
                  /**  Allows low-level access to setting the keyboard layout.
                   Not for use by normal applications.
                   @hide
                   */
                  static const String SET_KEYBOARD_LAYOUT;//="android.permission.SET_KEYBOARD_LAYOUT";
                  /**  Allows low-level access to setting the orientation (actually
                   rotation) of the screen.  Not for use by normal applications.
                   */
                  static const String SET_ORIENTATION;//="android.permission.SET_ORIENTATION";
                  /**  Allows low-level access to setting the pointer speed.
                   Not for use by normal applications.
                   */
                  static const String SET_POINTER_SPEED;//="android.permission.SET_POINTER_SPEED";
                  /**  @deprecated No longer useful, see
                   {@link android.content.pm.PackageManager#addPackageToPreferred}
                   for details.
                   */
                  static const String SET_PREFERRED_APPLICATIONS;//="android.permission.SET_PREFERRED_APPLICATIONS";
                  /**  Allows an application to set the maximum number of (not needed)
                   application processes that can be running.
                   */
                  static const String SET_PROCESS_LIMIT;//="android.permission.SET_PROCESS_LIMIT";
                  /**  @hide Change the screen compatibility mode of applications
           @hide Change the screen compatibility mode of applications
                   */
                  static const String SET_SCREEN_COMPATIBILITY;//="android.permission.SET_SCREEN_COMPATIBILITY";
                  /**  Allows applications to set the system time
                   */
                  static const String SET_TIME;//="android.permission.SET_TIME";
                  /**  Allows applications to set the system time zone
                   */
                  static const String SET_TIME_ZONE;//="android.permission.SET_TIME_ZONE";
                  /**  Allows applications to set the wallpaper
                   */
                  static const String SET_WALLPAPER;//="android.permission.SET_WALLPAPER";
                  /**  Allows applications to set a live wallpaper.
                   @hide XXX Change to signature once the picker is moved to its
                   own apk as Ghod Intended.
                   */
                  static const String SET_WALLPAPER_COMPONENT;//="android.permission.SET_WALLPAPER_COMPONENT";
                  /**  Allows applications to set the wallpaper hints
                   */
                  static const String SET_WALLPAPER_HINTS;//="android.permission.SET_WALLPAPER_HINTS";
                  /**  Allows an application to call the activity manager shutdown() API
                   to put the higher-level system there into a shutdown state.
                   @hide
                   */
                  static const String SHUTDOWN;//="android.permission.SHUTDOWN";
                  /**  Allow an application to request that a signal be sent to all persistent processes
                   */
                  static const String SIGNAL_PERSISTENT_PROCESSES;//="android.permission.SIGNAL_PERSISTENT_PROCESSES";
                  /**  Allows an application to start any activity, regardless of permission
                   protection or exported state. @hide
                   */
                  static const String START_ANY_ACTIVITY;//="android.permission.START_ANY_ACTIVITY";
                  /**  Allows an application to open, close, or disable the status bar
                   and its icons.
                   */
                  static const String STATUS_BAR;//="android.permission.STATUS_BAR";
                  /**  Allows an application to be the status bar.  Currently used only by SystemUI.apk
              @hide
                   */
                  static const String STATUS_BAR_SERVICE;//="android.permission.STATUS_BAR_SERVICE";
                  /**  Allows an application to tell the activity manager to temporarily
                   stop application switches, putting it into a special mode that
                   prevents applications from immediately switching away from some
                   critical UI such as the home screen.
                   @hide
                   */
                  static const String STOP_APP_SWITCHES;//="android.permission.STOP_APP_SWITCHES";
                  /**  Allows an application to allow access the subscribed feeds
                   ContentProvider.
                   */
                  static const String SUBSCRIBED_FEEDS_READ;//="android.permission.SUBSCRIBED_FEEDS_READ";
                  static const String SUBSCRIBED_FEEDS_WRITE;//="android.permission.SUBSCRIBED_FEEDS_WRITE";
                  /**  Allows an application to open windows using the type
                   {@link android.view.WindowManager.LayoutParams#TYPE_SYSTEM_ALERT},
                   shown on top of all other applications.  Very few applications
                   should use this permission; these windows are intended for
                   system-level interaction with the user.
                   */
                  static const String SYSTEM_ALERT_WINDOW;//="android.permission.SYSTEM_ALERT_WINDOW";
                  /**  @hide Allows an application to temporary enable accessibility on the device.
                   */
                  static const String TEMPORARY_ENABLE_ACCESSIBILITY;//="android.permission.TEMPORARY_ENABLE_ACCESSIBILITY";
                  /**  Allows an application to update device statistics. Not for
                   use by third party apps.
                   */
                  static const String UPDATE_DEVICE_STATS;//="android.permission.UPDATE_DEVICE_STATS";
                  /**  Allows an application to hold an UpdateLock, recommending that a headless
                   OTA reboot *not* occur while the lock is held.
                   @hide
                   */
                  static const String UPDATE_LOCK;//="android.permission.UPDATE_LOCK";
                  /**  Allows an application to request authtokens from the AccountManager
                   */
                  static const String USE_CREDENTIALS;//="android.permission.USE_CREDENTIALS";
                  /**  Allows an application to use SIP service
                   */
                  static const String USE_SIP;//="android.permission.USE_SIP";
                  /**  Allows access to the vibrator
                   */
                  static const String VIBRATE;//="android.permission.VIBRATE";
                  /**  Allows using PowerManager WakeLocks to keep processor from sleeping or screen
                   from dimming
                   */
                  static const String WAKE_LOCK;//="android.permission.WAKE_LOCK";
                  /**  Allows applications to write the apn settings
                   */
                  static const String WRITE_APN_SETTINGS;//="android.permission.WRITE_APN_SETTINGS";
                  /**  Allows an application to write (but not read) the user's
                   calendar data.
                   */
                  static const String WRITE_CALENDAR;//="android.permission.WRITE_CALENDAR";
                  /**  Allows an application to write (but not read) the user's
                   contacts data.
                   <p class="note"><strong>Note:</strong> If your app uses the
                   {@link #WRITE_CONTACTS} permission and <em>both</em> your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
                   minSdkVersion}</a> and <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> values are set to 15 or lower, the system implicitly
                   grants your app this permission. If you don't need this permission, be sure your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> is 16 or higher.</p>
                   */
                  static const String WRITE_CALL_LOG;//="android.permission.WRITE_CALL_LOG";
                  /**  Allows an application to write (but not read) the user's
                   contacts data.
                   */
                  static const String WRITE_CONTACTS;//="android.permission.WRITE_CONTACTS";
                  /**  Allows applications to write dream settings, and start or stop dreaming.
                   @hide
                   */
                  static const String WRITE_DREAM_STATE;//="android.permission.WRITE_DREAM_STATE";
                  /**  Allows an application to write to external storage.
                   <p class="note"><strong>Note:</strong> If <em>both</em> your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
                   minSdkVersion}</a> and <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
                   grants your app this permission. If you don't need this permission, be sure your <a
                   href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
                   targetSdkVersion}</a> is 4 or higher.
                   */
                  static const String WRITE_EXTERNAL_STORAGE;//="android.permission.WRITE_EXTERNAL_STORAGE";
                  /**  Allows an application to modify the Google service map.
                   */
                  static const String WRITE_GSERVICES;//="android.permission.WRITE_GSERVICES";
                  /**  Allows an application to write (but not read) the user's
                  browsing history and bookmarks.
                   */
                  static const String WRITE_HISTORY_BOOKMARKS;//="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS";
                  /**  Allows an application to write to internal media storage
                   @hide
                   */
                  static const String WRITE_MEDIA_STORAGE;//="android.permission.WRITE_MEDIA_STORAGE";
                  /**  Allows an application to write (but not read) the user's
                   personal profile data.
                   */
                  static const String WRITE_PROFILE;//="android.permission.WRITE_PROFILE";
                  /**  Allows an application to read or write the secure system settings.
                   */
                  static const String WRITE_SECURE_SETTINGS;//="android.permission.WRITE_SECURE_SETTINGS";
                  /**  Allows an application to read or write the system settings.
                   */
                  static const String WRITE_SETTINGS;//="android.permission.WRITE_SETTINGS";
                  /**  Allows an application to write SMS messages.
                   */
                  static const String WRITE_SMS;//="android.permission.WRITE_SMS";
                  /**  Allows an application to write (but not read) the user's
                   social stream data.
                   */
                  static const String WRITE_SOCIAL_STREAM;//="android.permission.WRITE_SOCIAL_STREAM";
                  /**  Allows applications to write the sync settings
                   */
                  static const String WRITE_SYNC_SETTINGS;//="android.permission.WRITE_SYNC_SETTINGS";
                  /**  Allows an application to write to the user dictionary.
                   */
                  static const String WRITE_USER_DICTIONARY;//="android.permission.WRITE_USER_DICTIONARY";
            };

            class Permission_Group {
            public:
                  /**  Permissions for direct access to the accounts managed
                   by the Account Manager.
                   */
                  static const String ACCOUNTS;//="android.permission-group.ACCOUNTS";
                  /**  Used for permissions that provide direct access to the hardware on
                   the device that has an effect on battery life.  This includes vibrator,
                   flashlight,  etc.
                   */
                  static const String AFFECTS_BATTERY;//="android.permission-group.AFFECTS_BATTERY";
                  /**  Group of permissions that are related to the other applications
                   installed on the system.  Examples include such as listing
                   running apps, or killing background processes.
                   */
                  static const String APP_INFO;//="android.permission-group.APP_INFO";
                  /**  ====================================================
                  Permissions related to changing audio settings
                  ====================================================
                  Used for permissions that provide direct access to speaker settings
                   the device.
                   */
                  static const String AUDIO_SETTINGS;//="android.permission-group.AUDIO_SETTINGS";
                  /**  Used for permissions that provide access to other devices through Bluetooth.
                   */
                  static const String BLUETOOTH_NETWORK;//="android.permission-group.BLUETOOTH_NETWORK";
                  /**  Used for permissions that provide access to the user
                   bookmarks and browser history.
                   */
                  static const String BOOKMARKS;//="android.permission-group.BOOKMARKS";
                  /**  Used for permissions that provide access to the device
                   calendar to create / view events.
                   */
                  static const String CALENDAR;//="android.permission-group.CALENDAR";
                  /**  Used for permissions that are associated with accessing
                   camera or capturing images/video from the device.
                   */
                  static const String CAMERA;//="android.permission-group.CAMERA";
                  /**  Used for permissions that can be used to make the user spend money
                   without their direct involvement.
                   */
                  static const String COST_MONEY;//="android.permission-group.COST_MONEY";
                  /**  Group of permissions that are related to development features.  These
                   are not permissions that should appear in normal applications; they
                   protect APIs that are intended only to be used for development
                   purposes.
                   */
                  static const String DEVELOPMENT_TOOLS;//="android.permission-group.DEVELOPMENT_TOOLS";
                  /**  Used for permissions that provide access to the user voicemail box.
                   */
                  static const String DEVICE_ALARMS;//="android.permission-group.DEVICE_ALARMS";
                  /**  Group of permissions that allow manipulation of how
                   another application displays UI to the user.
                   */
                  static const String DISPLAY;//="android.permission-group.DISPLAY";
                  /**  Used for permissions that provide direct access to the hardware on
                   the device.  This includes audio, the camera, vibrator, etc.
                   */
                  static const String HARDWARE_CONTROLS;//="android.permission-group.HARDWARE_CONTROLS";
                  /**  Used for permissions that allow access to the user's current
                   location.
                   */
                  static const String LOCATION;//="android.permission-group.LOCATION";
                  /**  Used for permissions that allow an application to send messages
                   on behalf of the user or intercept messages being received by the
                   user.  This is primarily intended for SMS/MMS messaging, such as
                   receiving or reading an MMS.
                   */
                  static const String MESSAGES;//="android.permission-group.MESSAGES";
                  /**  Used for permissions that are associated with accessing
                   microphone audio from the device. Note that phone calls also capture audio
                   but are in a separate (more visible) permission group.
                   */
                  static const String MICROPHONE;//="android.permission-group.MICROPHONE";
                  /**  Used for permissions that provide access to networking services.  The
                   main permission here is internet access, but this is also an
                   appropriate group for accessing or modifying any network configuration
                   or other related network operations.
                   */
                  static const String NETWORK;//="android.permission-group.NETWORK";
                  /**  Used for permissions that provide access to information about the device
                   user such as profile information.  This includes both reading and
                   writing of this data (which should generally be expressed as two
                   distinct permissions).
                   */
                  static const String PERSONAL_INFO;//="android.permission-group.PERSONAL_INFO";
                  /**  Used for permissions that are associated with accessing and modifyign
                   telephony state: placing calls, intercepting outgoing calls, reading
                   and modifying the phone state.
                   */
                  static const String PHONE_CALLS;//="android.permission-group.PHONE_CALLS";
                  /**  Group of permissions that are related to the screenlock.
                   */
                  static const String SCREENLOCK;//="android.permission-group.SCREENLOCK";
                  /**  Used for permissions that provide access to the user's social connections,
                   such as contacts, call logs, social stream, etc.  This includes
                   both reading and writing of this data (which should generally be
                   expressed as two distinct permissions).
                   */
                  static const String SOCIAL_INFO;//="android.permission-group.SOCIAL_INFO";
                  /**  ====================================================
                  Permissions related to changing status bar
                  ====================================================
                  Used for permissions that change the status bar
                   */
                  static const String STATUS_BAR;//="android.permission-group.STATUS_BAR";
                  /**  Group of permissions that are related to SD card access.
                   */
                  static const String STORAGE;//="android.permission-group.STORAGE";
                  /**  ====================================================
                  Permissions related to accessing sync settings
                  ====================================================
                  Used for permissions that access the sync settings or sync
                   related information.
                   */
                  static const String SYNC_SETTINGS;//="android.permission-group.SYNC_SETTINGS";
                  /**  Group of permissions that are related to system clock.
                   */
                  static const String SYSTEM_CLOCK;//="android.permission-group.SYSTEM_CLOCK";
                  /**  Group of permissions that are related to system APIs.  Many
                   of these are not permissions the user will be expected to understand,
                   and such permissions should generally be marked as "normal" protection
                   level so they don't get displayed.  This can also, however, be used
                   for miscellaneous features that provide access to the operating system,
                   such as writing the global system settings.
                   */
                  static const String SYSTEM_TOOLS;//="android.permission-group.SYSTEM_TOOLS";
                  /**  Used for permissions that provide access to the user
                   calendar to create / view events.
                   */
                  static const String USER_DICTIONARY;//="android.permission-group.USER_DICTIONARY";
                  /**  Used for permissions that provide access to the user voicemail box.
                   */
                  static const String VOICEMAIL;//="android.permission-group.VOICEMAIL";
                  /**  Group of permissions that allow manipulation of how
                   another application displays UI to the user.
                   */
                  static const String WALLPAPER;//="android.permission-group.WALLPAPER";
                  /**  Used for permissions that provide access to the user
                   calendar to create / view events.
                   */
                  static const String WRITE_USER_DICTIONARY;//="android.permission-group.WRITE_USER_DICTIONARY";
            };
};
};
};
#endif // __ELASTOS_DROID_Elastos_Droid_Manifest_H__
