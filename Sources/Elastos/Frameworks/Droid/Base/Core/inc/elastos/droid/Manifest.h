/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

#ifndef __Elastos_Droid_Manifest_H__
#define __Elastos_Droid_Manifest_H__

#include <elastos.h>

using namespace Elastos;

namespace Elastos {
namespace Droid {
class ECO_PUBLIC Manifest {
    public: class permission {
        /**  Allows an application to access all multi-user external storage @hide
         */
        public: static const String ACCESS_ALL_EXTERNAL_STORAGE;
        /**  @SystemApi Allow an application to read and write the cache partition.
         @hide
         */
        public: static const String ACCESS_CACHE_FILESYSTEM;
        /**  @SystemApi Allows read/write access to the "properties" table in the checkin
         database, to change values that get uploaded.
         <p>Not for use by third-party applications.
         */
        public: static const String ACCESS_CHECKIN_PROPERTIES;
        /**  Allows an app to access approximate location derived from network location
         sources such as cell towers and Wi-Fi.
         */
        public: static const String ACCESS_COARSE_LOCATION;
        /**  Allows the holder to access content providers from outside an ApplicationThread.
         This permission is enforced by the ActivityManagerService on the corresponding APIs,
         in particular ActivityManagerService#getContentProviderExternal(String) and
         ActivityManagerService#removeContentProviderExternal(String).
         @hide

         */
        public: static const String ACCESS_CONTENT_PROVIDERS_EXTERNALLY;
        /**  @SystemApi Allows an application to provision and access DRM certificates
         @hide This is not a third-party API (intended for system apps).
         */
        public: static const String ACCESS_DRM_CERTIFICATES;
        /**  Allows an app to access precise location from location sources such
         as GPS, cell towers, and Wi-Fi.
         */
        public: static const String ACCESS_FINE_LOCATION;
        /**  Allows an application to use InputFlinger's low level features.
         @hide
         */
        public: static const String ACCESS_INPUT_FLINGER;
        /**  Allows access to keyguard secure storage.  Only allowed for system processes.
        @hide
         */
        public: static const String ACCESS_KEYGUARD_SECURE_STORAGE;
        /**  Allows an application to access extra location provider commands
         */
        public: static const String ACCESS_LOCATION_EXTRA_COMMANDS;
        /**  Allows an application to create mock location providers for testing
         */
        public: static const String ACCESS_MOCK_LOCATION;
        /**  @SystemApi Allows an application to access the MTP USB kernel driver.
         For use only by the device side MTP implementation.
         @hide
         */
        public: static const String ACCESS_MTP;
        /**  @SystemApi Allows an application to listen for network condition observations.
         @hide This is not a third-party API (intended for system apps).
         */
        public: static const String ACCESS_NETWORK_CONDITIONS;
        /**  Allows applications to access information about networks
         */
        public: static const String ACCESS_NETWORK_STATE;
        /**  @SystemApi Allows an application to read the current set of notifications, including
         any metadata and intents attached.
         @hide
         */
        public: static const String ACCESS_NOTIFICATIONS;
        /**  Allows an application to use SurfaceFlinger's low level features.
    <p>Not for use by third-party applications.
         */
        public: static const String ACCESS_SURFACE_FLINGER;
        /**  Allows applications to access information about Wi-Fi networks
         */
        public: static const String ACCESS_WIFI_STATE;
        /**  @hide
         */
        public: static const String ACCESS_WIMAX_STATE;
        /**  @SystemApi Allows applications to call into AccountAuthenticators.
    <p>Not for use by third-party applications.
         */
        public: static const String ACCOUNT_MANAGER;
        /**  Allows an application to add voicemails into the system.
         */
        public: static const String ADD_VOICEMAIL;
        /**  @SystemApi Allows an application to use any media decoder when decoding for playback
         @hide
         */
        public: static const String ALLOW_ANY_CODEC_FOR_PLAYBACK;
        /**  Allows access to ASEC non-destructive API calls
         @hide
         */
        public: static const String ASEC_ACCESS;
        /**  Allows creation of ASEC volumes
         @hide
         */
        public: static const String ASEC_CREATE;
        /**  Allows destruction of ASEC volumes
         @hide
         */
        public: static const String ASEC_DESTROY;
        /**  Allows mount / unmount of ASEC volumes
         @hide
         */
        public: static const String ASEC_MOUNT_UNMOUNT;
        /**  Allows rename of ASEC volumes
         @hide
         */
        public: static const String ASEC_RENAME;
        /**  Allows an application to act as an AccountAuthenticator for
         the AccountManager
         */
        public: static const String AUTHENTICATE_ACCOUNTS;
        /**  @SystemApi Allows an application to control the backup and restore process.
    <p>Not for use by third-party applications.
         @hide pending API council
         */
        public: static const String BACKUP;
        /**  @SystemApi Allows an application to collect battery statistics
         */
        public: static const String BATTERY_STATS;
        /**  Must be required by an {@link android.accessibilityservice.AccessibilityService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_ACCESSIBILITY_SERVICE;
        /**  @SystemApi Allows an application to tell the AppWidget service which application
         can access AppWidget's data.  The normal user flow is that a user
         picks an AppWidget to go into a particular host, thereby giving that
         host application access to the private data from the AppWidget app.
         An application that has this permission should honor that contract.
         <p>Not for use by third-party applications.
         */
        public: static const String BIND_APPWIDGET;
        /**  @SystemApi Must be required by a {@link
         android.service.notification.ConditionProviderService},
         to ensure that only the system can bind to it.
         @hide
         */
        public: static const String BIND_CONDITION_PROVIDER_SERVICE;
        /**  @SystemApi Allows an application to bind to ConnectionService implementations.
         @hide
         */
        public: static const String BIND_CONNECTION_SERVICE;
        /**  Must be required by device administration receiver, to ensure that only the
         system can interact with it.
         */
        public: static const String BIND_DEVICE_ADMIN;
        /**  @SystemApi @hide Allows an application to execute contacts directory search.
         This should only be used by ContactsProvider.
         <p>Not for use by third-party applications.
         */
        public: static const String BIND_DIRECTORY_SEARCH;
        /**  Must be required by an {@link android.service.dreams.DreamService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_DREAM_SERVICE;
        /**  @SystemApi Allows an application to bind to InCallService implementations.
         @hide
         */
        public: static const String BIND_INCALL_SERVICE;
        /**  Must be required by an {@link android.inputmethodservice.InputMethodService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_INPUT_METHOD;
        /**  Allows the system to bind to an application's task services
         @hide
         */
        public: static const String BIND_JOB_SERVICE;
        /**  @SystemApi Private permission, to restrict who can bring up a dialog to add a new
         keyguard widget
         @hide
         */
        public: static const String BIND_KEYGUARD_APPWIDGET;
        /**  Must be required by a {@link android.nfc.cardemulation.HostApduService}
         or {@link android.nfc.cardemulation.OffHostApduService} to ensure that only
         the system can bind to it.
         */
        public: static const String BIND_NFC_SERVICE;
        /**  Must be required by an {@link
         android.service.notification.NotificationListenerService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_NOTIFICATION_LISTENER_SERVICE;
        /**  Must be required by package verifier receiver, to ensure that only the
         system can interact with it.
         @hide

         */
        public: static const String BIND_PACKAGE_VERIFIER;
        /**  Must be required by a {@link android.printservice.PrintService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_PRINT_SERVICE;
        /**  Must be required by the PrintSpooler to ensure that only the system can bind to it.
         @hide
         */
        public: static const String BIND_PRINT_SPOOLER_SERVICE;
        /**  @SystemApi Must be required by a {@link android.widget.RemoteViewsService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_REMOTEVIEWS;
        /**  Must be required by a {@link com.android.media.remotedisplay.RemoteDisplayProvider},
         to ensure that only the system can bind to it.
         @hide
         */
        public: static const String BIND_REMOTE_DISPLAY;
        /**  Must be required by a TextService (e.g. SpellCheckerService)
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_TEXT_SERVICE;
        /**  @SystemApi Must be required by an {@link
        android.service.trust.TrustAgentService},
        to ensure that only the system can bind to it.
        @hide
         */
        public: static const String BIND_TRUST_AGENT;
        /**  Must be required by a {@link android.media.tv.TvInputService}
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_TV_INPUT;
        /**  Must be required by a {@link android.service.voice.VoiceInteractionService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_VOICE_INTERACTION;
        /**  Must be required by a {@link android.net.VpnService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_VPN_SERVICE;
        /**  Must be required by a {@link android.service.wallpaper.WallpaperService},
         to ensure that only the system can bind to it.
         */
        public: static const String BIND_WALLPAPER;
        /**  Allows applications to connect to paired bluetooth devices
         */
        public: static const String BLUETOOTH;
        /**  Allows applications to discover and pair bluetooth devices
         */
        public: static const String BLUETOOTH_ADMIN;
        /**  Control access to email providers exclusively for Bluetooth
         @hide

         */
        public: static const String BLUETOOTH_MAP;
        /**  @SystemApi Allows applications to pair bluetooth devices without user interaction, and to
         allow or disallow phonebook access or message access.
         This is not available to third party applications.
         */
        public: static const String BLUETOOTH_PRIVILEGED;
        /**  Allows bluetooth stack to access files
         @hide This should only be used by Bluetooth apk.

         */
        public: static const String BLUETOOTH_STACK;
        /**  Allows an application to access data from sensors that the user uses to
         measure what is happening inside his/her body, such as heart rate.
         */
        public: static const String BODY_SENSORS;
        /**  Required to be able to disable the device (very dangerous!).
    <p>Not for use by third-party applications..
         */
        public: static const String BRICK;
        /**  Allows an application to broadcast a notification that an application
         package has been removed.
         <p>Not for use by third-party applications.
         */
        public: static const String BROADCAST_PACKAGE_REMOVED;
        /**  @SystemApi Allows an application to broadcast a SCORE_NETWORKS request.
         <p>Not for use by third-party applications. @hide
         */
        public: static const String BROADCAST_SCORE_NETWORKS;
        /**  Allows an application to broadcast an SMS receipt notification.
    <p>Not for use by third-party applications.
         */
        public: static const String BROADCAST_SMS;
        /**  Allows an application to broadcast sticky intents.  These are
         broadcasts whose data is held by the system after being finished,
         so that clients can quickly retrieve that data without having
         to wait for the next broadcast.
         */
        public: static const String BROADCAST_STICKY;
        /**  Allows an application to broadcast a WAP PUSH receipt notification.
    <p>Not for use by third-party applications.
         */
        public: static const String BROADCAST_WAP_PUSH;
        /**  C2DM permission.
         @hide Used internally.

         */
        public: static const String C2D_MESSAGE;
        /**  Allows an application to initiate a phone call without going through
         the Dialer user interface for the user to confirm the call
         being placed.
         */
        public: static const String CALL_PHONE;
        /**  @SystemApi Allows an application to call any phone number, including emergency
         numbers, without going through the Dialer user interface for the user
         to confirm the call being placed.
         <p>Not for use by third-party applications.
         */
        public: static const String CALL_PRIVILEGED;
        /**  Required to be able to access the camera device.
         <p>This will automatically enforce the <a
         href="{@docRoot}guide/topics/manifest/uses-feature-element.html">{@code
         &lt;uses-feature&gt;}</a> manifest element for <em>all</em> camera features.
         If you do not require all camera features or can properly operate if a camera
         is not available, then you must modify your manifest as appropriate in order to
         install on devices that don't support all camera features.</p>
         */
        public: static const String CAMERA;
        /**  @SystemApi Allows disabling the transmit-indicator LED that is normally on when
         a camera is in use by an application.
         @hide
         */
        public: static const String CAMERA_DISABLE_TRANSMIT_LED;
        /**  @SystemApi Allows an application to capture audio for hotword detection.
         <p>Not for use by third-party applications.</p>
         @hide
         */
        public: static const String CAPTURE_AUDIO_HOTWORD;
        /**  @SystemApi Allows an application to capture audio output.
         <p>Not for use by third-party applications.</p>
         */
        public: static const String CAPTURE_AUDIO_OUTPUT;
        /**  @SystemApi Allows an application to capture secure video output.
         <p>Not for use by third-party applications.</p>
         */
        public: static const String CAPTURE_SECURE_VIDEO_OUTPUT;
        /**  @SystemApi Allows to capture a frame of TV input hardware such as
         built-in tuners and HDMI-in's.
         @hide <p>Not for use by third-party applications.

         */
        public: static const String CAPTURE_TV_INPUT;
        /**  @SystemApi Allows an application to capture video output.
         <p>Not for use by third-party applications.</p>
         */
        public: static const String CAPTURE_VIDEO_OUTPUT;
        /**  Allows applications to change the background data setting.
    <p>Not for use by third-party applications.
         @hide pending API council
         */
        public: static const String CHANGE_BACKGROUND_DATA_SETTING;
        /**  @SystemApi Allows an application to change whether an application component (other than its own) is
         enabled or not.
         <p>Not for use by third-party applications.
         */
        public: static const String CHANGE_COMPONENT_ENABLED_STATE;
        /**  @SystemApi Allows an application to modify the current configuration, such
         as locale.
         */
        public: static const String CHANGE_CONFIGURATION;
        /**  Allows applications to change network connectivity state
         */
        public: static const String CHANGE_NETWORK_STATE;
        /**  Allows applications to enter Wi-Fi Multicast mode
         */
        public: static const String CHANGE_WIFI_MULTICAST_STATE;
        /**  Allows applications to change Wi-Fi connectivity state
         */
        public: static const String CHANGE_WIFI_STATE;
        /**  @hide
         */
        public: static const String CHANGE_WIMAX_STATE;
        /**  Allows an application to clear the caches of all installed
         applications on the device.
         */
        public: static const String CLEAR_APP_CACHE;
        /**  Allows an application to clear user data.
    <p>Not for use by third-party applications.
         */
        public: static const String CLEAR_APP_USER_DATA;
        /**  Allows an application to configure and connect to Wifi displays
         @hide
         */
        public: static const String CONFIGURE_WIFI_DISPLAY;
        /**  Allows a package to launch the secure full-backup confirmation UI.
         ONLY the system process may hold this permission.
         @hide
         */
        public: static const String CONFIRM_FULL_BACKUP;
        /**  @SystemApi Allows an internal user to use privileged ConnectivityManager APIs.
         @hide
         */
        public: static const String CONNECTIVITY_INTERNAL;
        /**  @SystemApi Allows an application to control the in-call experience.
         @hide
         */
        public: static const String CONTROL_INCALL_EXPERIENCE;
        /**  Allows an application to control keyguard.  Only allowed for system processes.
        @hide
         */
        public: static const String CONTROL_KEYGUARD;
        /**  @SystemApi Allows enabling/disabling location update notifications from
         the radio.
         <p>Not for use by third-party applications.
         */
        public: static const String CONTROL_LOCATION_UPDATES;
        /**  Allows an application to control low-level features of Wifi displays
         such as opening an RTSP socket.  This permission should only be used
         by the display manager.
         @hide
         */
        public: static const String CONTROL_WIFI_DISPLAY;
        /**  Must be required by default container service so that only
         the system can bind to it and use it to copy
         protected data to secure containers or files
         accessible to the system.
         @hide
         */
        public: static const String COPY_PROTECTED_DATA;
        /**  @SystemApi Internal permission protecting access to the encryption methods
        @hide

         */
        public: static const String CRYPT_KEEPER;
        /**  @SystemApi Allows an application to delete cache files.
    <p>Not for use by third-party applications.
         */
        public: static const String DELETE_CACHE_FILES;
        /**  @SystemApi Allows an application to delete packages.
    <p>Not for use by third-party applications.
         */
        public: static const String DELETE_PACKAGES;
        /**  Allows low-level access to power management.
   <p>Not for use by third-party applications.
         */
        public: static const String DEVICE_POWER;
        /**  @SystemApi Allows applications to RW to diagnostic resources.
    <p>Not for use by third-party applications.
         */
        public: static const String DIAGNOSTIC;
        /**  Allows applications to disable the keyguard
         */
        public: static const String DISABLE_KEYGUARD;
        /**  @SystemApi Allows an application to retrieve state dump information from system services.
    <p>Not for use by third-party applications.
         */
        public: static const String DUMP;
        /**  Allows an application to expand or collapse the status bar.
         */
        public: static const String EXPAND_STATUS_BAR;
        /**  Run as a manufacturer test application, running as the root user.
         Only available when the device is running in manufacturer test mode.
         <p>Not for use by third-party applications.
         */
        public: static const String FACTORY_TEST;
        /**  @hide Allows an application to register an input filter which filters the stream
         of user events (keys, touch, trackball) before they are dispatched to any window.
         */
        public: static const String FILTER_EVENTS;
        /**  Allows access to the flashlight
         */
        public: static const String FLASHLIGHT;
        /**  Allows an application to force a BACK operation on whatever is the
         top activity.
         <p>Not for use by third-party applications.
         */
        public: static const String FORCE_BACK;
        /**  @SystemApi Allows an application to call
        {@link android.app.ActivityManager#forceStopPackage}.
        @hide
         */
        public: static const String FORCE_STOP_PACKAGES;
        /**  @hide Allows an application to collect frame statistics
         */
        public: static const String FRAME_STATS;
        /**  @hide Allows the application to temporarily freeze the screen for a
         full-screen transition.
         */
        public: static const String FREEZE_SCREEN;
        /**  Allows access to the list of accounts in the Accounts Service
         */
        public: static const String GET_ACCOUNTS;
        /**  @SystemApi @hide Allows an application to collect battery statistics
         */
        public: static const String GET_APP_OPS_STATS;
        /**  Allows an application to get full detailed information about
         recently running tasks, with full fidelity to the real state.
         @hide
         */
        public: static const String GET_DETAILED_TASKS;
        /**  Allows an application to find out the space used by any package.
         */
        public: static const String GET_PACKAGE_SIZE;
        /**  @deprecated No longer enforced.
         */
        public: static const String GET_TASKS;
        /**  Allows an application to retrieve private information about
         the current top activity, such as any assist context it can provide.
         <p>Not for use by third-party applications.
         */
        public: static const String GET_TOP_ACTIVITY_INFO;
        /**  @SystemApi This permission can be used on content providers to allow the global
         search system to access their data.  Typically it used when the
         provider has some permissions protecting it (which global search
         would not be expected to hold), and added as a read-only permission
         to the path in the provider where global search queries are
         performed.  This permission can not be held by regular applications;
         it is used by applications to protect themselves from everyone else
         besides global search.
         */
        public: static const String GLOBAL_SEARCH;
        /**  Internal permission protecting access to the global search
         system: ensures that only the system can access the provider
         to perform queries (since this otherwise provides unrestricted
         access to a variety of content providers), and to write the
         search statistics (to keep applications from gaming the source
         ranking).
         @hide
         */
        public: static const String GLOBAL_SEARCH_CONTROL;
        /**  @hide Allows an application to grant or revoke specific permissions.
         */
        public: static const String GRANT_REVOKE_PERMISSIONS;
        /**  Allows access to hardware peripherals.  Intended only for hardware testing.
    <p>Not for use by third-party applications.
         */
        public: static const String HARDWARE_TEST;
        /**  @SystemApi @hide Allows HDMI-CEC service to access device and configuration files.
         This should only be used by HDMI-CEC service.

         */
        public: static const String HDMI_CEC;
        /**  Allows an application to inject user events (keys, touch, trackball)
         into the event stream and deliver them to ANY window.  Without this
         permission, you can only deliver events to windows in your own process.
         <p>Not for use by third-party applications.
         */
        public: static const String INJECT_EVENTS;
        /**  @SystemApi Allows an application to install a location provider into the Location Manager.
    <p>Not for use by third-party applications.
         */
        public: static const String INSTALL_LOCATION_PROVIDER;
        /**  @SystemApi Allows an application to install packages.
    <p>Not for use by third-party applications.
         */
        public: static const String INSTALL_PACKAGES;
        /**  Allows an application to install a shortcut in Launcher
         */
        public: static const String INSTALL_SHORTCUT;
        /**  @SystemApi @hide Allows an application to call APIs that allow it to do interactions
         across the users on the device, using singleton services and
         user-targeted broadcasts.  This permission is not available to
         third party applications.
         */
        public: static const String INTERACT_ACROSS_USERS;
        /**  @hide Fuller form of {@link android.Manifest.permission#INTERACT_ACROSS_USERS}
         that removes restrictions on where broadcasts can be sent and allows other
         types of interactions.
         */
        public: static const String INTERACT_ACROSS_USERS_FULL;
        /**  Allows an application to open windows that are for use by parts
         of the system user interface.
         <p>Not for use by third-party applications.
         */
        public: static const String INTERNAL_SYSTEM_WINDOW;
        /**  Allows applications to open network sockets.
         */
        public: static const String INTERNET;
        /**  @SystemApi Allows an application to call into a carrier setup flow. It is up to the
         carrier setup application to enforce that this permission is required
         @hide This is not a third-party API (intended for OEMs and system apps).
         */
        public: static const String INVOKE_CARRIER_SETUP;
        /**  Allows an application to call
        {@link android.app.ActivityManager#killBackgroundProcesses}.
         */
        public: static const String KILL_BACKGROUND_PROCESSES;
        /**  Allows an application to launch the trust agent settings activity.
        @hide
         */
        public: static const String LAUNCH_TRUST_AGENT_SETTINGS;
        /**  @SystemApi Allows an application to use location features in hardware,
         such as the geofencing api.
         <p>Not for use by third-party applications.
         */
        public: static const String LOCATION_HARDWARE;
        /**  @SystemApi Allows access to the loop radio (Android@Home mesh network) device.
         @hide
         */
        public: static const String LOOP_RADIO;
        /**  Allows an application to manage the list of accounts in the AccountManager
         */
        public: static const String MANAGE_ACCOUNTS;
        /**  @SystemApi @hide Allows an application to create/manage/remove stacks
         */
        public: static const String MANAGE_ACTIVITY_STACKS;
        /**  Allows an application to manage (create, destroy,
         Z-order) application tokens in the window manager.
         <p>Not for use by third-party applications.
         */
        public: static const String MANAGE_APP_TOKENS;
        /**  @SystemApi Allows an application to install and/or uninstall CA certificates on
         behalf of the user.
         @hide
         */
        public: static const String MANAGE_CA_CERTIFICATES;
        /**  @SystemApi Required to add or remove another application as a device admin.
         <p>Not for use by third-party applications.
         @hide
         */
        public: static const String MANAGE_DEVICE_ADMINS;
        /**  Allows an application to manage access to documents, usually as part
         of a document picker.
         */
        public: static const String MANAGE_DOCUMENTS;
        /**  Api Allows an application to manage media projection sessions.
         @hide This is not a third-party API (intended for system apps).
         */
        public: static const String MANAGE_MEDIA_PROJECTION;
        /**  Allows an application to manage network policies (such as warning and disable
         limits) and to define application-specific rules. @hide
         */
        public: static const String MANAGE_NETWORK_POLICY;
        /**  @SystemApi Allows an application to manage preferences and permissions for USB devices
         @hide
         */
        public: static const String MANAGE_USB;
        /**  @SystemApi @hide Allows an application to call APIs that allow it to query and manage
         users on the device. This permission is not available to
         third party applications.
         */
        public: static const String MANAGE_USERS;
        /**  Must be required by hotword enrollment application,
         to ensure that only the system can interact with it.
         @hide <p>Not for use by third-party applications.</p>
         */
        public: static const String MANAGE_VOICE_KEYPHRASES;
        /**  @SystemApi Not for use by third-party applications.
         */
        public: static const String MASTER_CLEAR;
        /**  @SystemApi Allows an application to know what content is playing and control its playback.
         <p>Not for use by third-party applications due to privacy of media consumption</p>
         */
        public: static const String MEDIA_CONTENT_CONTROL;
        /**  @SystemApi Internal permission allowing an application to query/set which
         applications can bind AppWidgets.
         @hide
         */
        public: static const String MODIFY_APPWIDGET_BIND_PERMISSIONS;
        /**  @SystemApi Allows an application to modify audio routing and override policy decisions.
         <p>Not for use by third-party applications.</p>
         @hide
         */
        public: static const String MODIFY_AUDIO_ROUTING;
        /**  Allows an application to modify global audio settings
         */
        public: static const String MODIFY_AUDIO_SETTINGS;
        /**  @SystemApi Allows an application to account its network traffic against other UIDs. Used
         by system services like download manager and media server. Not for use by
         third party apps. @hide
         */
        public: static const String MODIFY_NETWORK_ACCOUNTING;
        /**  @SystemApi Allows an application to modify parental controls
         <p>Not for use by third-party applications.
         @hide
         */
        public: static const String MODIFY_PARENTAL_CONTROLS;
        /**  @SystemApi Allows modification of the telephony state - power on, mmi, etc.
         Does not include placing calls.
         <p>Not for use by third-party applications.
         */
        public: static const String MODIFY_PHONE_STATE;
        /**  @SystemApi Allows formatting file systems for removable storage.
    <p>Not for use by third-party applications.
         */
        public: static const String MOUNT_FORMAT_FILESYSTEMS;
        /**  @SystemApi Allows mounting and unmounting file systems for removable storage.
    <p>Not for use by third-party applications.
         */
        public: static const String MOUNT_UNMOUNT_FILESYSTEMS;
        /**  @SystemApi Allows an application to move location of installed package.
         @hide
         */
        public: static const String MOVE_PACKAGE;
        /**  Allows access to configure network interfaces, configure/use IPSec, etc.
         @hide
         */
        public: static const String NET_ADMIN;
        /**  @hide Allows low-level access to tun tap driver
         */
        public: static const String NET_TUNNELING;
        /**  Allows applications to perform I/O operations over NFC
         */
        public: static const String NFC;
        /**  Allows sending and receiving handover transfer status from Wifi and Bluetooth
         @hide

         */
        public: static const String NFC_HANDOVER_STATUS;
        /**  @hide Allows enabling/disabling OEM unlock
   <p>Not for use by third-party applications.
         */
        public: static const String OEM_UNLOCK_STATE;
        /**  @SystemApi Allows an application to collect component usage
         statistics @hide
         */
        public: static const String PACKAGE_USAGE_STATS;
        /**  @SystemApi @hide Package verifier needs to have this permission before the PackageManager will
         trust it to verify packages.

         */
        public: static const String PACKAGE_VERIFICATION_AGENT;
        /**  @SystemApi Allows an application to perform CDMA OTA provisioning @hide
         */
        public: static const String PERFORM_CDMA_PROVISIONING;
        /**  @deprecated This functionality will be removed in the future; please do
         not use. Allow an application to make its activities persistent.
         */
        public: static const String PERSISTENT_ACTIVITY;
        /**  Allows an application to see the number being dialed during an outgoing
         call with the option to redirect the call to a different number or
         abort the call altogether.
         */
        public: static const String PROCESS_OUTGOING_CALLS;
        /**  @SystemApi Allows an application to provide a trust agent.
         @hide For security reasons, this is a platform-only permission.
         */
        public: static const String PROVIDE_TRUST_AGENT;
        /**  Allows an application to read the user's calendar data.
         */
        public: static const String READ_CALENDAR;
        /**  Allows an application to read the user's call log.
         <p class="note"><strong>Note:</strong> If your app uses the
         {@link #READ_CONTACTS} permission and <em>both</em> your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
         minSdkVersion}</a> and <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> values are set to 15 or lower, the system implicitly
         grants your app this permission. If you don't need this permission, be sure your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> is 16 or higher.</p>
         */
        public: static const String READ_CALL_LOG;
        /**  Allows an application to read previously received cell broadcast
         messages and to register a content observer to get notifications when
         a cell broadcast has been received and added to the database. For
         emergency alerts, the database is updated immediately after the
         alert dialog and notification sound/vibration/speech are presented.
         The "read" column is then updated after the user dismisses the alert.
         This enables supplementary emergency assistance apps to start loading
         additional emergency information (if Internet access is available)
         when the alert is first received, and to delay presenting the info
         to the user until after the initial alert dialog is dismissed.
         @hide Pending API council approval
         */
        public: static const String READ_CELL_BROADCASTS;
        /**  Allows an application to read the user's contacts data.
         */
        public: static const String READ_CONTACTS;
        /**  @SystemApi Allows applications to read dream settings and dream state.
         @hide
         */
        public: static const String READ_DREAM_STATE;
        /**  Allows an application to read from external storage.
         <p>Any app that declares the {@link #WRITE_EXTERNAL_STORAGE} permission is implicitly
         granted this permission.</p>
         <p>This permission is enforced starting in API level 19.  Before API level 19, this
         permission is not enforced and all apps still have access to read from external storage.
         You can test your app with the permission enforced by enabling <em>Protect USB
         storage</em> under Developer options in the Settings app on a device running Android 4.1 or
         higher.</p>
         <p>Also starting in API level 19, this permission is <em>not</em> required to
         read/write files in your application-specific directories returned by
         {@link android.content.Context#getExternalFilesDir} and
         {@link android.content.Context#getExternalCacheDir}.
         <p class="note"><strong>Note:</strong> If <em>both</em> your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
         minSdkVersion}</a> and <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
         grants your app this permission. If you don't need this permission, be sure your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> is 4 or higher.
         */
        public: static const String READ_EXTERNAL_STORAGE;
        /**  @SystemApi Allows an application to take screen shots and more generally
         get access to the frame buffer data.
         <p>Not for use by third-party applications.
         */
        public: static const String READ_FRAME_BUFFER;
        /**  Allows an application to read (but not write) the user's
        browsing history and bookmarks.
         */
        public: static const String READ_HISTORY_BOOKMARKS;
        /**  Allows an application to retrieve the current state of keys and
         switches.
         <p>Not for use by third-party applications.
         @deprecated The API that used this permission has been removed.
         */
        public: static const String READ_INPUT_STATE;
        /**  @SystemApi Allows an application to read install sessions
         @hide This is not a third-party API (intended for system apps).
         */
        public: static const String READ_INSTALL_SESSIONS;
        /**  @SystemApi Allows an application to read the low-level system log files.
    <p>Not for use by third-party applications, because
    Log entries can contain the user's private information.
         */
        public: static const String READ_LOGS;
        /**  @SystemApi Allows an application to read historical network usage for
         specific networks and applications. @hide
         */
        public: static const String READ_NETWORK_USAGE_HISTORY;
        /**  Allows read only access to phone state.
         <p class="note"><strong>Note:</strong> If <em>both</em> your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
         minSdkVersion}</a> and <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
         grants your app this permission. If you don't need this permission, be sure your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> is 4 or higher.
         */
        public: static const String READ_PHONE_STATE;
        /**  Allows read only access to precise phone state.
         @hide Pending API council approval
         */
        public: static const String READ_PRECISE_PHONE_STATE;
        /**  @SystemApi Allows read access to privileged phone state.
         @hide Used internally.
         */
        public: static const String READ_PRIVILEGED_PHONE_STATE;
        /**  Allows an application to read the user's personal profile data.
         */
        public: static const String READ_PROFILE;
        /**  @SystemApi Internal permission to allows an application to read indexable data.
        @hide
         */
        public: static const String READ_SEARCH_INDEXABLES;
        /**  Allows an application to read SMS messages.
         */
        public: static const String READ_SMS;
        /**  Allows an application to read from the user's social stream.
       @deprecated This functionality will be unsupported in the future; cursors returned
       will be empty. Please do not use.
         */
        public: static const String READ_SOCIAL_STREAM;
        /**  Allows applications to read the sync settings
         */
        public: static const String READ_SYNC_SETTINGS;
        /**  Allows applications to read the sync stats
         */
        public: static const String READ_SYNC_STATS;
        /**  Allows an application to read the user dictionary. This should
         really only be required by an IME, or a dictionary editor like
         the Settings app.
         */
        public: static const String READ_USER_DICTIONARY;
        /**  Allows an application to read voicemails in the system.
         */
        public: static const String READ_VOICEMAIL;
        /**  @SystemApi @hide Allows applications to read Wi-Fi credential.
         <p>Not for use by third-party applications.
         */
        public: static const String READ_WIFI_CREDENTIAL;
        /**  New version of GET_TASKS that apps can request, since GET_TASKS doesn't really
         give access to task information.  We need this new one because there are
         many existing apps that use add libraries and such that have validation
         code to ensure the app has requested the GET_TASKS permission by seeing
         if it has been granted the permission...  if it hasn't, it kills the app
         with a message about being upset.  So we need to have it continue to look
         like the app is getting that permission, even though it will never be
         checked, and new privileged apps can now request this one for real access.
         @hide
         @SystemApi
         */
        public: static const String REAL_GET_TASKS;
        /**  @SystemApi Required to be able to reboot the device.
    <p>Not for use by third-party applications.
         */
        public: static const String REBOOT;
        /**  Allows an application to monitor incoming Bluetooth MAP messages, to record
         or perform processing on them.
 @hide
         */
        public: static const String RECEIVE_BLUETOOTH_MAP;
        /**  Allows an application to receive the
         {@link android.content.Intent#ACTION_BOOT_COMPLETED} that is
         broadcast after the system finishes booting.  If you don't
         request this permission, you will not receive the broadcast at
         that time.  Though holding this permission does not have any
         security implications, it can have a negative impact on the
         user experience by increasing the amount of time it takes the
         system to start and allowing applications to have themselves
         running without the user being aware of them.  As such, you must
         explicitly declare your use of this facility to make that visible
         to the user.
         */
        public: static const String RECEIVE_BOOT_COMPLETED;
        /**  @SystemApi @hide
         */
        public: static const String RECEIVE_DATA_ACTIVITY_CHANGE;
        /**  @SystemApi Allows an application to receive emergency cell broadcast messages,
         to record or display them to the user.
         <p>Not for use by third-party applications.
         @hide Pending API council approval
         */
        public: static const String RECEIVE_EMERGENCY_BROADCAST;
        /**  Allows an application to monitor incoming MMS messages, to record
         or perform processing on them.
         */
        public: static const String RECEIVE_MMS;
        /**  Allows an application to monitor incoming SMS messages, to record
         or perform processing on them.
         */
        public: static const String RECEIVE_SMS;
        /**  Allows an application to monitor incoming WAP push messages.
         */
        public: static const String RECEIVE_WAP_PUSH;
        /**  Allows an application to record audio
         */
        public: static const String RECORD_AUDIO;
        /**  @SystemApi Allows an application to do certain operations needed for
         interacting with the recovery (system update) system.
         @hide
         */
        public: static const String RECOVERY;
        /**  Allows registration for remote audio playback. @hide
         */
        public: static const String REMOTE_AUDIO_PLAYBACK;
        /**  @SystemApi Allows an application to remove DRM certificates
         @hide This is not a third-party API (intended for system apps).
         */
        public: static const String REMOVE_DRM_CERTIFICATES;
        /**  @hide Allows an application to change to remove/kill tasks
         */
        public: static const String REMOVE_TASKS;
        /**  Allows an application to change the Z-order of tasks
         */
        public: static const String REORDER_TASKS;
        /**  @deprecated The {@link android.app.ActivityManager#restartPackage}
        API is no longer supported.
         */
        public: static const String RESTART_PACKAGES;
        /**  @SystemApi @hide Allows an application to retrieve the content of the active window
         An active window is the window that has fired an accessibility event.
         */
        public: static const String RETRIEVE_WINDOW_CONTENT;
        /**  @hide Allows an application to retrieve the window token from the accessibility manager.
         */
        public: static const String RETRIEVE_WINDOW_TOKEN;
        /**  Allows applications to act as network scorers. @hide @SystemApi
 TODO: Change protection level to normal when unhiding this API.
         */
        public: static const String SCORE_NETWORKS;
        /**  @SystemApi Allows an application (Phone) to send a request to other applications
         to handle the respond-via-message action during incoming calls.
         <p>Not for use by third-party applications.
         */
        public: static const String SEND_RESPOND_VIA_MESSAGE;
        /**  Allows an application to send SMS messages.
         */
        public: static const String SEND_SMS;
        /**  @SystemApi Allows applications to access serial ports via the SerialManager.
         @hide
         */
        public: static const String SERIAL_PORT;
        /**  Allows an application to watch and control how activities are
         started globally in the system.  Only for is in debugging
         (usually the monkey command).
         <p>Not for use by third-party applications.
         */
        public: static const String SET_ACTIVITY_WATCHER;
        /**  Allows an application to broadcast an Intent to set an alarm for the
         user.
         */
        public: static const String SET_ALARM;
        /**  @SystemApi Allows an application to control whether activities are immediately
         finished when put in the background.
         <p>Not for use by third-party applications.
         */
        public: static const String SET_ALWAYS_FINISH;
        /**  @SystemApi Modify the global animation scaling factor.
    <p>Not for use by third-party applications.
         */
        public: static const String SET_ANIMATION_SCALE;
        /**  @SystemApi Configure an application for debugging.
    <p>Not for use by third-party applications.
         */
        public: static const String SET_DEBUG_APP;
        /**  Allows low-level access to setting input device calibration.
         <p>Not for use by normal applications.
         @hide
         */
        public: static const String SET_INPUT_CALIBRATION;
        /**  Allows low-level access to setting the keyboard layout.
         <p>Not for use by third-party applications.
         @hide
         */
        public: static const String SET_KEYBOARD_LAYOUT;
        /**  Allows low-level access to setting the orientation (actually
         rotation) of the screen.
         <p>Not for use by third-party applications.
         */
        public: static const String SET_ORIENTATION;
        /**  Allows low-level access to setting the pointer speed.
         <p>Not for use by third-party applications.
         */
        public: static const String SET_POINTER_SPEED;
        /**  @deprecated No longer useful, see
         {@link android.content.pm.PackageManager#addPackageToPreferred}
         for details.
         */
        public: static const String SET_PREFERRED_APPLICATIONS;
        /**  @SystemApi Allows an application to set the maximum number of (not needed)
         application processes that can be running.
         <p>Not for use by third-party applications.
         */
        public: static const String SET_PROCESS_LIMIT;
        /**  @SystemApi @hide Change the screen compatibility mode of applications
         */
        public: static const String SET_SCREEN_COMPATIBILITY;
        /**  @SystemApi Allows applications to set the system time.
    <p>Not for use by third-party applications.
         */
        public: static const String SET_TIME;
        /**  Allows applications to set the system time zone
         */
        public: static const String SET_TIME_ZONE;
        /**  Allows applications to set the wallpaper
         */
        public: static const String SET_WALLPAPER;
        /**  @SystemApi Allows applications to set a live wallpaper.
         @hide XXX Change to signature once the picker is moved to its
         own apk as Ghod Intended.
         */
        public: static const String SET_WALLPAPER_COMPONENT;
        /**  Allows applications to set the wallpaper hints
         */
        public: static const String SET_WALLPAPER_HINTS;
        /**  @SystemApi Allows an application to call the activity manager shutdown() API
         to put the higher-level system there into a shutdown state.
         @hide
         */
        public: static const String SHUTDOWN;
        /**  @SystemApi Allow an application to request that a signal be sent to all persistent processes.
    <p>Not for use by third-party applications.
         */
        public: static const String SIGNAL_PERSISTENT_PROCESSES;
        /**  Allows an application to start any activity, regardless of permission
         protection or exported state. @hide
         */
        public: static const String START_ANY_ACTIVITY;
        /**  Allows an application to start a task from a ActivityManager#RecentTaskInfo.
         @hide
         */
        public: static const String START_TASKS_FROM_RECENTS;
        /**  @SystemApi Allows an application to open, close, or disable the status bar
         and its icons.
         <p>Not for use by third-party applications.
         */
        public: static const String STATUS_BAR;
        /**  Allows an application to be the status bar.  Currently used only by SystemUI.apk
    @hide
         */
        public: static const String STATUS_BAR_SERVICE;
        /**  @SystemApi Allows an application to tell the activity manager to temporarily
         stop application switches, putting it into a special mode that
         prevents applications from immediately switching away from some
         critical UI such as the home screen.
         @hide
         */
        public: static const String STOP_APP_SWITCHES;
        /**  Allows an application to allow access the subscribed feeds
         ContentProvider.
         */
        public: static const String SUBSCRIBED_FEEDS_READ;
        public: static const String SUBSCRIBED_FEEDS_WRITE;
        /**  Allows an application to open windows using the type
         {@link android.view.WindowManager.LayoutParams#TYPE_SYSTEM_ALERT},
         shown on top of all other applications.  Very few applications
         should use this permission; these windows are intended for
         system-level interaction with the user.
         */
        public: static const String SYSTEM_ALERT_WINDOW;
        /**  @hide Allows an application to temporary enable accessibility on the device.
         */
        public: static const String TEMPORARY_ENABLE_ACCESSIBILITY;
        /**  Allows using the device's IR transmitter, if available
         */
        public: static const String TRANSMIT_IR;
        /**  Allows an application to listen to trust changes.  Only allowed for system processes.
        @hide
         */
        public: static const String TRUST_LISTENER;
        /**  @SystemApi Allows TvInputService to access underlying TV input hardware such as
         built-in tuners and HDMI-in's.
         @hide This should only be used by OEM's TvInputService's.

         */
        public: static const String TV_INPUT_HARDWARE;
        /**  Allows an application to uninstall a shortcut in Launcher
         */
        public: static const String UNINSTALL_SHORTCUT;
        /**  @SystemApi Allows an application to update application operation statistics. Not for
         use by third party apps. @hide
         */
        public: static const String UPDATE_APP_OPS_STATS;
        /**  @SystemApi Allows an application to update device statistics.
    <p>Not for use by third-party applications.
         */
        public: static const String UPDATE_DEVICE_STATS;
        /**  @SystemApi Allows an application to hold an UpdateLock, recommending that a headless
         OTA reboot *not* occur while the lock is held.
         @hide
         */
        public: static const String UPDATE_LOCK;
        /**  Allows access to the PowerManager.userActivity function.
   <p>Not for use by third-party applications. @hide @SystemApi
         */
        public: static const String USER_ACTIVITY;
        /**  Allows an application to request authtokens from the AccountManager
         */
        public: static const String USE_CREDENTIALS;
        /**  Allows an application to use SIP service
         */
        public: static const String USE_SIP;
        /**  Allows access to the vibrator
         */
        public: static const String VIBRATE;
        /**  Allows using PowerManager WakeLocks to keep processor from sleeping or screen
         from dimming
         */
        public: static const String WAKE_LOCK;
        /**  @SystemApi Allows applications to write the apn settings.
    <p>Not for use by third-party applications.
         */
        public: static const String WRITE_APN_SETTINGS;
        /**  Allows an application to write (but not read) the user's
         calendar data.
         */
        public: static const String WRITE_CALENDAR;
        /**  Allows an application to write (but not read) the user's
         contacts data.
         <p class="note"><strong>Note:</strong> If your app uses the
         {@link #WRITE_CONTACTS} permission and <em>both</em> your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
         minSdkVersion}</a> and <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> values are set to 15 or lower, the system implicitly
         grants your app this permission. If you don't need this permission, be sure your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> is 16 or higher.</p>
         */
        public: static const String WRITE_CALL_LOG;
        /**  Allows an application to write (but not read) the user's
         contacts data.
         */
        public: static const String WRITE_CONTACTS;
        /**  @SystemApi Allows applications to write dream settings, and start or stop dreaming.
         @hide
         */
        public: static const String WRITE_DREAM_STATE;
        /**  Allows an application to write to external storage.
         <p class="note"><strong>Note:</strong> If <em>both</em> your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#min">{@code
         minSdkVersion}</a> and <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> values are set to 3 or lower, the system implicitly
         grants your app this permission. If you don't need this permission, be sure your <a
         href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#target">{@code
         targetSdkVersion}</a> is 4 or higher.
         <p>Starting in API level 19, this permission is <em>not</em> required to
         read/write files in your application-specific directories returned by
         {@link android.content.Context#getExternalFilesDir} and
         {@link android.content.Context#getExternalCacheDir}.
         */
        public: static const String WRITE_EXTERNAL_STORAGE;
        /**  @SystemApi Allows an application to modify the Google service map.
    <p>Not for use by third-party applications.
         */
        public: static const String WRITE_GSERVICES;
        /**  Allows an application to write (but not read) the user's
        browsing history and bookmarks.
         */
        public: static const String WRITE_HISTORY_BOOKMARKS;
        /**  @SystemApi Allows an application to write to internal media storage
         @hide
         */
        public: static const String WRITE_MEDIA_STORAGE;
        /**  Allows an application to write (but not read) the user's
         personal profile data.
         */
        public: static const String WRITE_PROFILE;
        /**  @SystemApi Allows an application to read or write the secure system settings.
    <p>Not for use by third-party applications.
         */
        public: static const String WRITE_SECURE_SETTINGS;
        /**  Allows an application to read or write the system settings.
         */
        public: static const String WRITE_SETTINGS;
        /**  Allows an application to write SMS messages.
         */
        public: static const String WRITE_SMS;
        /**  Allows an application to write (but not read) the user's
         social stream data.
         @deprecated This functionality will be unsupported in the future; cursors returned
         will be empty. Please do not use.
         */
        public: static const String WRITE_SOCIAL_STREAM;
        /**  Allows applications to write the sync settings
         */
        public: static const String WRITE_SYNC_SETTINGS;
        /**  Allows an application to write to the user dictionary.
         */
        public: static const String WRITE_USER_DICTIONARY;
        /**  Allows an application to modify and remove existing voicemails in the system
         */
        public: static const String WRITE_VOICEMAIL;
    };
    public: class permission_group {
        /**  Used for permissions that allow requesting certain accessibility features.
         */
        public: static const String ACCESSIBILITY_FEATURES;
        /**  Permissions for direct access to the accounts managed
         by the Account Manager.
         */
        public: static const String ACCOUNTS;
        /**  Used for permissions that provide direct access to the hardware on
         the device that has an effect on battery life.  This includes vibrator,
         flashlight,  etc.
         */
        public: static const String AFFECTS_BATTERY;
        /**  Group of permissions that are related to the other applications
         installed on the system.  Examples include such as listing
         running apps, or killing background processes.
         */
        public: static const String APP_INFO;
        /**  Used for permissions that provide direct access to speaker settings
         the device.
         */
        public: static const String AUDIO_SETTINGS;
        /**  Used for permissions that provide access to other devices through Bluetooth.
         */
        public: static const String BLUETOOTH_NETWORK;
        /**  Used for permissions that provide access to the user
         bookmarks and browser history.
         */
        public: static const String BOOKMARKS;
        /**  Used for permissions that provide access to the device
         calendar to create / view events.
         */
        public: static const String CALENDAR;
        /**  Used for permissions that are associated with accessing
         camera or capturing images/video from the device.
         */
        public: static const String CAMERA;
        /**  Used for permissions that can be used to make the user spend money
         without their direct involvement.
         */
        public: static const String COST_MONEY;
        /**  Group of permissions that are related to development features.  These
         are not permissions that should appear in third-party applications; they
         protect APIs that are intended only to be used for development
         purposes.
         */
        public: static const String DEVELOPMENT_TOOLS;
        /**  Used for permissions that provide access to device alarms.
         */
        public: static const String DEVICE_ALARMS;
        /**  Group of permissions that allow manipulation of how
         another application displays UI to the user.
         */
        public: static const String DISPLAY;
        /**  Used for permissions that provide direct access to the hardware on
         the device.  This includes audio, the camera, vibrator, etc.
         */
        public: static const String HARDWARE_CONTROLS;
        /**  Used for permissions that allow access to the user's current
         location.
         */
        public: static const String LOCATION;
        /**  Used for permissions that allow an application to send messages
         on behalf of the user or intercept messages being received by the
         user.  This is primarily intended for SMS/MMS messaging, such as
         receiving or reading an MMS.
         */
        public: static const String MESSAGES;
        /**  Used for permissions that are associated with accessing
         microphone audio from the device. Note that phone calls also capture audio
         but are in a separate (more visible) permission group.
         */
        public: static const String MICROPHONE;
        /**  Used for permissions that provide access to networking services.  The
         main permission here is internet access, but this is also an
         appropriate group for accessing or modifying any network configuration
         or other related network operations.
         */
        public: static const String NETWORK;
        /**  Used for permissions that provide access to information about the device
         user such as profile information.  This includes both reading and
         writing of this data (which should generally be expressed as two
         distinct permissions).
         */
        public: static const String PERSONAL_INFO;
        /**  Used for permissions that are associated with accessing and modifying
         telephony state: placing calls, intercepting outgoing calls, reading
         and modifying the phone state.
         */
        public: static const String PHONE_CALLS;
        /**  Group of permissions that are related to the screenlock.
         */
        public: static const String SCREENLOCK;
        /**  Used for permissions that provide access to the user's social connections,
         such as contacts, call logs, social stream, etc.  This includes
         both reading and writing of this data (which should generally be
         expressed as two distinct permissions).
         */
        public: static const String SOCIAL_INFO;
        /**  Used for permissions that change the status bar
         */
        public: static const String STATUS_BAR;
        /**  Group of permissions that are related to SD card access.
         */
        public: static const String STORAGE;
        /**  Used for permissions that access the sync settings or sync
         related information.
         */
        public: static const String SYNC_SETTINGS;
        /**  Group of permissions that are related to system clock.
         */
        public: static const String SYSTEM_CLOCK;
        /**  Group of permissions that are related to system APIs.  Many
         of these are not permissions the user will be expected to understand,
         and such permissions should generally be marked as "normal" protection
         level so they don't get displayed.  This can also, however, be used
         for miscellaneous features that provide access to the operating system,
         such as writing the global system settings.
         */
        public: static const String SYSTEM_TOOLS;
        /**  Used for permissions that provide access to the user
         calendar to create / view events.
         */
        public: static const String USER_DICTIONARY;
        /**  Used for permissions that provide access to the user voicemail box.
         */
        public: static const String VOICEMAIL;
        /**  Group of permissions that allow manipulation of how
         another application displays UI to the user.
         */
        public: static const String WALLPAPER;
        /**  Used for permissions that provide access to the user
         calendar to create / view events.
         */
        public: static const String WRITE_USER_DICTIONARY;
    };
};
};
};

#endif // __Elastos_Droid_Manifest_H__
