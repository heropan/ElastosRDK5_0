//This file is autogenerated for
//    AndroidNetworkLibrary.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH
#define ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_AndroidNetworkLibrary_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif

namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Net {

struct ElaAndroidNetworkLibraryCallback
{
    Boolean (*elastos_AndroidNetworkLibrary_storeKeyPair)(IInterface* context, ArrayOf<Byte>* publicKey, ArrayOf<Byte>* privateKey);
    Boolean (*elastos_AndroidNetworkLibrary_storeCertificate)(IInterface* context, Int32 certType, ArrayOf<Byte>* data);
    String (*elastos_AndroidNetworkLibrary_getMimeTypeFromExtension)(const String& extension);
    Boolean (*elastos_AndroidNetworkLibrary_haveOnlyLoopbackAddresses)();
    String (*elastos_AndroidNetworkLibrary_getNetworkList)();
    AutoPtr<IInterface> (*elastos_AndroidNetworkLibrary_verifyServerCertificates)(ArrayOf<AutoPtr<ArrayOf<Byte> > >* certChain, const String& authType, const String& host);
    void (*elastos_AndroidNetworkLibrary_addTestRootCertificate)(ArrayOf<Byte>* rootCert);
    void (*elastos_AndroidNetworkLibrary_clearTestRootCertificates)();
    String (*elastos_AndroidNetworkLibrary_getNetworkCountryIso)(IInterface* context);
    String (*elastos_AndroidNetworkLibrary_getNetworkOperator)(IInterface* context);
};

void* ElastosNetworkLibrary::ElaElastosNetworkLibraryCallback_Init()
{
    static ElaAndroidNetworkLibraryCallback sElaAndroidNetworkLibraryCallback;

    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_storeKeyPair = &ElastosNetworkLibrary::StoreKeyPair;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_storeCertificate = &ElastosNetworkLibrary::StoreCertificate;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getMimeTypeFromExtension = &ElastosNetworkLibrary::GetMimeTypeFromExtension;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_haveOnlyLoopbackAddresses = &ElastosNetworkLibrary::HaveOnlyLoopbackAddresses;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkList = &ElastosNetworkLibrary::GetNetworkList;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_verifyServerCertificates = &ElastosNetworkLibrary::VerifyServerCertificates;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_addTestRootCertificate = &ElastosNetworkLibrary::AddTestRootCertificate;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_clearTestRootCertificates = &ElastosNetworkLibrary::ClearTestRootCertificates;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkCountryIso = &ElastosNetworkLibrary::GetNetworkCountryIso;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkOperator = &ElastosNetworkLibrary::GetNetworkOperator;

    Elastos_AndroidNetworkLibrary_InitCallback((Handle32)&sElaAndroidNetworkLibraryCallback);
    return &sElaAndroidNetworkLibraryCallback;
}

static void* sPElaElastosNetworkLibraryCallback = ElastosNetworkLibrary::ElaElastosNetworkLibraryCallback_Init();

} // namespace Net
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH
