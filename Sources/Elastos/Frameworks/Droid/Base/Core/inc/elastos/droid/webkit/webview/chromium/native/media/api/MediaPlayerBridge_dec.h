//This file is autogenerated for
//    MediaPlayerBridge.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_MEDIAPLAYERBRIDGE_CALLBACK_DEC_HH
#define ELASTOS_MEDIAPLAYERBRIDGE_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_MediaPlayerBridge_nativeOnDidSetDataUriDataSource(IInterface* caller,Handle32 nativeMediaPlayerBridge,Boolean success);
    extern void Elastos_MediaPlayerBridge_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Media {

struct ElaMediaPlayerBridgeCallback
{
    AutoPtr<IInterface> (*elastos_MediaPlayerBridge_create)(Int64 nativeMediaPlayerBridge);
    void (*elastos_MediaPlayerBridge_destroy)(IInterface* obj);
    void (*elastos_MediaPlayerBridge_setSurface)(IInterface* obj, IInterface* surface);
    Boolean (*elastos_MediaPlayerBridge_prepareAsync)(IInterface* obj);
    Boolean (*elastos_MediaPlayerBridge_isPlaying)(IInterface* obj);
    Int32 (*elastos_MediaPlayerBridge_getVideoWidth)(IInterface* obj);
    Int32 (*elastos_MediaPlayerBridge_getVideoHeight)(IInterface* obj);
    Int32 (*elastos_MediaPlayerBridge_getCurrentPosition)(IInterface* obj);
    Int32 (*elastos_MediaPlayerBridge_getDuration)(IInterface* obj);
    void (*elastos_MediaPlayerBridge_release)(IInterface* obj);
    void (*elastos_MediaPlayerBridge_setVolume)(IInterface* obj, Double volume);
    void (*elastos_MediaPlayerBridge_start)(IInterface* obj);
    void (*elastos_MediaPlayerBridge_pause)(IInterface* obj);
    void (*elastos_MediaPlayerBridge_seekTo)(IInterface* obj, Int32 msec);
    Boolean (*elastos_MediaPlayerBridge_setDataSource)(IInterface* obj, IInterface* context, const String& url, const String& cookies, const String& userAgent, Boolean hideUrlLog);
    Boolean (*elastos_MediaPlayerBridge_setDataSourceFromFd)(IInterface* obj, Int32 fd, Int64 offset, Int64 length);
    Boolean (*elastos_MediaPlayerBridge_setDataUriDataSource)(IInterface* obj, IInterface* context, const String& url);
    Boolean (*elastos_AllowedOperations_canPause)(IInterface* obj);
    Boolean (*elastos_AllowedOperations_canSeekForward)(IInterface* obj);
    Boolean (*elastos_AllowedOperations_canSeekBackward)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_MediaPlayerBridge_getAllowedOperations)(IInterface* obj);
};

void* MediaPlayerBridge::ElaMediaPlayerBridgeCallback_Init()
{
    static ElaMediaPlayerBridgeCallback sElaMediaPlayerBridgeCallback;

    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_create = &MediaPlayerBridge::Create;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_destroy = &MediaPlayerBridge::Destroy;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_setSurface = &MediaPlayerBridge::SetSurface;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_prepareAsync = &MediaPlayerBridge::PrepareAsync;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_isPlaying = &MediaPlayerBridge::IsPlaying;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_getVideoWidth = &MediaPlayerBridge::GetVideoWidth;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_getVideoHeight = &MediaPlayerBridge::GetVideoHeight;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_getCurrentPosition = &MediaPlayerBridge::GetCurrentPosition;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_getDuration = &MediaPlayerBridge::GetDuration;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_release = &MediaPlayerBridge::ReleaseResources;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_setVolume = &MediaPlayerBridge::SetVolume;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_start = &MediaPlayerBridge::Start;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_pause = &MediaPlayerBridge::Pause;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_seekTo = &MediaPlayerBridge::SeekTo;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_setDataSource = &MediaPlayerBridge::SetDataSource;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_setDataSourceFromFd = &MediaPlayerBridge::SetDataSourceFromFd;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_setDataUriDataSource = &MediaPlayerBridge::SetDataUriDataSource;
    sElaMediaPlayerBridgeCallback.elastos_AllowedOperations_canPause = &MediaPlayerBridge::AllowedOperations::CanPause;
    sElaMediaPlayerBridgeCallback.elastos_AllowedOperations_canSeekForward = &MediaPlayerBridge::AllowedOperations::CanSeekForward;
    sElaMediaPlayerBridgeCallback.elastos_AllowedOperations_canSeekBackward = &MediaPlayerBridge::AllowedOperations::CanSeekBackward;
    sElaMediaPlayerBridgeCallback.elastos_MediaPlayerBridge_getAllowedOperations = &MediaPlayerBridge::GetAllowedOperations;

    Elastos_MediaPlayerBridge_InitCallback((Handle32)&sElaMediaPlayerBridgeCallback);
    return &sElaMediaPlayerBridgeCallback;
}

static void* sPElaMediaPlayerBridgeCallback = MediaPlayerBridge::ElaMediaPlayerBridgeCallback_Init();

} // namespace Media
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_MEDIAPLAYERBRIDGE_CALLBACK_DEC_HH
