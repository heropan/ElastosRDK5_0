//This file is autogenerated for
//    BrowserStartupController.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_BROWSERSTARTUPCONTROLLER_CALLBACK_DEC_HH
#define ELASTOS_BROWSERSTARTUPCONTROLLER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_BrowserStartupController_nativeSetCommandLineFlags(Int32 maxRenderProcesses,const String& pluginDescriptor);
    extern Boolean Elastos_BrowserStartupController_nativeIsOfficialBuild();
    extern Boolean Elastos_BrowserStartupController_nativeIsPluginEnabled();
    extern void Elastos_BrowserStartupController_InitCallback(Handle32 cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Content {
namespace Browser {

struct ElaBrowserStartupControllerCallback
{
    Boolean (*elastos_BrowserStartupController_browserMayStartAsynchonously)();
    void (*elastos_BrowserStartupController_browserStartupComplete)(Int32 result);
};

void* BrowserStartupController::ElaBrowserStartupControllerCallback_Init()
{
    static ElaBrowserStartupControllerCallback sElaBrowserStartupControllerCallback;

    sElaBrowserStartupControllerCallback.elastos_BrowserStartupController_browserMayStartAsynchonously = &BrowserStartupController::BrowserMayStartAsynchonously;
    sElaBrowserStartupControllerCallback.elastos_BrowserStartupController_browserStartupComplete = &BrowserStartupController::BrowserStartupComplete;

    Elastos_BrowserStartupController_InitCallback((Handle32)&sElaBrowserStartupControllerCallback);
    return &sElaBrowserStartupControllerCallback;
}

static void* sPElaBrowserStartupControllerCallback = BrowserStartupController::ElaBrowserStartupControllerCallback_Init();

} // namespace Browser
} // namespace Content
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_BROWSERSTARTUPCONTROLLER_CALLBACK_DEC_HH
