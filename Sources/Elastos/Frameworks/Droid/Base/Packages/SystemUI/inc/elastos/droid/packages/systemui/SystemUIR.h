/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */
#ifndef __ELASTOS_DROID_SYSTEMUI_SYSTEMUI_R_H__
#define __ELASTOS_DROID_SYSTEMUI_SYSTEMUI_R_H__

namespace Elastos {
namespace Droid {
namespace SystemUI {

class SystemUIR {
    public: class anim {
        public: static const int hydraulic_brake_interpolator = 0x7f050000;
        public: static const int lights_out_in = 0x7f050001;
        public: static const int lights_out_out = 0x7f050002;
        public: static const int notification_buttons_in = 0x7f050003;
        public: static const int notification_buttons_out = 0x7f050004;
        public: static const int notification_dnd_off = 0x7f050005;
        public: static const int notification_dnd_on = 0x7f050006;
        public: static const int notification_icons_in = 0x7f050007;
        public: static const int notification_icons_out = 0x7f050008;
        public: static const int priority_alert_enter = 0x7f050009;
        public: static const int priority_alert_exit = 0x7f05000a;
        public: static const int recent_appear = 0x7f05000b;
        public: static const int recents_launch_from_launcher_enter = 0x7f05000c;
        public: static const int recents_launch_from_launcher_exit = 0x7f05000d;
        public: static const int recents_return_to_launcher_enter = 0x7f05000e;
        public: static const int recents_return_to_launcher_exit = 0x7f05000f;
        public: static const int search_launch_enter = 0x7f050010;
        public: static const int search_launch_exit = 0x7f050011;
        public: static const int system_in = 0x7f050012;
        public: static const int system_out = 0x7f050013;
        public: static const int wallpaper_recents_launch_from_launcher_enter = 0x7f050014;
        public: static const int wallpaper_recents_launch_from_launcher_exit = 0x7f050015;
    };
    public: class array {
        public: static const int navbar_search_direction_descriptions = 0x7f060002;
        public: static const int navbar_search_target_descriptions = 0x7f060001;
        public: static const int navbar_search_targets = 0x7f060000;
    };
    public: class attr {
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int decayTime = 0x7f01000a;
        /**  drawable to use for a swelling, glowing background on press
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int glowBackground = 0x7f010002;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int holdTime = 0x7f010009;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int insetLeft = 0x7f010004;
        /**  key code to send when pressed; if absent or 0, no key is sent
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int keyCode = 0x7f010000;
        /**  does this button generate longpress / repeat events?
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int keyRepeat = 0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int maxSize = 0x7f010008;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int minSize = 0x7f010007;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public: static const int orientation = 0x7f01000b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int recentItemLayout = 0x7f010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int rowHeight = 0x7f010005;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int text = 0x7f010003;
    };
    public: class bool_ {
        public: static const int config_dead_zone_flash = 0x7f090007;
        /**  Enable the "flip settings" panel
 Enable the "flip settings" panel
 Enable the "flip settings" panel
         */
        public: static const int config_hasFlipSettingsPanel = 0x7f09000a;
        /**  Disable the separate quick settings panel
 Enable quick settings on tablets
 Enable quick settings on tablets
         */
        public: static const int config_hasSettingsPanel = 0x7f090009;
        /**  Control whether status bar should distinguish HSPA data icon form UMTS
    data icon on devices
         */
        public: static const int config_hspa_data_distinguishable = 0x7f090002;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things)
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things)
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things)
         */
        public: static const int config_recents_interface_for_tablets = 0x7f090000;
        /**  Whether recents thumbnails should stretch in both x and y to fill their
     ImageView
 Whether recents thumbnails should stretch in both x and y to fill their
     ImageView
 Whether recents thumbnails should stretch in both x and y to fill their
     ImageView
         */
        public: static const int config_recents_thumbnail_image_fits_to_xy = 0x7f090001;
        /**  When true, show 1/2G networks as 3G.
         */
        public: static const int config_showMin3G = 0x7f090005;
        /**  Show phone (voice) signal strength instead of data in mobile RSSI.
         */
        public: static const int config_showPhoneRSSIForData = 0x7f090004;
        /**  Show rotation lock button in phone-style notification panel.
         */
        public: static const int config_showRotationLock = 0x7f090006;
        /**  Whether or not we show the number in the bar.
         */
        public: static const int config_statusBarShowNumber = 0x7f090003;
        public: static const int hasVolumeButton = 0x7f09000b;
        /**  Whether rotation lock shows up in quick settings or not
 Whether rotation lock shows up in quick settings or not
 Whether rotation lock shows up in quick settings or not
         */
        public: static const int quick_settings_show_rotation_lock = 0x7f090008;
    };
    public: class color {
        public: static const int notification_list_shadow_top = 0x7f080002;
        public: static const int notification_panel_scrim_color = 0x7f080003;
        public: static const int notification_panel_solid_background = 0x7f080000;
        public: static const int status_bar_recents_app_label_color = 0x7f080001;
    };
    public: class dimen {
        public: static const int blinds_pop_threshold = 0x7f0c0041;
        /**  Height of the carrier/wifi name label
         */
        public: static const int carrier_label_height = 0x7f0c003c;
        /**  Height of the draggable handle at the bottom of the phone notification panel
         */
        public: static const int close_handle_height = 0x7f0c0033;
        /**  Amount of close_handle that will NOT overlap the notification list
         */
        public: static const int close_handle_underlap = 0x7f0c0034;
        /**  Initial acceleration of an collapse animation after fling
         */
        public: static const int collapse_accel = 0x7f0c002a;
        /**  Minimum fraction of the display a gesture must travel, at any velocity, to qualify as a
         collapse request
         */
        public: static const int collapse_min_display_fraction = 0x7f0c0027;
        /**  Initial acceleration of an expand animation after fling
         */
        public: static const int expand_accel = 0x7f0c0029;
        /**  Minimum fraction of the display a gesture must travel to qualify as an expand request
         */
        public: static const int expand_min_display_fraction = 0x7f0c0028;
        /**  Minimum final velocity of gestures interpreted as collapse requests
         */
        public: static const int fling_collapse_min_velocity = 0x7f0c0023;
        /**  Minimum final velocity of gestures interpreted as expand requests
         */
        public: static const int fling_expand_min_velocity = 0x7f0c0022;
        /**  Cap on overall resulting fling speed (s^-1)
         */
        public: static const int fling_gesture_max_output_velocity = 0x7f0c0025;
        /**  Cap on contribution of x dimension of gesture to overall velocity
         */
        public: static const int fling_gesture_max_x_velocity = 0x7f0c0024;
        /**  Minimum distance a fling must travel (anti-jitter)
         */
        public: static const int fling_gesture_min_dist = 0x7f0c0026;
        /**  The padding on the global screenshot background image
         */
        public: static const int global_screenshot_bg_padding = 0x7f0c002b;
        /**  Diameter of outer shape drawable shown in navbar search
 Diameter of outer shape drawable shown in navbar search
 Diameter of outer shape drawable shown in navbar search
         */
        public: static const int navbar_search_outerring_diameter = 0x7f0c002f;
        /**  Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value
 Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value.
 Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value.
         */
        public: static const int navbar_search_outerring_radius = 0x7f0c0030;
        /**  Height of search panel including navigation bar height
 Height of search panel including navigation bar height
 Height of search panel including navigation bar height
         */
        public: static const int navbar_search_panel_height = 0x7f0c0032;
        /**  Default distance beyond which snaps to the matching target
         */
        public: static const int navbar_search_snap_margin = 0x7f0c002e;
        /**  Threshold for swipe-up gesture to activate search dialog
         */
        public: static const int navbar_search_up_threshhold = 0x7f0c0031;
        /**  thickness (height) of the dead zone at the top of the navigation bar,
         reducing false presses on navbar buttons; approx 2mm
         */
        public: static const int navigation_bar_deadzone_size = 0x7f0c0015;
        /**  size of the dead zone when touches have recently occurred elsewhere on screen
         */
        public: static const int navigation_bar_deadzone_size_max = 0x7f0c0016;
        /**  thickness (height) of the navigation bar on phones that require it
 thickness (width) of the navigation bar on phones that require it
         */
        public: static const int navigation_bar_size = 0x7f0c0014;
        /**  The width of the view containing non-menu status bar icons
         */
        public: static const int navigation_key_width = 0x7f0c002c;
        /**  The width of the view containing the menu status bar icon
         */
        public: static const int navigation_menu_key_width = 0x7f0c002d;
        /**  half the distance between notifications in the panel
         */
        public: static const int notification_divider_height = 0x7f0c001f;
        /**  Height of a large notification in the status bar
         */
        public: static const int notification_max_height = 0x7f0c0019;
        /**  Height of a small notification in the status bar
         */
        public: static const int notification_min_height = 0x7f0c0018;
        /**  Height of the notification panel header bar
         */
        public: static const int notification_panel_header_height = 0x7f0c0035;
        /**  Extra space above the clock in the panel
         */
        public: static const int notification_panel_header_padding_top = 0x7f0c0037;
        /**  Layout parameters for the notification panel
 Layout parameters for the notification panel
 Layout parameters for the notification panel
 Layout parameters for the notification panel
 Layout parameters for the notification panel
         */
        public: static const int notification_panel_margin_bottom = 0x7f0c0038;
        public: static const int notification_panel_margin_left = 0x7f0c0039;
        /**  The width of the notification panel window
 <dimen name="notification_panel_width">512dp</dimen>
 The minimum height of the notification panel window
 The minimum height of the notification panel window
         */
        public: static const int notification_panel_min_height = 0x7f0c004b;
        /**  Minimum fraction of the screen that should be taken up by the notification panel.
         Not used at this screen size.
 Minimum fraction of the screen that should be taken up by the notification panel.
 Minimum fraction of the screen that should be taken up by the notification panel.
         */
        public: static const int notification_panel_min_height_frac = 0x7f0c0040;
        /**  Extra space above the panel
         */
        public: static const int notification_panel_padding_top = 0x7f0c0036;
        /**  The width of the notification panel window: 446 + 16 + 16 (padding in the bg drawable)
 The width of the notification panel window: 446 + 16 + 16 (padding in the bg drawable)
 The width of the notification panel window
         */
        public: static const int notification_panel_width = 0x7f0c004e;
        /**  Height of a large notification in the status bar plus glow, padding, etc
         */
        public: static const int notification_row_max_height = 0x7f0c001b;
        /**  Height of a small notification in the status bar plus glow, padding, etc
         */
        public: static const int notification_row_min_height = 0x7f0c001a;
        /**  ========================================
 The following resources were recently moved from sw600dp; there may
         be situations where they don't sync up perfectly with
         PhoneStatusBar/TabletStatusBar.
 ========================================
 The width of the ticker, including the icon
 ========================================
 The following resources were recently moved from sw600dp; there may
         be situations where they don't sync up perfectly with
         PhoneStatusBar/TabletStatusBar.
 ========================================
 The width of the ticker, including the icon
         */
        public: static const int notification_ticker_width = 0x7f0c0049;
        /**  The distance you can pull a notification before it pops open
         */
        public: static const int one_finger_pop_limit = 0x7f0c003d;
        /**  Bottom margin (from display edge) for status bar panels
 Bottom margin (from display edge) for status bar panels
         */
        public: static const int panel_float = 0x7f0c004c;
        /**  How far to slide the panel out when you touch it
 For phones, this is close_handle_height + header_height
 How far to slide the panel out when you touch it
 On tablets this is just the close_handle_height
 How far to slide the panel out when you touch it
 On tablets this is just the close_handle_height
         */
        public: static const int peek_height = 0x7f0c0043;
        /**  Amount to offset bottom of notification peek window from top of status bar.
         */
        public: static const int peek_window_y_offset = 0x7f0c0013;
        /**  The size of the gesture span needed to activate the "pull" notification expansion
         */
        public: static const int pull_span_min = 0x7f0c0042;
        /**  The padding between each tile within the QuickSettings layout
         */
        public: static const int quick_settings_cell_gap = 0x7f0c003f;
        /**  The fixed height of each tile
 The fixed height of each tile
 The fixed height of each tile
 The fixed height of each tile
 The fixed height of each tile
         */
        public: static const int quick_settings_cell_height = 0x7f0c003e;
        /**  Initial velocity of the shade when collapsing on its own
         */
        public: static const int self_collapse_velocity = 0x7f0c0021;
        /**  Notification drawer tuning parameters (phone UI)
 Initial velocity of the shade when expanding on its own
         */
        public: static const int self_expand_velocity = 0x7f0c0020;
        /**  Fraction of the status bar that, when dragged, will produce the quick settings panel
         instead of the notification panel. See also @dimen/settings_panel_dragzone_min.
         If zero, the settings panel will not be directly draggable from the status bar.
 On tablet-sized devices, we allocate the rightmost third(ish) of the draggable status bar
         to quick settings.
 On tablet-sized devices, we allocate the rightmost third(ish) of the draggable status bar
         to quick settings.
         */
        public: static const int settings_panel_dragzone_fraction = 0x7f0c003a;
        /**  Quick settings dragzone, if used, should be at least this big (may be zero).
         */
        public: static const int settings_panel_dragzone_min = 0x7f0c003b;
        /**  Margin at the edge of the screen to ignore touch events for in the windowshade.
         */
        public: static const int status_bar_edge_ignore = 0x7f0c0000;
        /**  opacity at which Notification icons will be drawn in the status bar
         */
        public: static const int status_bar_icon_drawing_alpha = 0x7f0c001d;
        /**  size at which Notification icons will be drawn in the status bar
         */
        public: static const int status_bar_icon_drawing_size = 0x7f0c001c;
        /**  gap on either side of status bar notification icons
 gap on either side of status bar notification icons
 gap on either side of status bar notification icons
 gap on either side of status bar notification icons
         */
        public: static const int status_bar_icon_padding = 0x7f0c001e;
        /**  Height of notification icons in the status bar
         */
        public: static const int status_bar_icon_size = 0x7f0c0017;
        /**  Status bar panel bottom offset (height of status bar - overlap)
 Status bar panel bottom offset (height of status bar - overlap)
         */
        public: static const int status_bar_panel_bottom_offset = 0x7f0c004a;
        /**  Size of application description text
 Size of application description text
 Size of application description text
         */
        public: static const int status_bar_recents_app_description_text_size = 0x7f0c0007;
        /**  Where to place the app icon over the thumbnail
 Where to place the app icon over the thumbnail
 Where to place the app icon over the thumbnail
 Where to place the app icon over the thumbnail
         */
        public: static const int status_bar_recents_app_icon_left_margin = 0x7f0c0011;
        /**  Upper height limit for application icon
 Upper height limit for application icon
 Upper height limit for application icon
         */
        public: static const int status_bar_recents_app_icon_max_height = 0x7f0c0002;
        /**  Recent Applications parameters
 Upper width limit for application icon
 Upper width limit for application icon
 Upper width limit for application icon
         */
        public: static const int status_bar_recents_app_icon_max_width = 0x7f0c0001;
        public: static const int status_bar_recents_app_icon_top_margin = 0x7f0c0012;
        /**  When recents first appears, how far the icon and label of the primary activity
         travel
         */
        public: static const int status_bar_recents_app_icon_translate_distance = 0x7f0c0010;
        /**  Left margin of application label text
 Left margin of application label text
 Left margin for application label
 Left margin for application label
         */
        public: static const int status_bar_recents_app_label_left_margin = 0x7f0c000e;
        /**  Size of application label text
 Size of application label text
 Size of application label text
         */
        public: static const int status_bar_recents_app_label_text_size = 0x7f0c0006;
        /**  Width of application label text
 Width of application label text
 Width of application label text
 Recent Applications parameters
 Recent Applications parameters
 Width of application label text
         */
        public: static const int status_bar_recents_app_label_width = 0x7f0c000d;
        /**  Padding between recents items
 Padding between recents items
         */
        public: static const int status_bar_recents_item_padding = 0x7f0c000f;
        /**  Margin between recents container and glow on the right
 Margin between recents container and glow on the right
         */
        public: static const int status_bar_recents_right_glow_margin = 0x7f0c000a;
        /**  Size of fading edge for scrolling
 Size of fading edge for scrolling
 Size of fading edge for scrolling
         */
        public: static const int status_bar_recents_scroll_fading_edge_length = 0x7f0c0009;
        /**  Padding for text descriptions
 Padding for text descriptions
 Padding for text descriptions
 Padding for text descriptions
         */
        public: static const int status_bar_recents_text_description_padding = 0x7f0c000c;
        /**  Size of fading edge for text
 Size of fading edge for text
 Size of fading edge for text
         */
        public: static const int status_bar_recents_text_fading_edge_length = 0x7f0c0008;
        public: static const int status_bar_recents_thumbnail_bg_padding = 0x7f0c0005;
        public: static const int status_bar_recents_thumbnail_height = 0x7f0c0004;
        /**  How far the thumbnail for a recent app appears from left edge
 Recent Applications parameters
 How far the thumbnail for a recent app appears from left edge
 Recent Applications parameters
 How far the thumbnail for a recent app appears from left edge
 Recent Applications parameters
 How far the thumbnail for a recent app appears from left edge
         */
        public: static const int status_bar_recents_thumbnail_left_margin = 0x7f0c000b;
        /**  How far the thumbnail for a recent app appears from top edge
         */
        public: static const int status_bar_recents_thumbnail_top_margin = 0x7f0c0044;
        /**  Size of application thumbnail
 Size of application thumbnail
 Size of application thumbnail
 Size of application icon
         */
        public: static const int status_bar_recents_thumbnail_width = 0x7f0c0003;
        /**  Width of recents panel
 Width of recents panel
         */
        public: static const int status_bar_recents_width = 0x7f0c004d;
        /**  opacity at which Notification icons will be drawn in the status bar
 opacity at which Notification icons will be drawn in the status bar
         */
        public: static const int system_bar_icon_drawing_alpha = 0x7f0c0046;
        /**  size at which Notification icons will be drawn in the status bar
 size at which Notification icons will be drawn in the status bar
         */
        public: static const int system_bar_icon_drawing_size = 0x7f0c0045;
        /**  The width of the view containing non-menu status bar icons
 The width of the view containing non-menu status bar icons
         */
        public: static const int system_bar_navigation_key_width = 0x7f0c0047;
        /**  The width of the view containing the menu status bar icon
 The width of the view containing the menu status bar icon
         */
        public: static const int system_bar_navigation_menu_key_width = 0x7f0c0048;
    };
    public: class drawable {
        public: static const int alert_bar_background = 0x7f020000;
        public: static const int alert_bar_background_normal = 0x7f020001;
        public: static const int alert_bar_background_pressed = 0x7f020002;
        public: static const int arrow_dashed = 0x7f020003;
        public: static const int battery_low_battery = 0x7f020004;
        public: static const int bottom_divider_glow = 0x7f020005;
        public: static const int btn_cling_normal = 0x7f020006;
        public: static const int btn_cling_pressed = 0x7f020007;
        public: static const int btn_default_small = 0x7f020008;
        public: static const int btn_default_small_normal = 0x7f020009;
        public: static const int btn_default_small_normal_disable = 0x7f02000a;
        public: static const int btn_default_small_normal_disable_focused = 0x7f02000b;
        public: static const int btn_default_small_pressed = 0x7f02000c;
        public: static const int btn_default_small_selected = 0x7f02000d;
        public: static const int bugdroid = 0x7f02000e;
        public: static const int cling_button_bg = 0x7f02000f;
        public: static const int compat_mode_help_bg = 0x7f020010;
        public: static const int compat_mode_help_diagram = 0x7f020011;
        public: static const int compat_mode_help_divider_bottom = 0x7f020012;
        public: static const int compat_mode_help_divider_top = 0x7f020013;
        public: static const int compat_mode_help_icon = 0x7f020014;
        public: static const int hd = 0x7f020015;
        public: static const int hd_off = 0x7f020016;
        public: static const int hd_on = 0x7f020017;
        public: static const int headset = 0x7f020018;
        public: static const int ic_launcher_settings = 0x7f020019;
        public: static const int ic_menu_share = 0x7f02001a;
        public: static const int ic_notification_dnd = 0x7f02001b;
        public: static const int ic_notification_open = 0x7f02001c;
        public: static const int ic_notification_overlay = 0x7f02001d;
        public: static const int ic_notifications = 0x7f02001e;
        public: static const int ic_notifications_normal = 0x7f02001f;
        public: static const int ic_notify_button_bg = 0x7f020020;
        public: static const int ic_notify_clear = 0x7f020021;
        public: static const int ic_notify_clear_normal = 0x7f020022;
        public: static const int ic_notify_clear_pressed = 0x7f020023;
        public: static const int ic_notify_open_normal = 0x7f020024;
        public: static const int ic_notify_open_pressed = 0x7f020025;
        public: static const int ic_notify_quicksettings = 0x7f020026;
        public: static const int ic_notify_quicksettings_normal = 0x7f020027;
        public: static const int ic_notify_quicksettings_pressed = 0x7f020028;
        public: static const int ic_notify_rotation = 0x7f020029;
        public: static const int ic_notify_rotation_off_normal = 0x7f02002a;
        public: static const int ic_notify_rotation_off_pressed = 0x7f02002b;
        public: static const int ic_notify_rotation_on_normal = 0x7f02002c;
        public: static const int ic_notify_rotation_on_pressed = 0x7f02002d;
        public: static const int ic_notify_settings = 0x7f02002e;
        public: static const int ic_notify_settings_normal = 0x7f02002f;
        public: static const int ic_notify_settings_pressed = 0x7f020030;
        public: static const int ic_qs_airplane_off = 0x7f020031;
        public: static const int ic_qs_airplane_on = 0x7f020032;
        public: static const int ic_qs_alarm_on = 0x7f020033;
        public: static const int ic_qs_auto_rotate = 0x7f020034;
        public: static const int ic_qs_battery = 0x7f020035;
        public: static const int ic_qs_battery_0 = 0x7f020036;
        public: static const int ic_qs_battery_100 = 0x7f020037;
        public: static const int ic_qs_battery_15 = 0x7f020038;
        public: static const int ic_qs_battery_28 = 0x7f020039;
        public: static const int ic_qs_battery_43 = 0x7f02003a;
        public: static const int ic_qs_battery_57 = 0x7f02003b;
        public: static const int ic_qs_battery_71 = 0x7f02003c;
        public: static const int ic_qs_battery_85 = 0x7f02003d;
        public: static const int ic_qs_battery_bang_orange = 0x7f02003e;
        public: static const int ic_qs_battery_bang_red = 0x7f02003f;
        public: static const int ic_qs_battery_bang_white = 0x7f020040;
        public: static const int ic_qs_battery_bolt = 0x7f020041;
        public: static const int ic_qs_battery_charge_0 = 0x7f020042;
        public: static const int ic_qs_battery_charge_100 = 0x7f020043;
        public: static const int ic_qs_battery_charge_15 = 0x7f020044;
        public: static const int ic_qs_battery_charge_28 = 0x7f020045;
        public: static const int ic_qs_battery_charge_43 = 0x7f020046;
        public: static const int ic_qs_battery_charge_57 = 0x7f020047;
        public: static const int ic_qs_battery_charge_71 = 0x7f020048;
        public: static const int ic_qs_battery_charge_85 = 0x7f020049;
        public: static const int ic_qs_battery_unknown = 0x7f02004a;
        public: static const int ic_qs_bluetooth_not_connected = 0x7f02004b;
        public: static const int ic_qs_bluetooth_off = 0x7f02004c;
        public: static const int ic_qs_bluetooth_on = 0x7f02004d;
        public: static const int ic_qs_brightness_auto_off = 0x7f02004e;
        public: static const int ic_qs_brightness_auto_on = 0x7f02004f;
        public: static const int ic_qs_clock_circle = 0x7f020050;
        public: static const int ic_qs_clock_hour = 0x7f020051;
        public: static const int ic_qs_clock_minute = 0x7f020052;
        public: static const int ic_qs_default_user = 0x7f020053;
        public: static const int ic_qs_ime = 0x7f020054;
        public: static const int ic_qs_location = 0x7f020055;
        public: static const int ic_qs_remote_display = 0x7f020056;
        public: static const int ic_qs_remote_display_connected = 0x7f020057;
        public: static const int ic_qs_rotation_locked = 0x7f020058;
        public: static const int ic_qs_settings = 0x7f020059;
        public: static const int ic_qs_signal_0 = 0x7f02005a;
        public: static const int ic_qs_signal_1 = 0x7f02005b;
        public: static const int ic_qs_signal_1x = 0x7f02005c;
        public: static const int ic_qs_signal_2 = 0x7f02005d;
        public: static const int ic_qs_signal_3 = 0x7f02005e;
        public: static const int ic_qs_signal_3g = 0x7f02005f;
        public: static const int ic_qs_signal_4 = 0x7f020060;
        public: static const int ic_qs_signal_4g = 0x7f020061;
        public: static const int ic_qs_signal_e = 0x7f020062;
        public: static const int ic_qs_signal_full_0 = 0x7f020063;
        public: static const int ic_qs_signal_full_1 = 0x7f020064;
        public: static const int ic_qs_signal_full_1x = 0x7f020065;
        public: static const int ic_qs_signal_full_2 = 0x7f020066;
        public: static const int ic_qs_signal_full_3 = 0x7f020067;
        public: static const int ic_qs_signal_full_3g = 0x7f020068;
        public: static const int ic_qs_signal_full_4 = 0x7f020069;
        public: static const int ic_qs_signal_full_4g = 0x7f02006a;
        public: static const int ic_qs_signal_full_e = 0x7f02006b;
        public: static const int ic_qs_signal_full_g = 0x7f02006c;
        public: static const int ic_qs_signal_full_h = 0x7f02006d;
        public: static const int ic_qs_signal_full_r = 0x7f02006e;
        public: static const int ic_qs_signal_g = 0x7f02006f;
        public: static const int ic_qs_signal_h = 0x7f020070;
        public: static const int ic_qs_signal_in = 0x7f020071;
        public: static const int ic_qs_signal_inout = 0x7f020072;
        public: static const int ic_qs_signal_no_network = 0x7f020073;
        public: static const int ic_qs_signal_no_signal = 0x7f020074;
        public: static const int ic_qs_signal_out = 0x7f020075;
        public: static const int ic_qs_signal_r = 0x7f020076;
        public: static const int ic_qs_usb_device = 0x7f020077;
        public: static const int ic_qs_wifi_0 = 0x7f020078;
        public: static const int ic_qs_wifi_1 = 0x7f020079;
        public: static const int ic_qs_wifi_2 = 0x7f02007a;
        public: static const int ic_qs_wifi_3 = 0x7f02007b;
        public: static const int ic_qs_wifi_4 = 0x7f02007c;
        public: static const int ic_qs_wifi_full_1 = 0x7f02007d;
        public: static const int ic_qs_wifi_full_2 = 0x7f02007e;
        public: static const int ic_qs_wifi_full_3 = 0x7f02007f;
        public: static const int ic_qs_wifi_full_4 = 0x7f020080;
        public: static const int ic_qs_wifi_in = 0x7f020081;
        public: static const int ic_qs_wifi_inout = 0x7f020082;
        public: static const int ic_qs_wifi_no_network = 0x7f020083;
        public: static const int ic_qs_wifi_not_connected = 0x7f020084;
        public: static const int ic_qs_wifi_out = 0x7f020085;
        public: static const int ic_sysbar_airplane_on = 0x7f020086;
        public: static const int ic_sysbar_alarm = 0x7f020087;
        public: static const int ic_sysbar_back = 0x7f020088;
        public: static const int ic_sysbar_back_ime = 0x7f020089;
        public: static const int ic_sysbar_back_land = 0x7f02008a;
        public: static const int ic_sysbar_battery_0 = 0x7f02008b;
        public: static const int ic_sysbar_battery_100 = 0x7f02008c;
        public: static const int ic_sysbar_battery_15 = 0x7f02008d;
        public: static const int ic_sysbar_battery_28 = 0x7f02008e;
        public: static const int ic_sysbar_battery_43 = 0x7f02008f;
        public: static const int ic_sysbar_battery_57 = 0x7f020090;
        public: static const int ic_sysbar_battery_71 = 0x7f020091;
        public: static const int ic_sysbar_battery_85 = 0x7f020092;
        public: static const int ic_sysbar_battery_charge_anim0 = 0x7f020093;
        public: static const int ic_sysbar_battery_charge_anim100 = 0x7f020094;
        public: static const int ic_sysbar_battery_charge_anim15 = 0x7f020095;
        public: static const int ic_sysbar_battery_charge_anim28 = 0x7f020096;
        public: static const int ic_sysbar_battery_charge_anim43 = 0x7f020097;
        public: static const int ic_sysbar_battery_charge_anim57 = 0x7f020098;
        public: static const int ic_sysbar_battery_charge_anim71 = 0x7f020099;
        public: static const int ic_sysbar_battery_charge_anim85 = 0x7f02009a;
        public: static const int ic_sysbar_brightness = 0x7f02009b;
        public: static const int ic_sysbar_data_bluetooth = 0x7f02009c;
        public: static const int ic_sysbar_data_bluetooth_connected = 0x7f02009d;
        public: static const int ic_sysbar_data_connected_1x = 0x7f02009e;
        public: static const int ic_sysbar_data_connected_3g = 0x7f02009f;
        public: static const int ic_sysbar_data_connected_4g = 0x7f0200a0;
        public: static const int ic_sysbar_data_connected_e = 0x7f0200a1;
        public: static const int ic_sysbar_data_connected_g = 0x7f0200a2;
        public: static const int ic_sysbar_data_connected_h = 0x7f0200a3;
        public: static const int ic_sysbar_data_connected_roam = 0x7f0200a4;
        public: static const int ic_sysbar_data_fully_connected_1x = 0x7f0200a5;
        public: static const int ic_sysbar_data_fully_connected_3g = 0x7f0200a6;
        public: static const int ic_sysbar_data_fully_connected_4g = 0x7f0200a7;
        public: static const int ic_sysbar_data_fully_connected_e = 0x7f0200a8;
        public: static const int ic_sysbar_data_fully_connected_g = 0x7f0200a9;
        public: static const int ic_sysbar_data_fully_connected_h = 0x7f0200aa;
        public: static const int ic_sysbar_highlight = 0x7f0200ab;
        public: static const int ic_sysbar_highlight_land = 0x7f0200ac;
        public: static const int ic_sysbar_highlight_menu = 0x7f0200ad;
        public: static const int ic_sysbar_highlight_menu_land = 0x7f0200ae;
        public: static const int ic_sysbar_home = 0x7f0200af;
        public: static const int ic_sysbar_home_land = 0x7f0200b0;
        public: static const int ic_sysbar_ime = 0x7f0200b1;
        public: static const int ic_sysbar_ime_default = 0x7f0200b2;
        public: static const int ic_sysbar_ime_pressed = 0x7f0200b3;
        public: static const int ic_sysbar_lights_out_dot_large = 0x7f0200b4;
        public: static const int ic_sysbar_lights_out_dot_small = 0x7f0200b5;
        public: static const int ic_sysbar_menu = 0x7f0200b6;
        public: static const int ic_sysbar_menu_land = 0x7f0200b7;
        public: static const int ic_sysbar_quicksettings = 0x7f0200b8;
        public: static const int ic_sysbar_recent = 0x7f0200b9;
        public: static const int ic_sysbar_recent_land = 0x7f0200ba;
        public: static const int ic_sysbar_rotate_on = 0x7f0200bb;
        public: static const int ic_sysbar_screenshot = 0x7f0200bc;
        public: static const int ic_sysbar_screenshot_land = 0x7f0200bd;
        public: static const int ic_sysbar_signal_0 = 0x7f0200be;
        public: static const int ic_sysbar_signal_0_fully = 0x7f0200bf;
        public: static const int ic_sysbar_signal_1 = 0x7f0200c0;
        public: static const int ic_sysbar_signal_1_fully = 0x7f0200c1;
        public: static const int ic_sysbar_signal_2 = 0x7f0200c2;
        public: static const int ic_sysbar_signal_2_fully = 0x7f0200c3;
        public: static const int ic_sysbar_signal_3 = 0x7f0200c4;
        public: static const int ic_sysbar_signal_3_fully = 0x7f0200c5;
        public: static const int ic_sysbar_signal_4 = 0x7f0200c6;
        public: static const int ic_sysbar_signal_4_fully = 0x7f0200c7;
        public: static const int ic_sysbar_signal_flightmode = 0x7f0200c8;
        public: static const int ic_sysbar_signal_in = 0x7f0200c9;
        public: static const int ic_sysbar_signal_inout = 0x7f0200ca;
        public: static const int ic_sysbar_signal_null = 0x7f0200cb;
        public: static const int ic_sysbar_signal_out = 0x7f0200cc;
        public: static const int ic_sysbar_volume_down = 0x7f0200cd;
        public: static const int ic_sysbar_volume_down_land = 0x7f0200ce;
        public: static const int ic_sysbar_volume_up = 0x7f0200cf;
        public: static const int ic_sysbar_volume_up_land = 0x7f0200d0;
        public: static const int ic_sysbar_wifi_in = 0x7f0200d1;
        public: static const int ic_sysbar_wifi_inout = 0x7f0200d2;
        public: static const int ic_sysbar_wifi_on = 0x7f0200d3;
        public: static const int ic_sysbar_wifi_out = 0x7f0200d4;
        public: static const int ic_sysbar_wifi_signal_0 = 0x7f0200d5;
        public: static const int ic_sysbar_wifi_signal_1 = 0x7f0200d6;
        public: static const int ic_sysbar_wifi_signal_1_fully = 0x7f0200d7;
        public: static const int ic_sysbar_wifi_signal_2 = 0x7f0200d8;
        public: static const int ic_sysbar_wifi_signal_2_fully = 0x7f0200d9;
        public: static const int ic_sysbar_wifi_signal_3 = 0x7f0200da;
        public: static const int ic_sysbar_wifi_signal_3_fully = 0x7f0200db;
        public: static const int ic_sysbar_wifi_signal_4 = 0x7f0200dc;
        public: static const int ic_sysbar_wifi_signal_4_fully = 0x7f0200dd;
        public: static const int ic_sysbar_wifi_signal_null = 0x7f0200de;
        public: static const int ic_sysbar_zoom = 0x7f0200df;
        public: static const int ic_sysbar_zoom_default = 0x7f0200e0;
        public: static const int ic_sysbar_zoom_pressed = 0x7f0200e1;
        public: static const int icon = 0x7f0200e2;
        public: static const int intruder_bg_pressed = 0x7f020176;
        public: static const int intruder_row_bg = 0x7f0200e3;
        public: static const int intruder_window_bg = 0x7f0200e4;
        public: static const int jandycane = 0x7f0200e5;
        public: static const int navbar_search_outerring = 0x7f0200e6;
        public: static const int notification_header_bg = 0x7f020177;
        /**  the darkening filter applied to notifications
         */
        public: static const int notification_icon_area_smoke = 0x7f020179;
        public: static const int notification_item_background_legacy_color = 0x7f020175;
        public: static const int notification_list_shadow = 0x7f0200e7;
        public: static const int notification_number_text_color = 0x7f02016f;
        public: static const int notification_panel_bg = 0x7f0200e8;
        public: static const int notification_row_legacy_bg = 0x7f0200e9;
        public: static const int notify_item_glow_bottom = 0x7f0200ea;
        public: static const int notify_panel_clock_bg = 0x7f0200eb;
        public: static const int notify_panel_clock_bg_normal = 0x7f0200ec;
        public: static const int notify_panel_clock_bg_pressed = 0x7f0200ed;
        public: static const int pocket_drag_bg = 0x7f0200ee;
        public: static const int pocket_drag_pattern = 0x7f0200ef;
        public: static const int qs_coming_soon = 0x7f0200f0;
        public: static const int qs_sys_battery = 0x7f0200f1;
        public: static const int qs_sys_battery_charging = 0x7f0200f2;
        public: static const int qs_tile_background = 0x7f0200f3;
        public: static const int recents_bg_protect_tile = 0x7f0200f4;
        public: static const int recents_blue_glow = 0x7f0200f5;
        public: static const int recents_callout_line = 0x7f020174;
        public: static const int recents_thumbnail_bg = 0x7f0200f6;
        public: static const int recents_thumbnail_bg_dragging = 0x7f0200f7;
        public: static const int recents_thumbnail_bg_normal = 0x7f0200f8;
        public: static const int recents_thumbnail_bg_press = 0x7f0200f9;
        public: static const int recents_thumbnail_fg = 0x7f0200fa;
        public: static const int recents_thumbnail_no_press = 0x7f0200fb;
        public: static const int redbean0 = 0x7f0200fc;
        public: static const int redbean1 = 0x7f0200fd;
        public: static const int redbean2 = 0x7f0200fe;
        public: static const int redbeandroid = 0x7f0200ff;
        public: static const int screenshot_panel = 0x7f020100;
        public: static const int search_light = 0x7f020101;
        public: static const int stat_notify_image = 0x7f020102;
        public: static const int stat_notify_image_error = 0x7f020103;
        public: static const int stat_notify_more = 0x7f020104;
        public: static const int stat_sys_alarm = 0x7f020105;
        public: static const int stat_sys_battery = 0x7f020106;
        public: static const int stat_sys_battery_0 = 0x7f020107;
        public: static const int stat_sys_battery_100 = 0x7f020108;
        public: static const int stat_sys_battery_15 = 0x7f020109;
        public: static const int stat_sys_battery_28 = 0x7f02010a;
        public: static const int stat_sys_battery_43 = 0x7f02010b;
        public: static const int stat_sys_battery_57 = 0x7f02010c;
        public: static const int stat_sys_battery_71 = 0x7f02010d;
        public: static const int stat_sys_battery_85 = 0x7f02010e;
        public: static const int stat_sys_battery_charge = 0x7f02010f;
        public: static const int stat_sys_battery_charge_anim0 = 0x7f020110;
        public: static const int stat_sys_battery_charge_anim100 = 0x7f020111;
        public: static const int stat_sys_battery_charge_anim15 = 0x7f020112;
        public: static const int stat_sys_battery_charge_anim28 = 0x7f020113;
        public: static const int stat_sys_battery_charge_anim43 = 0x7f020114;
        public: static const int stat_sys_battery_charge_anim57 = 0x7f020115;
        public: static const int stat_sys_battery_charge_anim71 = 0x7f020116;
        public: static const int stat_sys_battery_charge_anim85 = 0x7f020117;
        public: static const int stat_sys_data_bluetooth = 0x7f020118;
        public: static const int stat_sys_data_bluetooth_connected = 0x7f020119;
        public: static const int stat_sys_data_connected_1x = 0x7f02011a;
        public: static const int stat_sys_data_connected_3g = 0x7f02011b;
        public: static const int stat_sys_data_connected_4g = 0x7f02011c;
        public: static const int stat_sys_data_connected_e = 0x7f02011d;
        public: static const int stat_sys_data_connected_g = 0x7f02011e;
        public: static const int stat_sys_data_connected_h = 0x7f02011f;
        public: static const int stat_sys_data_connected_roam = 0x7f020120;
        public: static const int stat_sys_data_fully_connected_1x = 0x7f020121;
        public: static const int stat_sys_data_fully_connected_3g = 0x7f020122;
        public: static const int stat_sys_data_fully_connected_4g = 0x7f020123;
        public: static const int stat_sys_data_fully_connected_e = 0x7f020124;
        public: static const int stat_sys_data_fully_connected_g = 0x7f020125;
        public: static const int stat_sys_data_fully_connected_h = 0x7f020126;
        public: static const int stat_sys_data_wimax_signal_0 = 0x7f020127;
        public: static const int stat_sys_data_wimax_signal_0_fully = 0x7f020128;
        public: static const int stat_sys_data_wimax_signal_1 = 0x7f020129;
        public: static const int stat_sys_data_wimax_signal_1_fully = 0x7f02012a;
        public: static const int stat_sys_data_wimax_signal_2 = 0x7f02012b;
        public: static const int stat_sys_data_wimax_signal_2_fully = 0x7f02012c;
        public: static const int stat_sys_data_wimax_signal_3 = 0x7f02012d;
        public: static const int stat_sys_data_wimax_signal_3_fully = 0x7f02012e;
        public: static const int stat_sys_data_wimax_signal_disconnected = 0x7f02012f;
        public: static const int stat_sys_data_wimax_signal_idle = 0x7f020130;
        public: static const int stat_sys_ethernet_error = 0x7f020131;
        public: static const int stat_sys_ethernet_established = 0x7f020132;
        public: static const int stat_sys_gps_acquiring = 0x7f020133;
        public: static const int stat_sys_gps_acquiring_anim = 0x7f020134;
        public: static const int stat_sys_no_sim = 0x7f020135;
        public: static const int stat_sys_ringer_silent = 0x7f020136;
        public: static const int stat_sys_ringer_vibrate = 0x7f020137;
        public: static const int stat_sys_roaming_cdma_0 = 0x7f020138;
        public: static const int stat_sys_roaming_cdma_flash = 0x7f020139;
        public: static const int stat_sys_roaming_cdma_flash_anim0 = 0x7f02013a;
        public: static const int stat_sys_roaming_cdma_flash_anim1 = 0x7f02013b;
        public: static const int stat_sys_signal_0 = 0x7f02013c;
        public: static const int stat_sys_signal_0_fully = 0x7f02013d;
        public: static const int stat_sys_signal_1 = 0x7f02013e;
        public: static const int stat_sys_signal_1_fully = 0x7f02013f;
        public: static const int stat_sys_signal_2 = 0x7f020140;
        public: static const int stat_sys_signal_2_fully = 0x7f020141;
        public: static const int stat_sys_signal_3 = 0x7f020142;
        public: static const int stat_sys_signal_3_fully = 0x7f020143;
        public: static const int stat_sys_signal_4 = 0x7f020144;
        public: static const int stat_sys_signal_4_fully = 0x7f020145;
        public: static const int stat_sys_signal_flightmode = 0x7f020146;
        public: static const int stat_sys_signal_in = 0x7f020147;
        public: static const int stat_sys_signal_inout = 0x7f020148;
        public: static const int stat_sys_signal_null = 0x7f020149;
        public: static const int stat_sys_signal_out = 0x7f02014a;
        public: static const int stat_sys_sync = 0x7f02014b;
        public: static const int stat_sys_sync_error = 0x7f02014c;
        public: static const int stat_sys_tty_mode = 0x7f02014d;
        public: static const int stat_sys_wifi_in = 0x7f02014e;
        public: static const int stat_sys_wifi_inout = 0x7f02014f;
        public: static const int stat_sys_wifi_out = 0x7f020150;
        public: static const int stat_sys_wifi_signal_0 = 0x7f020151;
        public: static const int stat_sys_wifi_signal_1 = 0x7f020152;
        public: static const int stat_sys_wifi_signal_1_fully = 0x7f020153;
        public: static const int stat_sys_wifi_signal_2 = 0x7f020154;
        public: static const int stat_sys_wifi_signal_2_fully = 0x7f020155;
        public: static const int stat_sys_wifi_signal_3 = 0x7f020156;
        public: static const int stat_sys_wifi_signal_3_fully = 0x7f020157;
        public: static const int stat_sys_wifi_signal_4 = 0x7f020158;
        public: static const int stat_sys_wifi_signal_4_fully = 0x7f020159;
        public: static const int stat_sys_wifi_signal_null = 0x7f02015a;
        public: static const int status_bar_background = 0x7f020171;
        public: static const int status_bar_bg = 0x7f02015b;
        public: static const int status_bar_bg_tile = 0x7f02015c;
        public: static const int status_bar_close = 0x7f02015d;
        public: static const int status_bar_close_off = 0x7f02015e;
        public: static const int status_bar_close_on = 0x7f02015f;
        public: static const int status_bar_expand = 0x7f020160;
        public: static const int status_bar_expand_default = 0x7f020161;
        public: static const int status_bar_expand_pressed = 0x7f020162;
        public: static const int status_bar_hr = 0x7f020163;
        public: static const int status_bar_item_background = 0x7f020164;
        public: static const int status_bar_notification_row_background_color = 0x7f020173;
        public: static const int status_bar_recents_app_thumbnail_background = 0x7f020172;
        public: static const int status_bar_recents_background = 0x7f020165;
        public: static const int status_bar_settings_slider_disabled = 0x7f020166;
        public: static const int status_bar_ticker_background = 0x7f020167;
        public: static const int status_bar_toggle_button = 0x7f020168;
        public: static const int sysbar_notification_panel_bg = 0x7f020169;
        /**  ==================== system bar only ====================
         */
        public: static const int system_bar_background = 0x7f020178;
        public: static const int system_bar_notification_header_bg = 0x7f02016a;
        public: static const int system_bar_ticker_background = 0x7f02016b;
        public: static const int ticker_background = 0x7f02016c;
        public: static const int ticker_background_color = 0x7f020170;
        public: static const int title_bar_shadow = 0x7f02016d;
        public: static const int top_divider_glow = 0x7f02016e;
    };
    public: class id {
        public: static const int ImageView = 0x7f070015;
        public: static const int adaptive = 0x7f070068;
        public: static const int airplane = 0x7f070045;
        public: static const int airplane_mode_textview = 0x7f070029;
        public: static const int alarm_textview = 0x7f07002a;
        public: static const int alt = 0x7f0700ae;
        public: static const int analog_clock = 0x7f070036;
        public: static const int app_description = 0x7f070071;
        public: static const int app_icon = 0x7f07006d;
        public: static const int app_label = 0x7f07006c;
        public: static const int app_thumbnail = 0x7f07006e;
        public: static const int app_thumbnail_image = 0x7f07006f;
        public: static const int back = 0x7f070018;
        public: static const int bar_contents = 0x7f070080;
        public: static const int bar_contents_holder = 0x7f07007f;
        public: static const int bar_shadow = 0x7f070086;
        public: static const int bar_shadow_holder = 0x7f070085;
        public: static const int battery = 0x7f070050;
        public: static const int battery_image = 0x7f07002b;
        public: static const int battery_text = 0x7f070051;
        public: static const int battery_textview = 0x7f07002c;
        public: static const int bluetooth = 0x7f0700a1;
        public: static const int bluetooth_textview = 0x7f07002d;
        public: static const int bottom = 0x7f0700c5;
        public: static const int bottom_glow = 0x7f070069;
        public: static const int brightness = 0x7f0700b9;
        public: static const int brightness_icon = 0x7f070027;
        public: static const int brightness_slider = 0x7f070028;
        public: static const int brightness_textview = 0x7f07002e;
        public: static const int button = 0x7f07000f;
        public: static const int carrier_label = 0x7f07000a;
        public: static const int clear_all_button = 0x7f07005e;
        public: static const int clock = 0x7f070052;
        public: static const int close = 0x7f0700c3;
        public: static const int compatModeButton = 0x7f07009d;
        public: static const int compat_mode_off_radio = 0x7f07008c;
        public: static const int compat_mode_on_radio = 0x7f07008d;
        public: static const int compat_mode_radio_group = 0x7f07008b;
        public: static const int content = 0x7f070067;
        public: static const int contentHolder = 0x7f070014;
        public: static const int content_frame = 0x7f0700a4;
        public: static const int content_parent = 0x7f0700a2;
        public: static const int date = 0x7f07005c;
        public: static const int datetime = 0x7f07005b;
        public: static const int deadzone = 0x7f07001e;
        public: static const int debug_info = 0x7f07006a;
        public: static const int description = 0x7f0700ac;
        public: static const int diagram = 0x7f07000c;
        public: static const int do_not_disturb = 0x7f0700ba;
        public: static const int do_not_disturb_checkbox = 0x7f0700bc;
        public: static const int do_not_disturb_icon = 0x7f0700bb;
        public: static const int dot0 = 0x7f070087;
        public: static const int dot1 = 0x7f070088;
        public: static const int dot2 = 0x7f070089;
        public: static const int dot3 = 0x7f07008a;
        public: static const int emergency_calls_only = 0x7f070057;
        public: static const int ethernet_combo = 0x7f07003e;
        public: static const int ethernet_state = 0x7f07003f;
        public: static const int expandable_tag = 0x7f070002;
        public: static const int explanation = 0x7f07000e;
        public: static const int fake_space_bar = 0x7f070083;
        public: static const int feedbackIconArea = 0x7f07009b;
        public: static const int flip_settings_stub = 0x7f070058;
        public: static const int global_screenshot = 0x7f070012;
        public: static const int global_screenshot_background = 0x7f070011;
        public: static const int global_screenshot_flash = 0x7f070013;
        public: static const int glow = 0x7f070095;
        public: static const int glow_pad_view = 0x7f070079;
        public: static const int handle = 0x7f070026;
        public: static const int hard_keyboard_section = 0x7f070096;
        public: static const int hard_keyboard_switch = 0x7f070098;
        public: static const int header = 0x7f07000b;
        public: static const int header_debug_info = 0x7f07005d;
        public: static const int home = 0x7f070019;
        public: static const int horizontal = 0x7f070000;
        public: static const int icon = 0x7f07000d;
        public: static const int icons = 0x7f07009e;
        public: static const int image = 0x7f070009;
        public: static const int imeSwitchButton = 0x7f07009c;
        public: static const int ime_settings_shortcut = 0x7f07009a;
        public: static const int ime_textview = 0x7f07002f;
        public: static const int input_method_menu_list = 0x7f070099;
        public: static const int item_icon = 0x7f070090;
        public: static const int item_radio = 0x7f07008f;
        public: static const int item_settings_icon = 0x7f070094;
        public: static const int item_subtitle = 0x7f070092;
        public: static const int item_subtype = 0x7f07008e;
        public: static const int item_title = 0x7f070091;
        public: static const int item_vertical_separator = 0x7f070093;
        public: static const int label = 0x7f07007c;
        public: static const int large_icon = 0x7f0700be;
        public: static const int latestItems = 0x7f07005a;
        public: static const int left_icon = 0x7f0700bf;
        public: static const int level_percent = 0x7f070008;
        public: static const int lights_out = 0x7f07001c;
        public: static const int listview_footer_padding = 0x7f0700b0;
        public: static const int location_textview = 0x7f070030;
        public: static const int menu = 0x7f07001b;
        public: static const int mobile_combo = 0x7f070041;
        public: static const int mobile_icon = 0x7f0700a7;
        public: static const int mobile_inout = 0x7f070044;
        public: static const int mobile_signal = 0x7f070042;
        public: static const int mobile_text = 0x7f0700a8;
        public: static const int mobile_type = 0x7f070043;
        public: static const int moreIcon = 0x7f07004a;
        public: static const int nav_buttons = 0x7f070017;
        public: static const int navigationArea = 0x7f070081;
        public: static const int network = 0x7f0700b1;
        public: static const int network_icon = 0x7f0700b2;
        public: static const int network_label = 0x7f0700b3;
        public: static const int network_text = 0x7f0700a0;
        public: static const int notificationArea = 0x7f070084;
        public: static const int notificationIcons = 0x7f07004b;
        public: static const int notificationTrigger = 0x7f07009f;
        public: static const int notification_adaptive_wrapper = 0x7f070024;
        public: static const int notification_button = 0x7f070061;
        public: static const int notification_icon_area = 0x7f070049;
        public: static const int notification_inspect_item = 0x7f0700c6;
        public: static const int notification_lights_out = 0x7f070047;
        public: static const int notification_panel = 0x7f070056;
        public: static const int notification_scroller = 0x7f0700a5;
        public: static const int number = 0x7f070064;
        public: static const int ok = 0x7f070063;
        public: static const int padding = 0x7f070006;
        public: static const int panel_holder = 0x7f07007d;
        public: static const int preview = 0x7f0700ad;
        public: static const int quick_settings_container = 0x7f070010;
        public: static const int quick_settings_stub = 0x7f07007e;
        public: static const int recent_apps = 0x7f07001a;
        public: static const int recent_inspect_item = 0x7f0700c8;
        public: static const int recent_item = 0x7f07006b;
        public: static const int recent_remove_item = 0x7f0700c7;
        public: static const int recents_bg_protect = 0x7f070073;
        public: static const int recents_callout_line = 0x7f070070;
        public: static const int recents_container = 0x7f070074;
        public: static const int recents_linear_layout = 0x7f070075;
        public: static const int recents_no_apps = 0x7f070076;
        public: static const int recents_root = 0x7f070072;
        public: static const int right_icon = 0x7f0700c1;
        public: static const int rot0 = 0x7f070016;
        public: static const int rot270 = 0x7f070020;
        public: static const int rot90 = 0x7f07001f;
        public: static const int rotate = 0x7f0700b4;
        public: static const int rotate_checkbox = 0x7f0700b7;
        public: static const int rotate_icon = 0x7f0700b5;
        public: static const int rotate_label = 0x7f0700b6;
        public: static const int rotate_separator = 0x7f0700b8;
        public: static const int rotation_lock_textview = 0x7f070031;
        public: static const int rssi_image = 0x7f070032;
        public: static const int rssi_overlay_image = 0x7f070033;
        public: static const int rssi_textview = 0x7f070034;
        public: static const int screen_shot = 0x7f070022;
        public: static const int screenshot = 0x7f070082;
        public: static const int scroll = 0x7f070059;
        public: static const int search_bg_protect = 0x7f070078;
        public: static const int search_light = 0x7f07001d;
        public: static const int search_panel_container = 0x7f070077;
        public: static const int settings = 0x7f0700bd;
        public: static const int settings_button = 0x7f070060;
        public: static const int settings_button_holder = 0x7f07005f;
        public: static const int settings_panel = 0x7f070025;
        public: static const int settings_tileview = 0x7f070035;
        public: static const int signal_battery_cluster = 0x7f07004e;
        public: static const int signal_cluster = 0x7f07004f;
        public: static const int slider = 0x7f07007b;
        public: static const int spacer = 0x7f070040;
        public: static const int statusIcons = 0x7f07004d;
        public: static const int status_bar = 0x7f070046;
        public: static const int status_bar_cling = 0x7f070062;
        public: static const int status_bar_cling_stub = 0x7f070005;
        public: static const int status_bar_contents = 0x7f070048;
        public: static const int status_bar_touch_proxy = 0x7f0700af;
        public: static const int subtitle = 0x7f070007;
        public: static const int system_bar_notification_panel_bottom_space = 0x7f0700a3;
        public: static const int system_icon_area = 0x7f07004c;
        public: static const int text = 0x7f0700c0;
        public: static const int ticker = 0x7f070053;
        public: static const int tickerIcon = 0x7f070054;
        public: static const int tickerText = 0x7f070055;
        public: static const int ticker_expanded = 0x7f0700c2;
        public: static const int title = 0x7f0700c4;
        public: static const int title_area = 0x7f0700a6;
        public: static const int toggle = 0x7f07007a;
        public: static const int top_glow = 0x7f070065;
        public: static const int use_physical_keyboard_label = 0x7f070097;
        public: static const int user_expanded_tag = 0x7f070003;
        public: static const int user_imageview = 0x7f070037;
        public: static const int user_lock_tag = 0x7f070004;
        public: static const int user_textview = 0x7f070038;
        public: static const int vertical = 0x7f070001;
        public: static const int veto = 0x7f070066;
        public: static const int volume_down = 0x7f070021;
        public: static const int volume_up = 0x7f070023;
        public: static const int wifi_combo = 0x7f07003b;
        public: static const int wifi_direction = 0x7f0700aa;
        public: static const int wifi_display_textview = 0x7f07003a;
        public: static const int wifi_icon = 0x7f0700a9;
        public: static const int wifi_inout = 0x7f07003d;
        public: static const int wifi_signal = 0x7f07003c;
        public: static const int wifi_text = 0x7f0700ab;
        public: static const int wifi_textview = 0x7f070039;
    };
    public: class integer {
        public: static const int blinds_pop_duration_ms = 0x7f0b000d;
        /**  How many icons may be shown at once in the system bar. Includes any
         slots that may be reused for things like IME control.
         */
        public: static const int config_maxNotificationIcons = 0x7f0b0000;
        /**  Min alpha % that recent items will fade to while being dismissed
 Min alpha % that recent items will fade to while being dismissed
 Min alpha % that recent items will fade to while being dismissed
         */
        public: static const int config_recent_item_min_alpha = 0x7f0b0008;
        /**  Vibration duration for MultiWaveView used in SearchPanelView
         */
        public: static const int config_search_panel_view_vibration_duration = 0x7f0b0003;
        /**  Amount of time to hold off before showing the search panel when the user presses home
         */
        public: static const int config_show_search_delay = 0x7f0b0001;
        /**  Vibration duration for MultiWaveView used in SearchPanelView
         */
        public: static const int config_vibration_duration = 0x7f0b0002;
        public: static const int navigation_bar_deadzone_decay = 0x7f0b0007;
        /**  decay duration (from size_max -> size), in ms
         */
        public: static const int navigation_bar_deadzone_hold = 0x7f0b0006;
        /**  Gravity for the notification & quick settings panels
 0x37 = fill_horizontal|top
 Gravity for the notification & quick settings panels
 0x33 = left|top ; 0x35 = right|top
 Gravity for the notification & quick settings panels
 0x33 = left|top ; 0x35 = right|top
         */
        public: static const int notification_panel_layout_gravity = 0x7f0b000f;
        /**  The length of the vibration when the notification pops open.
         */
        public: static const int one_finger_pop_duration_ms = 0x7f0b0004;
        public: static const int quick_settings_brightness_dialog_long_timeout = 0x7f0b000c;
        /**  Timeouts for brightness dialog to disappear
         */
        public: static const int quick_settings_brightness_dialog_short_timeout = 0x7f0b000b;
        /**  The number of columns in the QuickSettings
 The number of columns in the QuickSettings
 The number of columns in the QuickSettings
 The number of columns in the QuickSettings
         */
        public: static const int quick_settings_num_columns = 0x7f0b0009;
        /**  The number of columns that the top level tiles span in the QuickSettings
 The number of columns that the top level tiles span in the QuickSettings
 The number of columns that the top level tiles span in the QuickSettings
 The number of columns that the top level tiles span in the QuickSettings
         */
        public: static const int quick_settings_user_time_settings_tile_span = 0x7f0b000a;
        public: static const int settings_panel_layout_gravity = 0x7f0b0010;
        public: static const int status_bar_config_maxNotificationIcons = 0x7f0b000e;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things)
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things)
         */
        public: static const int status_bar_recents_bg_gradient_degrees = 0x7f0b0005;
    };
    public: class layout {
        public: static const int battery_low = 0x7f040000;
        public: static const int carrier_label = 0x7f040001;
        public: static const int compat_mode_help = 0x7f040002;
        public: static const int flip_settings = 0x7f040003;
        public: static const int global_screenshot = 0x7f040004;
        public: static const int intruder_alert = 0x7f040005;
        public: static const int main = 0x7f040006;
        public: static const int navigation_bar = 0x7f040007;
        public: static const int notification_adaptive_wrapper = 0x7f040008;
        public: static const int quick_settings = 0x7f040009;
        public: static const int quick_settings_brightness_dialog = 0x7f04000a;
        public: static const int quick_settings_tile = 0x7f04000b;
        public: static const int quick_settings_tile_airplane = 0x7f04000c;
        public: static const int quick_settings_tile_alarm = 0x7f04000d;
        public: static const int quick_settings_tile_battery = 0x7f04000e;
        public: static const int quick_settings_tile_bluetooth = 0x7f04000f;
        public: static const int quick_settings_tile_brightness = 0x7f040010;
        public: static const int quick_settings_tile_bugreport = 0x7f040011;
        public: static const int quick_settings_tile_ime = 0x7f040012;
        public: static const int quick_settings_tile_location = 0x7f040013;
        public: static const int quick_settings_tile_media = 0x7f040014;
        public: static const int quick_settings_tile_rotation_lock = 0x7f040015;
        public: static const int quick_settings_tile_rssi = 0x7f040016;
        public: static const int quick_settings_tile_settings = 0x7f040017;
        public: static const int quick_settings_tile_time = 0x7f040018;
        public: static const int quick_settings_tile_user = 0x7f040019;
        public: static const int quick_settings_tile_wifi = 0x7f04001a;
        public: static const int quick_settings_tile_wifi_display = 0x7f04001b;
        public: static const int signal_cluster_view = 0x7f04001c;
        public: static const int status_bar = 0x7f04001d;
        public: static const int status_bar_expanded = 0x7f04001e;
        public: static const int status_bar_expanded_header = 0x7f04001f;
        public: static const int status_bar_help = 0x7f040020;
        public: static const int status_bar_icon = 0x7f040021;
        public: static const int status_bar_no_recent_apps = 0x7f040022;
        public: static const int status_bar_notification_row = 0x7f040023;
        public: static const int status_bar_recent_item = 0x7f040024;
        public: static const int status_bar_recent_panel = 0x7f040025;
        public: static const int status_bar_search_panel = 0x7f040026;
        public: static const int status_bar_toggle_slider = 0x7f040027;
        public: static const int super_status_bar = 0x7f040028;
        public: static const int system_bar = 0x7f040029;
        public: static const int system_bar_compat_mode_panel = 0x7f04002a;
        public: static const int system_bar_input_methods_item = 0x7f04002b;
        public: static const int system_bar_input_methods_panel = 0x7f04002c;
        public: static const int system_bar_no_recent_apps = 0x7f04002d;
        public: static const int system_bar_notification_area = 0x7f04002e;
        public: static const int system_bar_notification_panel = 0x7f04002f;
        public: static const int system_bar_notification_panel_title = 0x7f040030;
        public: static const int system_bar_notification_peek = 0x7f040031;
        public: static const int system_bar_pocket_panel = 0x7f040032;
        public: static const int system_bar_recent_item = 0x7f040033;
        public: static const int system_bar_recent_panel = 0x7f040034;
        public: static const int system_bar_recent_panel_footer = 0x7f040035;
        public: static const int system_bar_settings_view = 0x7f040036;
        public: static const int system_bar_ticker_compat = 0x7f040037;
        public: static const int system_bar_ticker_panel = 0x7f040038;
        public: static const int universe = 0x7f040039;
    };
    public: class menu {
        public: static const int notification_popup_menu = 0x7f0f0000;
        public: static const int recent_popup_menu = 0x7f0f0001;
    };
    public: class mipmap {
        public: static const int ic_daydreams = 0x7f030000;
        public: static const int ic_launcher_dreams = 0x7f030001;
    };
    public: class plurals {
        /**  Message that is read when you enter recent apps in TalkBack
         */
        public: static const int status_bar_accessibility_recent_apps = 0x7f0d0000;
    };
    public: class string {
        /**  Date format for display: should match the lockscreen in /policy.
         */
        public: static const int abbrev_wday_month_day_no_year = 0x7f0a0002;
        /**  Content description of the airplane mode icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_airplane_mode = 0x7f0a0076;
        /**  Content description of the back button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_back = 0x7f0a003c;
        /**  Content description of the battery when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_battery_full = 0x7f0a004a;
        /**  Content description of the battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_battery_level = 0x7f0a0077;
        /**  Content description of the battery when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_battery_one_bar = 0x7f0a0047;
        /**  Content description of the battery when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_battery_three_bars = 0x7f0a0049;
        /**  Content description of the battery when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_battery_two_bars = 0x7f0a0048;
        /**  Content description of the bluetooth icon when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_bluetooth_connected = 0x7f0a0044;
        /**  Content description of the bluetooth icon when connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_bluetooth_disconnected = 0x7f0a0045;
        /**  Content description of the bluetooth tethering icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_bluetooth_tether = 0x7f0a0075;
        /**  Content description of the clear button in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_clear_all = 0x7f0a0096;
        /**  Content description of the compatibility zoom button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_compatibility_zoom_button = 0x7f0a0042;
        /**  Content description of picture of the compatibility zoom example for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_compatibility_zoom_example = 0x7f0a0043;
        /**  Content description of the data connection type 1x for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_1x = 0x7f0a006b;
        /**  Content description of the data connection type 3.5G for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_3_5g = 0x7f0a006e;
        /**  Content description of the data connection type 3G for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_3g = 0x7f0a006d;
        /**  Content description of the data connection type 4G for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_4g = 0x7f0a006f;
        /**  Content description of the data connection type CDMA for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_cdma = 0x7f0a0070;
        /**  Content description of the data connection type Edge for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_edge = 0x7f0a0072;
        /**  Content description of the data connection type GPRS for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_gprs = 0x7f0a006a;
        /**  Content description of the data connection type HSPA and its variants for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_hspa = 0x7f0a006c;
        /**  Content description of the roaming data connection type for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_roaming = 0x7f0a0071;
        /**  Content description of the data connection type WiFi for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_connection_wifi = 0x7f0a0073;
        /**  Content description of the data signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_one_bar = 0x7f0a0051;
        /**  Content description of the data signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_signal_full = 0x7f0a0054;
        /**  Content description of the data signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_three_bars = 0x7f0a0053;
        /**  Content description of the data signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_data_two_bars = 0x7f0a0052;
        /**  Content description of an item that is connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_connected = 0x7f0a0069;
        /**  Content description for the notification shade panel (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_notification_shade = 0x7f0a0082;
        /**  Content description of an item that is turned off for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_off = 0x7f0a0068;
        /**  Content description of an item that is turned on for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_on = 0x7f0a0067;
        /**  Content description for the quick settings panel (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_quick_settings = 0x7f0a0083;
        /**  Content description for the recent apps panel (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_desc_recent_apps = 0x7f0a0084;
        /**  Content description of the acquiring GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_gps_acquiring = 0x7f0a007c;
        /**  Content description of the enabled GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_gps_enabled = 0x7f0a007b;
        /**  Content description of the home button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_home = 0x7f0a003d;
        /**  Content description of the switch input method button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_ime_switch_button = 0x7f0a0041;
        /**  Content description of the menu button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_menu = 0x7f0a003e;
        /**  Content description of the battery when no battery for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_battery = 0x7f0a0046;
        /**  Content description of the data signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_data = 0x7f0a0050;
        /**  Content description of the phone signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_phone = 0x7f0a004b;
        /**  Content description of an item with no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_signal = 0x7f0a0060;
        /**  Content description of the data connection with no SIM for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_sim = 0x7f0a0074;
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_wifi = 0x7f0a0056;
        /**  Content description of the WiMAX signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_no_wimax = 0x7f0a005b;
        /**  Content description of an item with no signal and no connection for accessibility (not shown on the screen) [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_not_connected = 0x7f0a0061;
        /**  Content description to tell the user a notification has been removed from the notification shade
         */
        public: static const int accessibility_notification_dismissed = 0x7f0a0081;
        /**  Content description of the button for showing a notifications panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_notifications_button = 0x7f0a0079;
        /**  Content description of an item with one signal bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_one_bar = 0x7f0a0063;
        /**  Content description of the phone signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_phone_one_bar = 0x7f0a004c;
        /**  Content description of the phone signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_phone_signal_full = 0x7f0a004f;
        /**  Content description of the phone signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_phone_three_bars = 0x7f0a004e;
        /**  Content description of the phone signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_phone_two_bars = 0x7f0a004d;
        /**  Content description of the airplane mode tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_airplane = 0x7f0a0089;
        /**  Content description of the alarm tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_alarm = 0x7f0a008b;
        /**  Content description of the battery tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_battery = 0x7f0a0088;
        /**  Content description of the bluetooth tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_bluetooth = 0x7f0a008a;
        /**  Content description of the mobile data tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_mobile = 0x7f0a0087;
        /**  Content description of the user tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_user = 0x7f0a0085;
        /**  Content description of the wifi tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_quick_settings_wifi = 0x7f0a0086;
        /**  Content description of the recents button for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_recent = 0x7f0a003f;
        /**  Content description to tell the user an application has been removed from recents
         */
        public: static const int accessibility_recents_item_dismissed = 0x7f0a0080;
        /**  Content description of the button for removing a notification in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_remove_notification = 0x7f0a007a;
        /**  Content description of the ringer silent icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_ringer_silent = 0x7f0a007f;
        /**  Content description of the ringer vibrate icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_ringer_vibrate = 0x7f0a007e;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is on. [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_rotation_lock_off = 0x7f0a009d;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_rotation_lock_on_landscape = 0x7f0a009e;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_rotation_lock_on_portrait = 0x7f0a009f;
        public: static const int accessibility_screenshot = 0x7f0a0040;
        /**  Content description of the button for showing a settings panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_settings_button = 0x7f0a0078;
        /**  Content description of an item with full signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_signal_full = 0x7f0a0066;
        /**  Content description of an item with three signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_three_bars = 0x7f0a0065;
        /**  Content description of the TeleTypewriter(TTY) enabled icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_tty_enabled = 0x7f0a007d;
        /**  Content description of an item with two signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_two_bars = 0x7f0a0064;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wifi_off = 0x7f0a0055;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wifi_one_bar = 0x7f0a0057;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wifi_signal_full = 0x7f0a005a;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wifi_three_bars = 0x7f0a0059;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wifi_two_bars = 0x7f0a0058;
        /**  Content description of the WiMAX signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wimax_one_bar = 0x7f0a005c;
        /**  Content description of the WiMAX signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wimax_signal_full = 0x7f0a005f;
        /**  Content description of the WiMAX signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wimax_three_bars = 0x7f0a005e;
        /**  Content description of the WiMAX signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_wimax_two_bars = 0x7f0a005d;
        /**  Content description of an item with zero signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
         */
        public: static const int accessibility_zero_bars = 0x7f0a0062;
        /**  Checkbox label for USB accessory dialogs.  [CHAR LIMIT=50]
         */
        public: static const int always_use_accessory = 0x7f0a0029;
        /**  Checkbox label for USB device dialogs.  [CHAR LIMIT=50]
         */
        public: static const int always_use_device = 0x7f0a0028;
        /**  Name of the status bar as seen in the applications info settings page. [CHAR LIMIT=12]
         */
        public: static const int app_label = 0x7f0a0005;
        public: static const int app_name = 0x7f0a0004;
        /**  A message that appears when the battery level is getting low in a dialog.  This is
        appened to the subtitle of the low battery alert.  "number" is the percentage of battery
        remaining [CHAR LIMIT=none]
         */
        public: static const int battery_low_percent_format = 0x7f0a0012;
        /**  When the battery is low, this is displayed to the user in a dialog. The subtitle of the low battery alert. [CHAR LIMIT=NONE]
         */
        public: static const int battery_low_subtitle = 0x7f0a0011;
        /**  When the battery is low, this is displayed to the user in a dialog.  The title of the low battery alert.  [CHAR LIMIT=NONE]
         */
        public: static const int battery_low_title = 0x7f0a0010;
        /**  When the battery is low, this is the label of the button to go to the
         power usage activity to find out what drained the battery.  [CHAR LIMIT=30]
         */
        public: static const int battery_low_why = 0x7f0a0014;
        /**  Network connection string for Bluetooth Reverse Tethering
         */
        public: static const int bluetooth_tethered = 0x7f0a001e;
        /**  [CHAR LIMIT=NONE]
         */
        public: static const int close_universe = 0x7f0a009a;
        /**  Compatibility mode help screen: body text. [CHAR LIMIT=150]
         */
        public: static const int compat_mode_help_body = 0x7f0a0030;
        /**  Compatibility mode help screen: header text. [CHAR LIMIT=50]
         */
        public: static const int compat_mode_help_header = 0x7f0a002f;
        /**  Checkbox label for application compatibility mode OFF (normal mode on tablets).
         [CHAR LIMIT=25]
         */
        public: static const int compat_mode_off = 0x7f0a002e;
        /**  Checkbox label for application compatibility mode ON (zooming app to look like it's running
         on a phone).  [CHAR LIMIT=25]
         */
        public: static const int compat_mode_on = 0x7f0a002d;
        /**  Component to be used as the status bar service.  Must implement the IStatusBar
     interface.  This name is in the ComponentName flattened format (package/class)
         */
        public: static const int config_statusBarComponent = 0x7f0a0000;
        /**  Component to be used as the system bar service.  Must implement the IStatusBar
     interface.  This name is in the ComponentName flattened format (package/class)
         */
        public: static const int config_systemBarComponent = 0x7f0a0001;
        /**  Body of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=NONE]
         */
        public: static const int data_usage_disabled_dialog = 0x7f0a0090;
        /**  Title of dialog shown when 2G-3G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48]
         */
        public: static const int data_usage_disabled_dialog_3g_title = 0x7f0a008c;
        /**  Title of dialog shown when 4G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48]
         */
        public: static const int data_usage_disabled_dialog_4g_title = 0x7f0a008d;
        /**  Dialog button indicating that data connection should be re-enabled. [CHAR LIMIT=28]
         */
        public: static const int data_usage_disabled_dialog_enable = 0x7f0a0091;
        /**  Title of dialog shown when mobile data usage has exceeded limit and has been disabled. [CHAR LIMIT=48]
         */
        public: static const int data_usage_disabled_dialog_mobile_title = 0x7f0a008e;
        /**  Title of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=48]
         */
        public: static const int data_usage_disabled_dialog_title = 0x7f0a008f;
        public: static const int ethernet_description = 0x7f0a0098;
        /**  Textual description of Ethernet connections
         */
        public: static const int ethernet_label = 0x7f0a00aa;
        /**  ethernet string
 ethernet string
         */
        public: static const int ethernet_link = 0x7f0a0097;
        /**  Notification text: when GPS has found a fix [CHAR LIMIT=50]
         */
        public: static const int gps_notification_found_text = 0x7f0a0095;
        /**  Notification text: when GPS is getting a fix [CHAR LIMIT=50]
         */
        public: static const int gps_notification_searching_text = 0x7f0a0094;
        public: static const int headphone_plug_in_message = 0x7f0a00d1;
        public: static const int headphone_plug_in_title = 0x7f0a00cf;
        public: static const int headphone_plug_out_message = 0x7f0a00d2;
        public: static const int headphone_plug_out_title = 0x7f0a00d0;
        /**  Label for the installer CD image option in UsbPreferenceActivity. [CHAR LIMIT=50]
         */
        public: static const int installer_cd_button_title = 0x7f0a003b;
        /**  A message that appears when a USB charger is plugged in and the device does not
    support charging on it.  That is, a charger that fits into the USB port and goes into
    a wall socket, not into a computer. (This happens because some devices require more
    current than the USB spec allows.  [CHAR LIMIT=NONE]
         */
        public: static const int invalid_charger = 0x7f0a0013;
        /**  Name of the Jelly Bean platlogo screensaver
         */
        public: static const int jelly_bean_dream_name = 0x7f0a00a8;
        /**  View button label for USB dialogs.  [CHAR LIMIT=15]
         */
        public: static const int label_view = 0x7f0a0027;
        /**  Content text for do-not-disturb mode notification
         */
        public: static const int notifications_off_text = 0x7f0a009c;
        /**  Title for the pseudo-notification shown when notifications are disabled (do-not-disturb
         mode)
         */
        public: static const int notifications_off_title = 0x7f0a009b;
        /**  QuickSettings: Airplane mode [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_airplane_mode_label = 0x7f0a00ab;
        /**  QuickSettings: Battery Charged [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_battery_charged_label = 0x7f0a00ad;
        /**  QuickSettings: Battery Charging [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_battery_charging_label = 0x7f0a00ac;
        /**  QuickSettings: Bluetooth [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_bluetooth_label = 0x7f0a00ae;
        /**  QuickSettings: Bluetooth (Multiple) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_bluetooth_multiple_devices_label = 0x7f0a00af;
        /**  QuickSettings: Bluetooth (Off) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_bluetooth_off_label = 0x7f0a00b0;
        /**  QuickSettings: Brightness dialog auto brightness button [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_brightness_dialog_auto_brightness_label = 0x7f0a00c3;
        /**  QuickSettings: Brightness dialog title [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_brightness_dialog_title = 0x7f0a00c2;
        /**  QuickSettings: Brightness [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_brightness_label = 0x7f0a00b1;
        /**  QuickSettings: IME [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_ime_label = 0x7f0a00b4;
        /**  QuickSettings: Location [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_location_label = 0x7f0a00b5;
        /**  QuickSettings: Media device [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_media_device_label = 0x7f0a00b6;
        /**  QuickSettings: Rotation Locked [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_rotation_locked_label = 0x7f0a00b3;
        /**  QuickSettings: Rotation Unlocked [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_rotation_unlocked_label = 0x7f0a00b2;
        /**  QuickSettings: RSSI (No network) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_rssi_emergency_only = 0x7f0a00b8;
        /**  QuickSettings: RSSI [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_rssi_label = 0x7f0a00b7;
        /**  QuickSettings: Settings [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_settings_label = 0x7f0a00b9;
        /**  QuickSettings: Time [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_time_label = 0x7f0a00ba;
        /**  QuickSettings: User [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_user_label = 0x7f0a00bb;
        /**  QuickSettings: Wifi display [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_display_label = 0x7f0a00c0;
        /**  QuickSettings: Wifi display [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_display_no_connection_label = 0x7f0a00c1;
        /**  QuickSettings: Wifi [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_label = 0x7f0a00bc;
        /**  QuickSettings: Wifi (No network) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_no_network = 0x7f0a00be;
        /**  QuickSettings: Wifi (Not connected) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_not_connected = 0x7f0a00bd;
        /**  QuickSettings: Wifi (Off) [CHAR LIMIT=NONE]
         */
        public: static const int quick_settings_wifi_off_label = 0x7f0a00bf;
        /**  Notification text displayed when we fail to take a screenshot. [CHAR LIMIT=100]
         */
        public: static const int screenshot_failed_text = 0x7f0a0037;
        /**  Notification title displayed when we fail to take a screenshot. [CHAR LIMIT=50]
         */
        public: static const int screenshot_failed_title = 0x7f0a0036;
        /**  Notification text displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=100]
         */
        public: static const int screenshot_saved_text = 0x7f0a0035;
        /**  Notification title displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=50]
         */
        public: static const int screenshot_saved_title = 0x7f0a0034;
        /**  Notification text displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=100]
         */
        public: static const int screenshot_saving_text = 0x7f0a0033;
        /**  Notification ticker displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=30]
         */
        public: static const int screenshot_saving_ticker = 0x7f0a0031;
        /**  Notification title displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=50]
         */
        public: static const int screenshot_saving_title = 0x7f0a0032;
        public: static const int sd_mounted_message = 0x7f0a00a3;
        public: static const int sd_mounted_title = 0x7f0a00a2;
        /**  Name of the launcher shortcut icon that allows dreams to be started immediately [CHAR LIMIT=20]
         */
        public: static const int start_dreams = 0x7f0a00a9;
        /**  Content description for the button to dismiss Recent Apps (only present on large
         devices)
         */
        public: static const int status_bar_accessibility_dismiss_recents = 0x7f0a000c;
        /**  The text for the button in the notification window-shade that clears
         all of the currently visible notifications. [CHAR LIMIT=10]
         */
        public: static const int status_bar_clear_all_button = 0x7f0a0006;
        /**  For formatting day of week and date in DateView.  %1$s is DOW, %2$s is date.
         We show both (DOW on one line, then the date) but this can be overridden for locales as
         necessary.

 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary.
         */
        public: static const int status_bar_date_formatter = 0x7f0a0003;
        /**  The text for the button in the notification window-shade that turns
         on do not disturb mode, where notifications no longer show their ticker,
         no sound plays, and no icons are visible.  The windowshade continues to show
         the notifications. [CHAR LIMIT=25]
         */
        public: static const int status_bar_do_not_disturb_button = 0x7f0a0007;
        /**  Body of help text shown when the notification panel is pulled down for the very first time. [CHAR LIMIT=NONE]
         */
        public: static const int status_bar_help_text = 0x7f0a00c5;
        /**  Title of help text shown when the notification panel is pulled down for the very first time. [CHAR LIMIT=NONE]
         */
        public: static const int status_bar_help_title = 0x7f0a00c4;
        /**  Title of a button to open the settings for input methods [CHAR LIMIT=30]
         */
        public: static const int status_bar_input_method_settings_configure_input_methods = 0x7f0a001f;
        /**  The label for the group of notifications for recent events in the opened version of
         the status bar.  Recently received text messsages (SMS), emails, calendar alerts, etc.
         [CHAR LIMIT=40]
         */
        public: static const int status_bar_latest_events_title = 0x7f0a000f;
        /**  Separator for PLMN and SPN in network name.
         */
        public: static const int status_bar_network_name_separator = 0x7f0a001d;
        /**  The label in the bar at the top of the status bar when there are no notifications
         showing.  [CHAR LIMIT=40]
 no translation found for status_bar_accessibility_recent_apps:one (5854176083865845541)
 no translation found for status_bar_accessibility_recent_apps:other (1040784359794890744)
 String.format failed for translation
 no translation found for status_bar_accessibility_recent_apps:other (1040784359794890744)
         */
        public: static const int status_bar_no_notifications_title = 0x7f0a000d;
        /**  Message shown in the middle of the screen after clicking on the recent apps button
         when there are no recent apps to show. Also used for accessibility. [CHAR LIMIT=45]
         */
        public: static const int status_bar_no_recent_apps = 0x7f0a000b;
        /**  Title shown in notification popup for inspecting the responsible
         application
         */
        public: static const int status_bar_notification_inspect_item_title = 0x7f0a0099;
        /**  The label for the group of notifications for ongoing events in the opened version of
         the status bar.  An ongoing call is the prime example of this.  The MP3 music player
         might be another example.   [CHAR LIMIT=40]
         */
        public: static const int status_bar_ongoing_events_title = 0x7f0a000e;
        /**  The text for the button in the notification window-shade that turns
         off do not disturb mode.  After clicking this, notifications will be
         shown again. [CHAR LIMIT=25]
         */
        public: static const int status_bar_please_disturb_button = 0x7f0a0008;
        /**  Title shown in recents popup for inspecting an application's properties
         */
        public: static const int status_bar_recent_inspect_item_title = 0x7f0a000a;
        /**  Title shown in recents popup for removing an application from the list
         */
        public: static const int status_bar_recent_remove_item_title = 0x7f0a0009;
        /**  Label in the system panel for airplane mode (all radios are turned off)[CHAR LIMIT=30]
         */
        public: static const int status_bar_settings_airplane = 0x7f0a0017;
        /**  Abbreviation / label for automatic brightness mode button. Should be all caps. [CHAR LIMIT=6]
         */
        public: static const int status_bar_settings_auto_brightness_label = 0x7f0a001a;
        /**  Label in system panel saying the device will use the orientation sensor to rotate [CHAR LIMIT=30]
         */
        public: static const int status_bar_settings_auto_rotation = 0x7f0a0018;
        /**  Text to display next to the graphical battery meter.  [CHAR LIMIT=3]
         */
        public: static const int status_bar_settings_battery_meter_format = 0x7f0a001c;
        /**  Abbreviation / label for mute brightness mode button. Should be all caps. [CHAR LIMIT=6]
         */
        public: static const int status_bar_settings_mute_label = 0x7f0a0019;
        /**  Label in system panel saying the device will show notifications [CHAR LIMIT=30]
         */
        public: static const int status_bar_settings_notifications = 0x7f0a001b;
        /**  Name of the button that links to the Settings app. [CHAR LIMIT=NONE]
         */
        public: static const int status_bar_settings_settings_button = 0x7f0a0015;
        /**  Text to display underneath the graphical signal strength meter when
         no connection is available. [CHAR LIMIT=20]
         */
        public: static const int status_bar_settings_signal_meter_disconnected = 0x7f0a0092;
        /**  Text to display underneath the graphical signal strength meter when
         it is displaying Wi-Fi status and Wi-Fi is connected to a network
         whose SSID is not available.
         [CHAR LIMIT=20]
         */
        public: static const int status_bar_settings_signal_meter_wifi_nossid = 0x7f0a0093;
        /**  Name of the button that links to the Wifi settings screen. [CHAR LIMIT=NONE]
         */
        public: static const int status_bar_settings_wifi_button = 0x7f0a0016;
        /**  Label of a toggle switch to disable use of the physical keyboard in favor of the IME. [CHAR LIMIT=25]
         */
        public: static const int status_bar_use_physical_keyboard = 0x7f0a0020;
        /**  Title for USB accessory dialog.  Used when the name of the accessory cannot be determined.  [CHAR LIMIT=50]
         */
        public: static const int title_usb_accessory = 0x7f0a0026;
        /**  Rotation lock toast text: shown when rotation lock is turned on in landscape orientation.

         */
        public: static const int toast_rotation_locked = 0x7f0a00d3;
        /**  Prompt for the USB accessory confirm dialog [CHAR LIMIT=80]
         */
        public: static const int usb_accessory_confirm_prompt = 0x7f0a0024;
        /**  Prompt for the USB accessory permission dialog [CHAR LIMIT=80]
         */
        public: static const int usb_accessory_permission_prompt = 0x7f0a0022;
        /**  Prompt for the USB accessory URI dialog [CHAR LIMIT=80]
         */
        public: static const int usb_accessory_uri_prompt = 0x7f0a0025;
        public: static const int usb_audio_in_plug_in_title = 0x7f0a00cd;
        public: static const int usb_audio_in_plug_out_title = 0x7f0a00ce;
        /**  notification for audio plug in/out
         */
        public: static const int usb_audio_out_plug_in_title = 0x7f0a00c9;
        public: static const int usb_audio_out_plug_out_title = 0x7f0a00cc;
        public: static const int usb_audio_plug_in_message = 0x7f0a00ca;
        public: static const int usb_audio_plug_out_message = 0x7f0a00cb;
        public: static const int usb_badremoval_notification_message = 0x7f0a00a7;
        public: static const int usb_badremoval_notification_title = 0x7f0a00a6;
        /**  Option to always allow USB debugging from the attached computer
         */
        public: static const int usb_debugging_always = 0x7f0a002c;
        /**  Message of confirmation dialog for USB debugging
         */
        public: static const int usb_debugging_message = 0x7f0a002b;
        /**  Title of confirmation dialog for USB debugging
         */
        public: static const int usb_debugging_title = 0x7f0a002a;
        /**  Prompt for the USB device confirm dialog [CHAR LIMIT=80]
         */
        public: static const int usb_device_confirm_prompt = 0x7f0a0023;
        /**  Prompt for the USB device permission dialog [CHAR LIMIT=80]
         */
        public: static const int usb_device_permission_prompt = 0x7f0a0021;
        public: static const int usb_mounted_message = 0x7f0a00a1;
        /**  notify devices mounted
         */
        public: static const int usb_mounted_title = 0x7f0a00a0;
        public: static const int usb_nomedia_notification_message = 0x7f0a00a5;
        public: static const int usb_nomedia_notification_title = 0x7f0a00a4;
        public: static const int usb_port_hint = 0x7f0a00c8;
        public: static const int usb_port_message = 0x7f0a00c7;
        /**  add by kinier: the usb port state notification message
 add by kinier: the usb port state notification message
 add by kinier: the usb port state notification message
         */
        public: static const int usb_port_title = 0x7f0a00c6;
        /**  Title for the USB function chooser in UsbPreferenceActivity. [CHAR LIMIT=30]
         */
        public: static const int usb_preference_title = 0x7f0a0038;
        /**  Label for the MTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50]
         */
        public: static const int use_mtp_button_title = 0x7f0a0039;
        /**  Label for the PTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50]
         */
        public: static const int use_ptp_button_title = 0x7f0a003a;
    };
    public: class style {
        public: static const int Animation = 0x7f0e0014;
        public: static const int Animation_RecentPanel = 0x7f0e0016;
        /**  Animations for a non-full-screen window or activity.
         */
        public: static const int Animation_RecentsActivity = 0x7f0e0001;
        public: static const int Animation_ShirtPocketPanel = 0x7f0e0015;
        /**  Standard animations for hiding and showing the status bar.
         */
        public: static const int Animation_StatusBar = 0x7f0e0017;
        public: static const int Animation_StatusBar_IntruderAlert = 0x7f0e0018;
        public: static const int BaseBrightnessDialogContainer = 0x7f0e0012;
        public: static const int BrightnessDialogContainer = 0x7f0e0013;
        public: static const int ClingButton = 0x7f0e001a;
        public: static const int ClingText = 0x7f0e001c;
        public: static const int ClingTitleText = 0x7f0e001b;
        public: static const int RecentsStyle = 0x7f0e0000;
        public: static const int SystemBarNotificationText = 0x7f0e001d;
        public: static const int SystemBarPanelSettingsContents = 0x7f0e0020;
        public: static const int SystemBarPanelSettingsIcon = 0x7f0e001f;
        public: static const int SystemBarPanelSettingsPanelSeparator = 0x7f0e0021;
        public: static const int SystemBarPanelSettingsRow = 0x7f0e001e;
        public: static const int TextAppearance = 0x7f0e000c;
        public: static const int TextAppearance_QuickSettings = 0x7f0e000d;
        public: static const int TextAppearance_QuickSettings_Alarm = 0x7f0e0011;
        public: static const int TextAppearance_QuickSettings_Clock = 0x7f0e000f;
        public: static const int TextAppearance_QuickSettings_Date = 0x7f0e0010;
        public: static const int TextAppearance_QuickSettings_TileView = 0x7f0e000e;
        public: static const int TextAppearance_StatusBar_Clock = 0x7f0e0005;
        public: static const int TextAppearance_StatusBar_Date = 0x7f0e0006;
        public: static const int TextAppearance_StatusBar_Expanded = 0x7f0e0007;
        public: static const int TextAppearance_StatusBar_Expanded_Clock = 0x7f0e0008;
        public: static const int TextAppearance_StatusBar_Expanded_Date = 0x7f0e0009;
        public: static const int TextAppearance_StatusBar_Expanded_Network = 0x7f0e000a;
        public: static const int TextAppearance_StatusBar_Expanded_Network_EmergencyOnly = 0x7f0e000b;
        public: static const int TextAppearance_StatusBar_IntruderAlert = 0x7f0e0002;
        public: static const int TextAppearance_StatusBar_PhoneTicker = 0x7f0e0019;
        public: static const int TextAppearance_StatusBar_SystemPanel = 0x7f0e0003;
        public: static const int TextAppearance_StatusBar_TextButton = 0x7f0e0004;
        public: static const int TextAppearance_SystemBar_Clock = 0x7f0e0022;
        public: static const int TextAppearance_SystemBar_Expanded_Clock = 0x7f0e0023;
        public: static const int TextAppearance_SystemBar_Expanded_Date = 0x7f0e0024;
    };
    public: class styleable {
        /** Attributes that can be used with a DeadZone.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DeadZone_decayTime SystemUI:decayTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_holdTime SystemUI:holdTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_maxSize SystemUI:maxSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_minSize SystemUI:minSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_orientation SystemUI:orientation}</code></td><td></td></tr>
           </table>
           @see #DeadZone_decayTime
           @see #DeadZone_holdTime
           @see #DeadZone_maxSize
           @see #DeadZone_minSize
           @see #DeadZone_orientation
         */
        public: static const int DeadZone[5];
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#decayTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:decayTime
        */
        public: static const int DeadZone_decayTime = 3;
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#holdTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:holdTime
        */
        public: static const int DeadZone_holdTime = 2;
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#maxSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:maxSize
        */
        public: static const int DeadZone_maxSize = 1;
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#minSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:minSize
        */
        public: static const int DeadZone_minSize = 0;
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#orientation}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name android:orientation
        */
        public: static const int DeadZone_orientation = 4;
        /** Attributes that can be used with a KeyButtonView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyButtonView_glowBackground SystemUI:glowBackground}</code></td><td> drawable to use for a swelling, glowing background on press </td></tr>
           <tr><td><code>{@link #KeyButtonView_keyCode SystemUI:keyCode}</code></td><td> key code to send when pressed; if absent or 0, no key is sent </td></tr>
           <tr><td><code>{@link #KeyButtonView_keyRepeat SystemUI:keyRepeat}</code></td><td> does this button generate longpress / repeat events? </td></tr>
           </table>
           @see #KeyButtonView_glowBackground
           @see #KeyButtonView_keyCode
           @see #KeyButtonView_keyRepeat
         */
        public: static const int KeyButtonView[3];
        /**
          <p>
          @attr description
           drawable to use for a swelling, glowing background on press


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:glowBackground
        */
        public: static const int KeyButtonView_glowBackground = 2;
        /**
          <p>
          @attr description
           key code to send when pressed; if absent or 0, no key is sent


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyCode
        */
        public: static const int KeyButtonView_keyCode = 0;
        /**
          <p>
          @attr description
           does this button generate longpress / repeat events?


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyRepeat
        */
        public: static const int KeyButtonView_keyRepeat = 1;
        /** Attributes that can be used with a NotificationLinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationLinearLayout_insetLeft SystemUI:insetLeft}</code></td><td></td></tr>
           </table>
           @see #NotificationLinearLayout_insetLeft
         */
        public: static const int NotificationLinearLayout[1];
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#insetLeft}
          attribute's value can be found in the {@link #NotificationLinearLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:insetLeft
        */
        public: static const int NotificationLinearLayout_insetLeft = 0;
        /** Attributes that can be used with a NotificationRowLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationRowLayout_rowHeight SystemUI:rowHeight}</code></td><td></td></tr>
           </table>
           @see #NotificationRowLayout_rowHeight
         */
        public: static const int NotificationRowLayout[1];
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#rowHeight}
          attribute's value can be found in the {@link #NotificationRowLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:rowHeight
        */
        public: static const int NotificationRowLayout_rowHeight = 0;
        /** Attributes that can be used with a RecentsPanelView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RecentsPanelView_recentItemLayout SystemUI:recentItemLayout}</code></td><td></td></tr>
           </table>
           @see #RecentsPanelView_recentItemLayout
         */
        public: static const int RecentsPanelView[1];
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#recentItemLayout}
          attribute's value can be found in the {@link #RecentsPanelView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:recentItemLayout
        */
        public: static const int RecentsPanelView_recentItemLayout = 0;
        /** Attributes that can be used with a ToggleSlider.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ToggleSlider_text SystemUI:text}</code></td><td></td></tr>
           </table>
           @see #ToggleSlider_text
         */
        public: static const int ToggleSlider[1];
        /**
          <p>This symbol is the offset where the {@link SystemUI.R.attr#text}
          attribute's value can be found in the {@link #ToggleSlider} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:text
        */
        public: static const int ToggleSlider_text = 0;
    };
};

} // namespace SystemUI
} // namespace Droid
} // namespace Elastos

#endif //__ELASTOS_DROID_SYSTEMUI_SYSTEMUI_R_H__

