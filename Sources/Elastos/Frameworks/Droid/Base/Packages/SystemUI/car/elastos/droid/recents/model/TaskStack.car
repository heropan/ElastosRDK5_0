
module
{
    using interface Elastos.Utility.IList;
    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Recents {
    namespace Model {

    /**
     * An interface for a task filter to query whether a particular task should show in a stack.
     */
    interface ITaskFilter {

        /** Returns whether the filter accepts the specified task */
        AcceptTask(
            [in] ITask* t,
            [in] Int32 index,
            [out] Boolean* result);
    }


    interface ITaskStackCallbacks;

    /**
     * The task stack contains a list of multiple tasks.
     */
    interface ITaskStack {
    }

    /** Task stack callbacks */
    interface ITaskStackCallbacks {

        /* Notifies when a task has been added to the stack */
        OnStackTaskAdded(
            [in] ITaskStack* stack,
            [in] ITask* t);

        /* Notifies when a task has been removed from the stack */
        OnStackTaskRemoved(
            [in] ITaskStack* stack,
            [in] ITask* removedTask,
            [in] ITask* newFrontMostTask);

        /** Notifies when the stack was filtered */
        OnStackFiltered(
            [in] ITaskStack* newStack,
            [in] IArrayList* curTasks,
            [in] ITask* t);

        /** Notifies when the stack was un-filtered */
        OnStackUnfiltered(
            [in] ITaskStack* newStack,
            [in] IArrayList* curTasks);
    }

    } // namespace Model
    } // namespace Recents
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
