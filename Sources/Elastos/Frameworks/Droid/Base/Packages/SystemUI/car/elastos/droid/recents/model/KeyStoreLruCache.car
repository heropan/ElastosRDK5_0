
module
{
    interface Elastos.Droid.Packages.SystemUI.Recents.Model.ITaskKey;

    namespace Elastos {
    namespace Droid {
    namespace Packages {
    namespace SystemUI {
    namespace Recents {
    namespace Model {

    /**
     * An LRU cache that support querying the keys as well as values. By using the Task's key, we can
     * prevent holding onto a reference to the Task resource data, while keeping the cache data in
     * memory where necessary.
     */
    interface IKeyStoreLruCache {

        /** Gets a specific entry in the cache. */
        Get(
            [in] ITaskKey* key,
            [out] IInterface** result);

        /**
         * Returns the value only if the Task has not updated since the last time it was in the cache.
         */
        GetAndInvalidateIfModified(
            [in] ITaskKey* key,
            [out] IInterface** result);

        /** Puts an entry in the cache for a specific key. */
        Put(
            [in] ITaskKey* key,
            [in] IInterface* value);

        /** Removes a cache entry for a specific key. */
        Remove(
            [in] ITaskKey* key);

        /** Removes all the entries in the cache. */
        EvictAll();

        /** Returns the size of the cache. */
        GetSize(
            [out] Int32* size);

        /** Trims the cache to a specific size */
        TrimToSize(
            [in] Int32 cacheSize);
    }

    } // namespace Model
    } // namespace Recents
    } // namespace SystemUI
    } // namespace Packages
    } // namespace Droid
    } // namespace Elastos
}
