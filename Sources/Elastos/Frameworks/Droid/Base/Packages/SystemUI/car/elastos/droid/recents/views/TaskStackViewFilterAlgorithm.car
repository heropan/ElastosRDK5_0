
module
{
    using interface Elastos.Utility.IArrayList;
    using interface Elastos.Utility.IHashMap;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Recents {
    namespace Views {

    /* The layout logic for a TaskStackView */
    interface ITaskStackViewFilterAlgorithm {

        /** Orchestrates the animations of the current child views and any new views. */
        StartFilteringAnimation(
            [in] IArrayList* curTasks,
            [in] IArrayList* curTaskTransforms,
            [in] IArrayList* tasks,
            [in] IArrayList* taskTransforms);

        /**
         * Creates the animations for all the children views that need to be animated in when we are
         * un/filtering a stack, and returns the duration for these animations.
         */
        GetEnterTransformsForFilterAnimation(
            [in] IArrayList* tasks,
            [in] IArrayList* taskTransforms,
            [in] IHashMap* childViewTransformsOut,
            [out] Int32* result);

        /**
         * Creates the animations for all the children views that need to be removed or to move views
         * to their un/filtered position when we are un/filtering a stack, and returns the duration
         * for these animations.
         */
        GetExitTransformsForFilterAnimation(
            [in] IArrayList* curTasks,
            [in] IArrayList* curTaskTransforms,
            [in] IArrayList* tasks,
            [in] IArrayList* taskTransforms,
            [in] IHashMap* childViewTransformsOut,
            [in] IArrayList* childrenToRemoveOut,
            [out] Int32* result);
    }

    } // namespace Views
    } // namespace Recents
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
