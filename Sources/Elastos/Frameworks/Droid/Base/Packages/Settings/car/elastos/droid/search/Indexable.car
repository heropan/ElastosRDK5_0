module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Settings {
    namespace Search {

    /**
     * Interface for classes whose instances can provide data for indexing.
     *
     * Classes implementing the Indexable interface must have a static field called
     * <code>SEARCH_INDEX_DATA_PROVIDER</code>, which is an object implementing the
     * {@link Indexable.SearchIndexProvider} interface.
     *
     * See {@link android.provider.SearchIndexableResource} and {@link SearchIndexableRaw}.
     *
     */
    [local]
    interface IIndexableSearchIndexProvider {
        /**
         * Return a list of references for indexing.
         *
         * See {@link android.provider.SearchIndexableResource}
         *
         *
         * @param context the context.
         * @param enabled hint telling if the data needs to be considered into the search results
         *                or not.
         * @return a list of {@link android.provider.SearchIndexableResource} references.
         *         Can be NULL.
         */
        GetXmlResourcesToIndex(
            [in] IContext* context,
            [in] Boolean enabled,
            [out] IList** list); /* List<SearchIndexableResource> */

        /**
         * Return a list of raw data for indexing. See {@link SearchIndexableRaw}
         *
         * @param context the context.
         * @param enabled hint telling if the data needs to be considered into the search results
         *                or not.
         * @return a list of {@link SearchIndexableRaw} references. Can be NULL.
         */
        GetRawDataToIndex(
            [in] IContext* context,
            [in] Boolean enabled,
            [out] IList** list); /* List<SearchIndexableRaw>  */

        /**
         * Return a list of data keys that cannot be indexed. See {@link SearchIndexableRaw}
         *
         * @param context the context.
         * @return a list of {@link SearchIndexableRaw} references. Can be NULL.
         */
        GetNonIndexableKeys(
            [in] IContext* context,
            [out] IList** list); /* List<String>  */
    }

    } // namespace Search
    } // namespace Settings
    } // namespace Droid
    } // namespace Elastos
}
