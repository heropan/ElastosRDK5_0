module
{
    importlib("Elastos.Droid.Core.eco");

    merge("../../../../car/elastos/droid/ButtonBarHandler.car");
    merge("../../../../car/elastos/droid/ZonePicker.car");
    merge("../../../../car/elastos/droid/dashboard/SearchResultsSummary.car");
    merge("../../../../car/elastos/droid/search/Indexable.car");
    merge("../../../../car/elastos/droid/search/IndexDatabaseHelper.car");
    merge("../../../../car/elastos/droid/search/SearchIndexableRaw.car");
    merge("../../../../car/elastos/droid/widget/ChartAxis.car");
    merge("../../../../car/elastos/droid/widget/SwitchBar.car");
    merge("../../../../car/elastos/droid/widget/ToggleSwitch.car");

    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Graphics.Drawable.IDrawableCallback;
    using interface Elastos.Droid.Utility.IAttributeSet;
    using interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource;
    using interface Elastos.Droid.View.IAbsSavedState;
    using interface Elastos.Droid.View.IKeyEventCallback;
    using interface Elastos.Droid.View.IOnPreDrawListener;
    using interface Elastos.Droid.View.IView;
    using interface Elastos.Droid.View.IViewBaseSavedState;
    using interface Elastos.Droid.View.IViewGroup;
    using interface Elastos.Droid.View.IViewManager;
    using interface Elastos.Droid.View.IViewOnClickListener;
    using interface Elastos.Droid.View.IViewParent;
    using interface Elastos.Droid.Widget.IAdapter;
    using interface Elastos.Droid.Widget.IButton;
    using interface Elastos.Droid.Widget.ICheckable;
    using interface Elastos.Droid.Widget.ICompoundButton;
    using interface Elastos.Droid.Widget.IFrameLayout;
    using interface Elastos.Droid.Widget.ILinearLayout;
    using interface Elastos.Droid.Widget.ISpinnerAdapter;
    using interface Elastos.Droid.Widget.ITextView;
    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace Settings {
    namespace Dashboard {

    class CDashboardTileView {
        constructor(
            [in] IContext* context);

        constructor(
            [in] IContext* context,
            [in] IAttributeSet* attrs);

        interface IFrameLayout;
        interface IViewGroup;
        interface IViewParent;
        interface IViewManager;
        interface IView;
        interface IDrawableCallback;
        interface IKeyEventCallback;
        interface IAccessibilityEventSource;
        interface IViewOnClickListener;
    }

    } // namespace Dashboard
    } // namespace Settings
    } // namespace Droid
    } // namespace Elastos

    namespace Elastos {
    namespace Droid {
    namespace Settings {
    namespace Widget {

    class CSwitchBar {
        constructor(
            [in] IContext* ctx);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr,
            [in] Int32 defStyleRes);

        interface ILinearLayout;
        interface IViewGroup;
        interface IView;
        interface IViewParent;
        interface IViewManager;
        interface IDrawableCallback;
        interface IKeyEventCallback;
        interface IAccessibilityEventSource;
    }

    class CSwitchBarSavedState {
        constructor(
            [in] IParcelable* superState);

        constructor();

        interface ISwitchBarSavedState;
        interface IViewBaseSavedState;
        interface IAbsSavedState;
        interface IParcelable;
    }

    [local]
    class CToggleSwitch {
        constructor(
            [in] IContext* ctx);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyleAttr,
            [in] Int32 defStyleRes);

        interface IToggleSwitch;
        interface ISwitch;
        interface ICompoundButton;
        interface IButton;
        interface ITextView;
        interface IView;
        interface ICheckable;
        interface IOnPreDrawListener;
        interface IDrawableCallback;
        interface IKeyEventCallback;
        interface IAccessibilityEventSource;
    }

    } // namespace Widget
    } // namespace Settings
    } // namespace Droid
    } // namespace Elastos

    namespace Elastos {
    namespace Droid {
    namespace Settings {

    class CUserSpinnerAdapter {
        constructor(
            [in] IContext* context,
            [in] IArrayList* users);

        interface ISpinnerAdapter;
        interface IAdapter;
    }

    } // namespace Settings
    } // namespace Droid
    } // namespace Elastos
}
