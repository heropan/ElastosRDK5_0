
module
{
    namespace Elastos {
    namespace Core {

    interface IThreadLocal {
        /**
         * Returns the value of this variable for the current thread. If an entry
         * doesn't yet exist for this variable on this thread, this method will
         * create an entry, populating the value with the result of
         * {@link #initialValue()}.
         *
         * @return the current value of the variable for the calling thread.
         */
        Get(
            [out] IInterface** obj);

        /**
         * Provides the initial value of this variable for the current thread.
         * The default implementation returns {@code null}.
         *
         * @return the initial value of the variable.
         */
        InitialValue(
            [out] IInterface** obj);

        /**
         * Sets the value of this variable for the current thread. If set to
         * {@code null}, the value will be set to null and the underlying entry will
         * still be present.
         *
         * @param value the new value of the variable for the caller thread.
         */
        Set(
            [in] IInterface* obj);

        /**
         * Removes the entry for this variable in the current thread. If this call
         * is followed by a {@link #get()} before a {@link #set},
         * {@code #get()} will call {@link #initialValue()} and create a new
         * entry with the resulting value.
         *
         * @since 1.5
         */
        Remove();
    }

    } // namespace Core
    } // namespace Elastos
}
